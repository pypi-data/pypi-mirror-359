name: Build and Push Docker Image to Multiple Registries

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # Permissions: write access to packages is required for GHCR
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout the repository source code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all git history, required for setuptools-scm and metadata-action
          fetch-depth: 0

      # 2. Set lowercase repository and image names for Docker
      - name: Set lowercase repo name
        id: set_repo_name
        run: |
          echo "lowercase_repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "dockerhub_repo=$(basename '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # 3. Extract Docker metadata (tags, labels, etc.)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.set_repo_name.outputs.lowercase_repo }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.set_repo_name.outputs.dockerhub_repo }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      # 4. Log in to registries (only for push events)
      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Set up QEMU and Docker Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Build, test, and push the Docker image
      - name: Build, Test and Push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: ${{ github.event_name == 'pull_request' && 'tester' || '' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ${{ steps.meta.outputs.version != 'latest' && format('SETUPTOOLS_SCM_PRETEND_VERSION={0}', steps.meta.outputs.version) || '' }}