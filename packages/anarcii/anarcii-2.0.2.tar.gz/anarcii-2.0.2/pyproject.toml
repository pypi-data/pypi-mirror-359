[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anarcii"
version = "2.0.2"
description = "A language model suite for numbering antigen receptor sequences."
readme = "README.md"
license-files = ["LICENCE"]
authors = [
  { name = "Alexander Greenshields Watson", email = "opig@stats.ox.ac.uk" },
]
dependencies = [
  "gemmi",
  "msgpack",
  "numpy",
  "psutil",
  "sortedcontainers",
  "torch",
]

[project.scripts]
anarcii = "anarcii.cli:main"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.select = [
  "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
  "BLE", # flake8-blind-except - https://docs.astral.sh/ruff/rules/#flake8-blind-except-ble
  "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
  "S",   # flake8-bandit - https://docs.astral.sh/ruff/rules/#flake8-bandit-s
  "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
  "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
  "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
  "FA",  # flake8-future-annotations - https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
  "TID", # flake8-tidy-imports - https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
  "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
  "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"] # Allow assert statements in test files

[tool.bumpversion]
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = true
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []
