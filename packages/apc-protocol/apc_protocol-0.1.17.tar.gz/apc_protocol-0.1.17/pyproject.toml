[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "apc-protocol"
version = "0.1.17"
description = "Agent Protocol Conductor - A production-ready protocol for decentralized AI agent orchestration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "APC Contributors", email = "contributors@apc-protocol.org"},
]
maintainers = [
    {name = "APC Contributors", email = "contributors@apc-protocol.org"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Distributed Computing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["agent", "orchestration", "distributed", "ai", "protocol", "microservices", "workflow"]
requires-python = ">=3.8"
dependencies = [
    "grpcio>=1.50.0",
    "grpcio-tools>=1.50.0",
    "websockets>=10.0",
    "protobuf>=4.21.0",
    "redis>=4.0.0",
    "boto3>=1.26.0",
    "pydantic>=2.0.0",
    "structlog>=22.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
examples = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "httpx>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/deepfarkade/apc-protocol"
Documentation = "https://github.com/deepfarkade/apc-protocol/blob/main/docs/documentation.md"
Repository = "https://github.com/deepfarkade/apc-protocol"
"Bug Tracker" = "https://github.com/deepfarkade/apc-protocol/issues"
"Examples" = "https://github.com/deepfarkade/apc-protocol/tree/main/examples"
"Production Guide" = "https://github.com/deepfarkade/apc-protocol/blob/main/docs/PRODUCTION_GUIDE.md"

[project.scripts]
apc = "apc.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/apc"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]
