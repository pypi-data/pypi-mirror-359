name: Build

on: [workflow_dispatch]

jobs:
  build_wheels_mac:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        # So far has succeeded on: 
        #   * ubuntu-latest, 
        #   * macos-13,
        #   * windows-2019
        #os: [ubuntu-latest, windows-2022, macos-13, macos-14]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Detect Boost Platform
        if: ${{ matrix.os == 'macos-13' }}
        run: echo "BOOST_PLATFORM=10.15" >> "$GITHUB_ENV"

      - name: Detect Boost Platform
        if: ${{ matrix.os == 'macos-14' }}
        run: echo "BOOST_PLATFORM=14" >> "$GITHUB_ENV"

      - name: Install Boost Mac/Windows
        if: ${{ startsWith(matrix.os, 'mac') || startsWith(matrix.os, 'windows') }}
        id: install-boost
        uses: MarkusJx/install-boost@v2
        with:
            # REQUIRED: Specify the required boost version
            # A list of supported versions can be found here:
            # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
            boost_version: ${{ matrix.os == 'macos-13' && '1.79.0' || '1.81.0' }}
            # OPTIONAL: Specify a platform version
            platform_version: ${{ startsWith(matrix.os, 'windows') && '2022' || env.BOOST_PLATFORM }}
            toolset: ${{ startsWith(matrix.os, 'mac') && 'clang' || 'mingw' }}
            arch: ${{ matrix.os == 'macos-14' && 'aarch64' || 'x86' }}
            boost_install_dir: ${{github.workspace}}/external
            # NOTE: If a boost version matching all requirements cannot be found,
            # this build step will fail
    
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.0
        env:
            MACOSX_DEPLOYMENT_TARGET: ${{ matrix.os == 'macos-14' && '14.0' || '10.15' }}
            BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
            CIBW_DEBUG_KEEP_CONTAINER: True
            #Work around MacOS idiocy per https://github.com/pypa/cibuildwheel/issues/816
            CIBW_BEFORE_BUILD_LINUX: >
              sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/CentOS-*.repo &&
              sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/CentOS-*.repo &&
              sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/CentOS-*.repo &&
              yum -y -v install boost boost-thread boost-devel
            CIBW_BEFORE_BUILD_WINDOWS: pip install wheel delvewheel
            CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
              DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_ROOT/lib delocate-listdeps {wheel} &&
              DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_ROOT/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
            #CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: 
            #  ls ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib &&
            #  delvewheel show --add-path=$BOOST_ROOT/lib {wheel} &&
            #  delvewheel repair 
            #  -v 
            #  --add-path=${{ steps.install-boost.outputs.BOOST_ROOT }}/lib 
            #  --wheel-dir={dest_dir} 
            #  {wheel}
        #   CIBW_SOME_OPTION: value
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

              #- name: Manual build
              #  if: ${{ !cancelled() }}
              #  env:
              #      BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
              #  run: |
              #    python -m pip wheel ${{github.workspace}} -w dist -vvv --config-settings builddir=${{github.workspace}}\build

              #- name: Upload meson-python install plan
              #  if: ${{ !cancelled() }}
              #  uses: actions/upload-artifact@v4
              #  with:
              #    name: install-plan-${{ matrix.os }}-${{ strategy.job-index }}
              #    path: ${{github.workspace}}\build\meson-info\intro-install_plan.json

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
