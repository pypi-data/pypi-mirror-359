Metadata-Version: 2.1
Name: asyncqtpy
Version: 0.11.0
Summary: Implementation of the PEP 3156 Event-Loop with Qt using QtPy
Home-page: https://github.com/codelv/asyncqtpy
Author: G, e, r, a, r, d,  , M, a, r, u, l, l, -, P, a, r, e, t, a, s, M, a, r, k,  , H, a, r, v, i, s, t, o, n, A, r, v, e,  , K, n, u, d, s, e, n
Author-email: gerard@teslabs.com, mark.harviston@gmail.com, arve.knudsen@gmail.com, frmdstryr@gmail.com
License: BSD
Keywords: Qt,QtPy,asyncio
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Environment :: X11 Applications :: Qt
Requires-Python: >=3.9
License-File: LICENSE
Requires-Dist: qtpy

asyncqtpy - asyncio + qtpy
==========================

.. image:: https://github.com/codelv/asyncqtpy/actions/workflows/ci.yml/badge.svg
    :target: https://github.com/codelv/asyncqtpy/actions
    :alt: Build Status

.. image:: https://codecov.io/gh/codelv/asyncqtpy/branch/master/graph/badge.svg
    :target: https://codecov.io/gh/codelv/asyncqtpy
    :alt: Coverage

.. image:: https://img.shields.io/pypi/v/asyncqtpy.svg
    :target: https://pypi.python.org/pypi/asyncqtpy
    :alt: PyPI Version

.. image:: https://img.shields.io/conda/vn/conda-forge/asyncqtpy.svg
    :target: https://anaconda.org/conda-forge/asyncqtpy
    :alt: Conda Version

``asyncqtpy`` is an implementation of the ``PEP 3156`` event-loop with Qt. This
package is a fork of ``asyncqt`` updated to use qtpy and 3.9+ type hints.

Requirements
============

``asyncqtpy`` requires Python >= 3.9 and qtpy. The Qt API can be
explicitly set by using the ``QT_API`` environment variable.

Installation
============

``pip install asyncqtpy``

Examples
========

You can find usage examples in the ``examples`` folder.
