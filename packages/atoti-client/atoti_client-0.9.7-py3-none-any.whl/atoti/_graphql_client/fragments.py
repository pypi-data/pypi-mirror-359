# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/operations.gql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .._constant import Constant
from .base_model import BaseModel
from .enums import (
    AggregateProviderFilterMembershipConditionOperator,
    AggregateProviderFilterRelationalConditionOperator,
    AggregateProviderPluginKey,
    CubeRestrictionMembershipConditionOperator,
    CubeRestrictionRelationalConditionOperator,
)
from .mixins import NonNullable


class DimensionIdentifierFragment(BaseModel):
    name: str


class HierarchyIdentifierFragment(BaseModel):
    dimension: "HierarchyIdentifierFragmentDimension"
    name: str


class HierarchyIdentifierFragmentDimension(DimensionIdentifierFragment):
    pass


class LevelIdentifierFragment(BaseModel):
    hierarchy: "LevelIdentifierFragmentHierarchy"
    name: str


class LevelIdentifierFragmentHierarchy(HierarchyIdentifierFragment):
    pass


class AggregateProviderFilterFragment(BaseModel):
    filter: Optional[
        List[
            List[
                Annotated[
                    Union[
                        "AggregateProviderFilterFragmentFilterAggregateProviderFilterMembershipCondition",
                        "AggregateProviderFilterFragmentFilterAggregateProviderFilterRelationalCondition",
                    ],
                    Field(discriminator="typename__"),
                ]
            ]
        ]
    ]


class AggregateProviderFilterFragmentFilterAggregateProviderFilterMembershipCondition(
    BaseModel
):
    typename__: Literal["AggregateProviderFilterMembershipCondition"] = Field(
        alias="__typename"
    )
    elements: List[Constant]
    membership_operator: AggregateProviderFilterMembershipConditionOperator = Field(
        alias="membershipOperator"
    )
    subject: "AggregateProviderFilterFragmentFilterAggregateProviderFilterMembershipConditionSubject"


class AggregateProviderFilterFragmentFilterAggregateProviderFilterMembershipConditionSubject(
    LevelIdentifierFragment
):
    pass


class AggregateProviderFilterFragmentFilterAggregateProviderFilterRelationalCondition(
    BaseModel
):
    typename__: Literal["AggregateProviderFilterRelationalCondition"] = Field(
        alias="__typename"
    )
    relational_operator: AggregateProviderFilterRelationalConditionOperator = Field(
        alias="relationalOperator"
    )
    subject: "AggregateProviderFilterFragmentFilterAggregateProviderFilterRelationalConditionSubject"
    target: Constant


class AggregateProviderFilterFragmentFilterAggregateProviderFilterRelationalConditionSubject(
    LevelIdentifierFragment
):
    pass


class MeasureIdentifierFragment(BaseModel):
    name: str


class AggregateProviderFragment(AggregateProviderFilterFragment):
    levels: List["AggregateProviderFragmentLevels"]
    measures: Optional[List["AggregateProviderFragmentMeasures"]]
    partitioning: Optional[str]
    plugin_key: AggregateProviderPluginKey = Field(alias="pluginKey")


class AggregateProviderFragmentLevels(LevelIdentifierFragment, NonNullable):
    pass


class AggregateProviderFragmentMeasures(MeasureIdentifierFragment):
    pass


class TableIdentifierFragment(BaseModel):
    name: str


class ColumnIdentifierFragment(BaseModel):
    name: str
    table: "ColumnIdentifierFragmentTable"


class ColumnIdentifierFragmentTable(TableIdentifierFragment):
    pass


class CubeIdentifierFragment(BaseModel):
    name: str


class CubeRestrictionFragment(BaseModel):
    condition: List[
        List[
            Annotated[
                Union[
                    "CubeRestrictionFragmentConditionCubeRestrictionMembershipCondition",
                    "CubeRestrictionFragmentConditionCubeRestrictionRelationalCondition",
                ],
                Field(discriminator="typename__"),
            ]
        ]
    ]


class CubeRestrictionFragmentConditionCubeRestrictionMembershipCondition(BaseModel):
    typename__: Literal["CubeRestrictionMembershipCondition"] = Field(
        alias="__typename"
    )
    elements: List[Constant]
    membership_operator: CubeRestrictionMembershipConditionOperator = Field(
        alias="membershipOperator"
    )
    subject: "CubeRestrictionFragmentConditionCubeRestrictionMembershipConditionSubject"


class CubeRestrictionFragmentConditionCubeRestrictionMembershipConditionSubject(
    LevelIdentifierFragment
):
    pass


class CubeRestrictionFragmentConditionCubeRestrictionRelationalCondition(BaseModel):
    typename__: Literal["CubeRestrictionRelationalCondition"] = Field(
        alias="__typename"
    )
    relational_operator: CubeRestrictionRelationalConditionOperator = Field(
        alias="relationalOperator"
    )
    subject: "CubeRestrictionFragmentConditionCubeRestrictionRelationalConditionSubject"
    target: Constant


class CubeRestrictionFragmentConditionCubeRestrictionRelationalConditionSubject(
    LevelIdentifierFragment
):
    pass


class JoinIdentifierFragment(BaseModel):
    name: str
    source: "JoinIdentifierFragmentSource"


class JoinIdentifierFragmentSource(TableIdentifierFragment):
    pass


class MemberPropertyFragment(BaseModel):
    column: "MemberPropertyFragmentColumn"
    name: str


class MemberPropertyFragmentColumn(ColumnIdentifierFragment):
    pass


class SelectionFieldIdentifierFragment(BaseModel):
    column: "SelectionFieldIdentifierFragmentColumn"
    joins: List["SelectionFieldIdentifierFragmentJoins"]


class SelectionFieldIdentifierFragmentColumn(ColumnIdentifierFragment):
    pass


class SelectionFieldIdentifierFragmentJoins(JoinIdentifierFragment):
    pass


DimensionIdentifierFragment.model_rebuild()
HierarchyIdentifierFragment.model_rebuild()
LevelIdentifierFragment.model_rebuild()
AggregateProviderFilterFragment.model_rebuild()
MeasureIdentifierFragment.model_rebuild()
AggregateProviderFragment.model_rebuild()
TableIdentifierFragment.model_rebuild()
ColumnIdentifierFragment.model_rebuild()
CubeIdentifierFragment.model_rebuild()
CubeRestrictionFragment.model_rebuild()
JoinIdentifierFragment.model_rebuild()
MemberPropertyFragment.model_rebuild()
SelectionFieldIdentifierFragment.model_rebuild()
