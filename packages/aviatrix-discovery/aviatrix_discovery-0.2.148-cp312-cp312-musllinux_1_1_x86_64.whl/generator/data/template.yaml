#aws:
#  s3:
#    account: "012345678900"
#    role_name: "aviatrix-role-app"
#    name: "aviatrix-discovery-misgration"
#    region: "us-east-1"
terraform:
  terraform_output: "/home/ec2-user/demo/migration-ng/discovery_output"
  terraform_version: ">= 0.14"
  aviatrix_provider: "= 2.19.5"
  aws_provider: "~> 3.43.0"
  #enable_s3_backend: False              ## generate the basic s3 terraform resource
  #module_source: "../abc"               ## use a module with a different name or location
aviatrix:
  controller_ip: "1.1.1.1"
  controller_account: "012345678900"
  #tf_controller_access:                ## Default to "ENV". Available options are "SSM" or "ENV"
  #  mode: "SSM"                        ## When using ENV, the rest of the attributes are not needed.
  #  alias: "us_west_2"
  #  region: "us-west-2"
  #  username: "admin"
  #  password_store: "avx-admin-password"
  #  ssm_role: ""                       ## Default to "".  If defined with a role, generate assume_role statmeent in provider for SSM access, otherwise, no assume_role statement is generated.
  ## onboard an account with aviatrix-role-ec2 and aviatrix-role-app. These roles need to exist
  ## in the controller account
  #ctrl_role_app: "aviatrix-role-app"
  #ctrl_role_ec2: "aviatrix-role-ec2"
  ## Assign separate role to the gateway if required. These roles need to exist in the spoke account
  #gateway_role_app: "aviatrix-role-app"
  #gateway_role_ec2: "aviatrix-role-ec2"
#alert:
#  expect_dest_cidrs: ["0.0.0.0/0"]        ## Expected route in the route table. Use quad zero to disable alert.
#  expect_vpc_prefixes: ["0.0.0.0/0"]    ## prefix in VPC.
#config:
#  add_vpc_cidr: True                      ## Determine whether we should generate terraform code for adding VPC cidr.
#  filter_tgw_attachment_subnet: False   ## Default is False, i.e., include tgw attachment subnet in the migration
#  allow_vpc_cidrs: ["0.0.0.0/0"]       ## Only allowed VPC cidr will be passed to the browfield spoke vpc module.
#  subnet_tags:
#    - key: 'Networking-Created-Resource'
#      value: 'Do-Not-Delete-Networking-Created-Resource'
#  route_table_tags:
#    - key: 'Aviatrix-Created-Resource'
#      value: 'Do-Not-Delete-Aviatrix-Created-Resource'
#  configure_gw_name: True              ## Determine whether we should generate terraform code for accepting your spoke_gw_name and transit_gw_name inputs.
#  configure_spoke_advertisement: False  ## Determine whether we should generate terraform code for accepting your spoke_advertisement input
#  enable_spoke_egress: False
#  snat_policies:
#     - src_ip: "100.64.0.0/10"
#       connection: "$transit_name"
#       new_src_ip: "$private_ip"
#       protocol: "all"
tgw:
  tgw_account: "012345678900"             ## TGW account, set it to controller account if not using TGW.
  tgw_role: "aviatrix-role-app"           ## permission for accessing TGW account. set it to aviatrix-role-app if not using TGW.
  # tgw_by_region:
  #   us-east-1: "tgw-04067720ba42d1f13"
  #   us-west-2: "tgw-0011223374c528899"
#switch_traffic:
#  delete_tgw_route_delay: 5
#cleanup:
#  vpc_cidrs: ["100.64.0.0/25","100.127.0.0/25"]   ## VPC cidrs to be deleted
#  resources: ["VGW", "NAT", "TGW_ATTACHMENT"]
