[tool.poetry]
name = "awsjavakit-cfn-rules"
version = "0.0.30"

description = "Extendable CFN rules"
authors = ["Orestis Gkorgkas <orestis.gorgas@gmail.com>"]
readme = "README.md"
packages = [
    { include = "awsjavakit_cfn_rules", from = "src", format = ["sdist", "wheel"] }

]
package-mode = true

[tool.poetry.dependencies]
python = "^3.10.15"
cfn-lint = "^1.37.0"
attrs = "24.2.0"


[tool.poetry.group.dev.dependencies]
pytest = "8.3.4"
assertpy = "1.1"
PyYAML = '6.0.2'
Faker = "33.3.1"
PyHamcrest = "2.1.0"
pylint = "3.3.4"
ruff = "0.9.6"
isort = "6.0.0"
pyright = "1.1.400"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.urls]
Homepage = "https://github.com/awsjavakit/awsjavakit-cfn-rules"


[tool.pytest.ini_options]
python_files = "*test.py"
python_classes = "*Test"
python_functions = "should_*"
pythonpath = ["src"]


[tool.isort]
line_length = 120
[pycodestyle]
max-line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 120

[tool.pylint.messages_control]
disable = ["missing-final-newline",
    "trailing-whitespace",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "unnecessary-lambda",
    "too-few-public-methods"]



[tool.pyright]
include = ['src']
venv = ".venv"
venvPath = "."
executionEnvironments = [
      { root = "src", pythonVersion = "3.10", reportMissingImports = "error" },
]
 strictParameterNoneValue=false