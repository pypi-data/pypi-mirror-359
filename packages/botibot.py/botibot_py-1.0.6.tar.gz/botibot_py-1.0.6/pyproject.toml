[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "botibot.py"
dynamic = ["version"]
description = "A python package for Project Botibot with gpiozero integration"
readme = "README.md"
license = "MIT"
authors = [
    {name = "deJames-13", email = "de.james013@gmail.com"},
]
maintainers = [
    {name = "deJames-13", email = "de.james013@gmail.com"},
]
keywords = [
    "modules.py",
    "modules",
    "raspberry-pi",
    "microcontroller", 
    "servo",
    "oled",
    "relay",
    "infrared",
    "ultrasonic",
    "motor",
    "gpio",
    "gpiozero",
    "iot",
    "embedded",
    "hardware",
    "automation",
    "robotics",
    "project",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Topic :: Education",
    "Topic :: System :: Hardware",
    "Topic :: System :: Hardware :: Hardware Drivers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Environment :: Other Environment",
]
requires-python = ">=3.7"
dependencies = [
    "adafruit-circuitpython-ssd1306",
    "adafruit-blinka",
    "Pillow",
    "RPi.GPIO",
    "gpiozero",
    "Flask",
    "Flask-CORS", 
    "python-dateutil",
    "adafruit-circuitpython-mlx90614",
    "pyserial",
    "schedule",
    "apscheduler",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8", 
    "mypy",
    "pre-commit",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
]
full = [
    "matplotlib",
    "numpy",
    "scipy",
]

[project.urls]
Homepage = "https://github.com/deJames-13/botibot.py"
Documentation = "https://github.com/deJames-13/botibot.py/blob/main/README.md"
Repository = "https://github.com/deJames-13/botibot.py.git"
"Bug Tracker" = "https://github.com/deJames-13/botibot.py/issues"
Changelog = "https://github.com/deJames-13/botibot.py/blob/main/CHANGELOG.md"

[project.scripts]
botibot-demo = "botibot.cli:main"
botibot-servo = "botibot.cli:servo_cli_entry"
botibot-oled = "botibot.cli:oled_cli_entry"
botibot-relay = "botibot.cli:relay_cli_entry"
botibot-server = "botibot.cli:server_cli_entry"

[tool.setuptools]
packages = ["botibot", "botibot.servo", "botibot.oled", "botibot.relay", "botibot.webserver", "botibot.infrared", "botibot.ultrasonic", "botibot.motor"]

[tool.setuptools.package-data]
botibot = ["*.md", "templates/*.html", "static/css/*.css", "static/js/*.js"]

[tool.setuptools_scm]
write_to = "botibot/_version.py"

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["botibot"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "dist", "build", ".eggs"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=botibot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require hardware",
]
