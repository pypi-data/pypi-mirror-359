"""
业务问题模板库
包含各种常见业务问题的标准化分析模板和解决方案
"""

from typing import Dict, List, Any


class BusinessProblemTemplates:
    """业务问题模板类"""
    
    @staticmethod
    def get_sales_decline_template() -> Dict[str, Any]:
        """销售下降分析模板"""
        return {
            "问题类型": "销售下降",
            "分析框架": {
                "时间维度": ["同比分析", "环比分析", "趋势分析"],
                "产品维度": ["产品分类对比", "核心产品表现", "新品vs老品"],
                "地区维度": ["区域对比", "门店表现", "市场渗透率"],
                "客户维度": ["客户群体分析", "流失客户分析", "新客获取"]
            },
            "关键指标": [
                "销售收入", "销售增长率", "客单价", "成交率",
                "产品毛利率", "市场份额", "客户留存率"
            ],
            "常见原因": [
                "竞争加剧", "产品老化", "价格策略", "渠道问题",
                "市场饱和", "季节性因素", "宏观经济影响"
            ],
            "分析方法": [
                {"方法": "趋势分析", "难度": "简单", "时间": "1-2天"},
                {"方法": "多维度拆解", "难度": "中等", "时间": "3-5天"},
                {"方法": "客户流失分析", "难度": "中等", "时间": "5-7天"}
            ],
            "数据需求": {
                "必需": ["销售明细", "产品信息", "客户信息", "时间数据"],
                "有用": ["竞品数据", "市场数据", "促销记录", "客户反馈"]
            },
            "行动建议": [
                "产品策略调整", "价格优化", "渠道拓展",
                "客户关系维护", "营销活动加强"
            ]
        }
    
    @staticmethod
    def get_customer_loss_template() -> Dict[str, Any]:
        """客户流失分析模板"""
        return {
            "问题类型": "客户流失",
            "分析框架": {
                "生命周期": ["获取期", "成长期", "成熟期", "流失期"],
                "客户特征": ["人口统计", "行为特征", "价值分层", "偏好分析"],
                "流失模式": ["流失时间", "流失原因", "流失征兆", "流失成本"],
                "挽回策略": ["预警机制", "挽回措施", "重新激活", "价值恢复"]
            },
            "关键指标": [
                "客户留存率", "流失率", "客户生命周期价值",
                "获客成本", "客户满意度", "重复购买率"
            ],
            "常见原因": [
                "服务质量", "产品问题", "价格敏感", "竞争对手",
                "使用体验", "沟通不足", "期望落差"
            ],
            "分析方法": [
                {"方法": "队列分析", "难度": "中等", "时间": "3-5天"},
                {"方法": "RFM分析", "难度": "中等", "时间": "2-3天"},
                {"方法": "生存分析", "难度": "复杂", "时间": "5-7天"}
            ],
            "数据需求": {
                "必需": ["客户档案", "交易记录", "服务记录", "互动数据"],
                "有用": ["满意度调研", "客服记录", "竞品信息", "行为数据"]
            },
            "行动建议": [
                "客户细分管理", "个性化服务", "预警系统建立",
                "挽回流程优化", "客户体验改善"
            ]
        }
    
    @staticmethod
    def get_cost_increase_template() -> Dict[str, Any]:
        """成本上升分析模板"""
        return {
            "问题类型": "成本上升",
            "分析框架": {
                "成本类型": ["直接成本", "间接成本", "固定成本", "变动成本"],
                "成本动因": ["材料成本", "人工成本", "设备成本", "管理成本"],
                "成本中心": ["生产部门", "销售部门", "管理部门", "研发部门"],
                "控制方式": ["预算控制", "标准成本", "作业成本", "目标成本"]
            },
            "关键指标": [
                "总成本", "单位成本", "成本率", "成本变动率",
                "毛利率", "费用率", "成本效益比"
            ],
            "常见原因": [
                "原材料涨价", "人工成本上升", "能源价格上涨",
                "设备老化", "效率下降", "管理不善", "浪费增加"
            ],
            "分析方法": [
                {"方法": "成本结构分析", "难度": "简单", "时间": "2-3天"},
                {"方法": "变动成本分析", "难度": "中等", "时间": "3-5天"},
                {"方法": "作业成本分析", "难度": "复杂", "时间": "1-2周"}
            ],
            "数据需求": {
                "必需": ["成本明细", "预算数据", "生产数据", "财务报表"],
                "有用": ["行业基准", "供应商价格", "效率指标", "质量数据"]
            },
            "行动建议": [
                "供应链优化", "流程改进", "自动化提升",
                "成本控制制度", "绩效管理强化"
            ]
        }
    
    @staticmethod
    def get_operational_efficiency_template() -> Dict[str, Any]:
        """运营效率分析模板"""
        return {
            "问题类型": "运营效率",
            "分析框架": {
                "效率维度": ["时间效率", "资源效率", "质量效率", "成本效率"],
                "流程分析": ["流程映射", "瓶颈识别", "浪费分析", "改进机会"],
                "绩效指标": ["产出指标", "质量指标", "时间指标", "成本指标"],
                "改进方法": ["精益生产", "六西格玛", "自动化", "标准化"]
            },
            "关键指标": [
                "生产效率", "资源利用率", "周转率", "良品率",
                "准时交付率", "设备利用率", "人员效率"
            ],
            "常见原因": [
                "流程不优", "设备老化", "技能不足", "管理混乱",
                "信息不畅", "标准缺失", "激励不当"
            ],
            "分析方法": [
                {"方法": "流程分析", "难度": "中等", "时间": "3-5天"},
                {"方法": "效率对比", "难度": "简单", "时间": "2-3天"},
                {"方法": "根因分析", "难度": "中等", "时间": "5-7天"}
            ],
            "数据需求": {
                "必需": ["生产数据", "质量数据", "时间数据", "成本数据"],
                "有用": ["行业基准", "最佳实践", "设备数据", "人员数据"]
            },
            "行动建议": [
                "流程优化", "技能培训", "设备更新",
                "管理制度完善", "激励机制调整"
            ]
        }


class AnalysisWorkflowTemplates:
    """分析工作流模板类"""
    
    @staticmethod
    def get_quick_analysis_workflow() -> Dict[str, Any]:
        """快速分析工作流（1周内）"""
        return {
            "适用场景": "紧急问题、简单分析、资源有限",
            "时间安排": "5-7天",
            "工作流程": {
                "第1天": {
                    "任务": "问题定义和数据收集",
                    "产出": "问题描述、数据清单",
                    "时间": "4-6小时"
                },
                "第2-3天": {
                    "任务": "数据整理和基础分析",
                    "产出": "清洁数据、基础图表",
                    "时间": "8-12小时"
                },
                "第4-5天": {
                    "任务": "深入分析和洞察提取",
                    "产出": "分析结果、关键发现",
                    "时间": "8-10小时"
                },
                "第6-7天": {
                    "任务": "报告撰写和汇报准备",
                    "产出": "分析报告、行动建议",
                    "时间": "4-6小时"
                }
            },
            "关键成功因素": [
                "重点突出核心问题",
                "使用现有数据和工具",
                "采用简单直接的分析方法",
                "快速迭代和验证"
            ]
        }
    
    @staticmethod
    def get_standard_analysis_workflow() -> Dict[str, Any]:
        """标准分析工作流（2-4周）"""
        return {
            "适用场景": "常规业务问题、中等复杂度、标准资源",
            "时间安排": "2-4周",
            "工作流程": {
                "第1周": {
                    "任务": "需求分析和计划制定",
                    "产出": "分析计划、项目章程",
                    "关键活动": ["利益相关者访谈", "数据需求分析", "方法选择"]
                },
                "第2周": {
                    "任务": "数据收集和预处理",
                    "产出": "完整数据集、数据质量报告",
                    "关键活动": ["数据获取", "清理验证", "探索性分析"]
                },
                "第3周": {
                    "任务": "深度分析和建模",
                    "产出": "分析模型、核心洞察",
                    "关键活动": ["多维分析", "因果分析", "预测建模"]
                },
                "第4周": {
                    "任务": "结果整合和汇报",
                    "产出": "最终报告、实施方案",
                    "关键活动": ["结果验证", "方案设计", "汇报演示"]
                }
            },
            "质量检查点": [
                "数据质量验证", "分析方法确认",
                "中期结果评估", "最终结果审核"
            ]
        }
    
    @staticmethod
    def get_comprehensive_analysis_workflow() -> Dict[str, Any]:
        """综合分析工作流（1-3个月）"""
        return {
            "适用场景": "战略性问题、高复杂度、充足资源",
            "时间安排": "1-3个月",
            "工作流程": {
                "第1阶段（2-3周）": {
                    "任务": "项目启动和基础研究",
                    "产出": "项目计划、基础研究报告",
                    "关键活动": ["战略对齐", "外部研究", "基准分析"]
                },
                "第2阶段（3-4周）": {
                    "任务": "数据收集和环境分析",
                    "产出": "完整数据集、环境分析",
                    "关键活动": ["内外部数据", "竞争分析", "趋势研究"]
                },
                "第3阶段（4-6周）": {
                    "任务": "深度分析和建模",
                    "产出": "分析模型、预测结果",
                    "关键活动": ["高级分析", "场景分析", "敏感性分析"]
                },
                "第4阶段（2-3周）": {
                    "任务": "方案设计和验证",
                    "产出": "实施方案、风险评估",
                    "关键活动": ["方案设计", "影响评估", "风险分析"]
                },
                "第5阶段（1-2周）": {
                    "任务": "最终整合和汇报",
                    "产出": "综合报告、实施路线图",
                    "关键活动": ["结果整合", "汇报准备", "实施规划"]
                }
            },
            "治理机制": [
                "指导委员会", "专家评审",
                "阶段性汇报", "持续沟通"
            ]
        }


def get_problem_template(problem_type: str) -> Dict[str, Any]:
    """获取指定类型的问题分析模板"""
    
    template_map = {
        "sales_decline": BusinessProblemTemplates.get_sales_decline_template,
        "customer_loss": BusinessProblemTemplates.get_customer_loss_template,
        "cost_increase": BusinessProblemTemplates.get_cost_increase_template,
        "operational_efficiency": BusinessProblemTemplates.get_operational_efficiency_template
    }
    
    template_func = template_map.get(problem_type)
    if template_func:
        return template_func()
    else:
        # 返回通用模板
        return get_generic_template()


def get_workflow_template(complexity: str) -> Dict[str, Any]:
    """获取指定复杂度的工作流模板"""
    
    workflow_map = {
        "quick": AnalysisWorkflowTemplates.get_quick_analysis_workflow,
        "standard": AnalysisWorkflowTemplates.get_standard_analysis_workflow,
        "comprehensive": AnalysisWorkflowTemplates.get_comprehensive_analysis_workflow
    }
    
    workflow_func = workflow_map.get(complexity, workflow_map["standard"])
    return workflow_func()


def get_generic_template() -> Dict[str, Any]:
    """通用业务问题分析模板"""
    return {
        "问题类型": "通用业务分析",
        "分析框架": {
            "问题定义": ["现状描述", "问题识别", "目标设定", "成功标准"],
            "数据分析": ["数据收集", "数据清理", "探索分析", "深度分析"],
            "洞察提取": ["模式识别", "原因分析", "影响评估", "机会识别"],
            "方案设计": ["解决方案", "实施计划", "风险评估", "效果预期"]
        },
        "关键指标": [
            "核心业务指标", "过程指标", "结果指标", "影响指标"
        ],
        "分析方法": [
            {"方法": "描述性分析", "难度": "简单", "时间": "1-2天"},
            {"方法": "对比分析", "难度": "简单", "时间": "2-3天"},
            {"方法": "趋势分析", "难度": "中等", "时间": "3-5天"},
            {"方法": "关联分析", "难度": "中等", "时间": "5-7天"}
        ],
        "数据需求": {
            "必需": ["业务数据", "绩效数据", "时间数据", "维度数据"],
            "有用": ["外部数据", "基准数据", "定性数据", "历史数据"]
        },
        "行动建议": [
            "现状优化", "流程改进", "资源调整", "能力提升", "机制完善"
        ]
    }


def get_industry_specific_templates() -> Dict[str, Dict[str, Any]]:
    """获取行业特定的分析模板"""
    return {
        "零售": {
            "核心指标": ["销售额", "客流量", "转化率", "客单价", "库存周转"],
            "关键维度": ["门店", "商品", "时间", "客户", "促销"],
            "常见问题": ["销售下滑", "库存积压", "客户流失", "毛利下降"],
            "分析重点": ["选址分析", "商品分析", "价格分析", "促销效果"]
        },
        "制造": {
            "核心指标": ["产量", "质量", "成本", "效率", "交付"],
            "关键维度": ["产品", "工艺", "设备", "人员", "供应链"],
            "常见问题": ["成本上升", "质量问题", "效率低下", "交付延误"],
            "分析重点": ["生产分析", "质量分析", "成本分析", "供应链分析"]
        },
        "服务": {
            "核心指标": ["收入", "客户满意度", "服务质量", "响应时间", "成本"],
            "关键维度": ["服务类型", "客户群体", "渠道", "人员", "流程"],
            "常见问题": ["服务质量", "客户投诉", "成本控制", "人员流失"],
            "分析重点": ["服务分析", "客户分析", "流程分析", "人员分析"]
        },
        "电商": {
            "核心指标": ["GMV", "流量", "转化率", "客单价", "复购率"],
            "关键维度": ["商品", "流量来源", "用户行为", "营销活动", "季节"],
            "常见问题": ["流量下降", "转化率低", "获客成本高", "用户流失"],
            "分析重点": ["流量分析", "转化分析", "用户分析", "商品分析"]
        }
    }


def get_analysis_checklist() -> Dict[str, List[str]]:
    """获取业务分析检查清单"""
    return {
        "项目启动": [
            "明确分析目标和范围",
            "识别关键利益相关者",
            "确定成功标准和交付物",
            "评估资源和时间安排",
            "建立项目沟通机制"
        ],
        "数据准备": [
            "识别所需数据源",
            "评估数据可用性和质量",
            "建立数据收集计划",
            "设计数据验证流程",
            "准备数据备份方案"
        ],
        "分析执行": [
            "选择合适的分析方法",
            "建立分析框架和流程",
            "执行探索性数据分析",
            "进行深度分析和建模",
            "验证分析结果的可靠性"
        ],
        "洞察提取": [
            "识别关键模式和趋势",
            "分析异常值和特殊情况",
            "评估发现的业务意义",
            "验证洞察的逻辑性",
            "考虑外部环境因素"
        ],
        "方案设计": [
            "基于洞察设计解决方案",
            "评估方案的可行性",
            "估算实施成本和收益",
            "识别实施风险和挑战",
            "制定实施计划和时间表"
        ],
        "成果交付": [
            "准备清晰的分析报告",
            "设计有效的可视化图表",
            "制定可操作的行动建议",
            "建立效果跟踪机制",
            "安排成果汇报和讨论"
        ]
    } 