[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "business-bi-mcp"
version = "0.1.4"
description = "智能BI助手 MCP - 专为业务设计的数据分析MCP，提供7个核心BI分析工具"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "BI MCP Team", email = "contact@business-bi-mcp.com"},
]
maintainers = [
    {name = "BI MCP Team", email = "contact@business-bi-mcp.com"},
]
keywords = [
    "business-intelligence", 
    "data-analysis", 
    "mcp", 
    "business-analytics", 
    "non-technical", 
    "bi-tools",
    "data-insights",
    "business-decision",
    "chinese",
    "analytics"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
]
dependencies = [
    "fastmcp>=2.10.1",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
]

[project.urls]
Homepage = "https://github.com/business-bi-mcp/business-bi-mcp"
Documentation = "https://github.com/business-bi-mcp/business-bi-mcp#readme"
Repository = "https://github.com/business-bi-mcp/business-bi-mcp.git"
Issues = "https://github.com/business-bi-mcp/business-bi-mcp/issues"
Changelog = "https://github.com/business-bi-mcp/business-bi-mcp/releases"
"Bug Reports" = "https://github.com/business-bi-mcp/business-bi-mcp/issues"
"Source Code" = "https://github.com/business-bi-mcp/business-bi-mcp"

[project.scripts]
business-bi-mcp = "main:main"
bi-mcp = "main:main"
business-bi-mcp-http = "main_http:main"
bi-mcp-http = "main_http:main"
business-bi-mcp-start = "start_mcp:main"
bi-mcp-start = "start_mcp:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]
legacy = [
    "mcp[cli]>=1.10.1",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
]

# 包配置 - 明确指定要包含的内容
[tool.setuptools]
py-modules = ["main"]

[tool.setuptools.packages.find]
include = ["core", "core.*", "tools", "tools.*", "templates", "templates.*", "utils", "utils.*"]
exclude = ["tests*", "*tests*", "test_*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml", "*.json"]
"core" = ["*.py"]
"tools" = ["*.py"]
"templates" = ["*.py"]
"utils" = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.coverage.run]
source = ["core", "tools", "templates", "utils"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
