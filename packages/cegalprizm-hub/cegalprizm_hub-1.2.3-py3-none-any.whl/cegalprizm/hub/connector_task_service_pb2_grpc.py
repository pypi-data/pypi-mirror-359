# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cegalprizm.hub import connector_task_service_pb2 as cegalprizm_dot_hub_dot_connector__task__service__pb2


class ConnectorTaskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DoConnectorTasks = channel.stream_stream(
                '/hub.ConnectorTaskService/DoConnectorTasks',
                request_serializer=cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorResponse.SerializeToString,
                response_deserializer=cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorTask.FromString,
                )


class ConnectorTaskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DoConnectorTasks(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectorTaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DoConnectorTasks': grpc.stream_stream_rpc_method_handler(
                    servicer.DoConnectorTasks,
                    request_deserializer=cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorResponse.FromString,
                    response_serializer=cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorTask.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hub.ConnectorTaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConnectorTaskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DoConnectorTasks(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/hub.ConnectorTaskService/DoConnectorTasks',
            cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorResponse.SerializeToString,
            cegalprizm_dot_hub_dot_connector__task__service__pb2.ConnectorTask.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
