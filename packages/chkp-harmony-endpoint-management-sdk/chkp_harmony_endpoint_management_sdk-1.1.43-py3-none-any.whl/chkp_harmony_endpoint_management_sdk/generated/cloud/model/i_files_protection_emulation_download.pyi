# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IFilesProtectionEmulationDownload(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def encryptionFailCloseMode() -> typing.Type['FailCloseMode']:
                return FailCloseMode
        
            @staticmethod
            def failCloseMode() -> typing.Type['FailCloseMode']:
                return FailCloseMode
        
            @staticmethod
            def notificationsMode() -> typing.Type['NotificationsMode']:
                return NotificationsMode
        
            @staticmethod
            def threatExtraction() -> typing.Type['IFilesProtectionEmulationDownloadThreatExtraction']:
                return IFilesProtectionEmulationDownloadThreatExtraction
        
            @staticmethod
            def fileActions() -> typing.Type['IFilesProtectionEmulationDownloadFileActions']:
                return IFilesProtectionEmulationDownloadFileActions
            __annotations__ = {
                "encryptionFailCloseMode": encryptionFailCloseMode,
                "failCloseMode": failCloseMode,
                "notificationsMode": notificationsMode,
                "threatExtraction": threatExtraction,
                "fileActions": fileActions,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encryptionFailCloseMode"]) -> 'FailCloseMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["failCloseMode"]) -> 'FailCloseMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notificationsMode"]) -> 'NotificationsMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["threatExtraction"]) -> 'IFilesProtectionEmulationDownloadThreatExtraction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileActions"]) -> 'IFilesProtectionEmulationDownloadFileActions': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["encryptionFailCloseMode"], typing_extensions.Literal["failCloseMode"], typing_extensions.Literal["notificationsMode"], typing_extensions.Literal["threatExtraction"], typing_extensions.Literal["fileActions"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encryptionFailCloseMode"]) -> typing.Union['FailCloseMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["failCloseMode"]) -> typing.Union['FailCloseMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notificationsMode"]) -> typing.Union['NotificationsMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["threatExtraction"]) -> typing.Union['IFilesProtectionEmulationDownloadThreatExtraction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileActions"]) -> typing.Union['IFilesProtectionEmulationDownloadFileActions', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["encryptionFailCloseMode"], typing_extensions.Literal["failCloseMode"], typing_extensions.Literal["notificationsMode"], typing_extensions.Literal["threatExtraction"], typing_extensions.Literal["fileActions"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        encryptionFailCloseMode: typing.Union['FailCloseMode', schemas.Unset] = schemas.unset,
        failCloseMode: typing.Union['FailCloseMode', schemas.Unset] = schemas.unset,
        notificationsMode: typing.Union['NotificationsMode', schemas.Unset] = schemas.unset,
        threatExtraction: typing.Union['IFilesProtectionEmulationDownloadThreatExtraction', schemas.Unset] = schemas.unset,
        fileActions: typing.Union['IFilesProtectionEmulationDownloadFileActions', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IFilesProtectionEmulationDownload':
        return super().__new__(
            cls,
            *_args,
            encryptionFailCloseMode=encryptionFailCloseMode,
            failCloseMode=failCloseMode,
            notificationsMode=notificationsMode,
            threatExtraction=threatExtraction,
            fileActions=fileActions,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.fail_close_mode import FailCloseMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_download_file_actions import IFilesProtectionEmulationDownloadFileActions
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_download_threat_extraction import IFilesProtectionEmulationDownloadThreatExtraction
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.notifications_mode import NotificationsMode
