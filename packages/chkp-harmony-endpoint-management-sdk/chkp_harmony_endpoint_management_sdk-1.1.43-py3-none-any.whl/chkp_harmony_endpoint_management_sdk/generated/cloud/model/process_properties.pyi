# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class ProcessProperties(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    
    @schemas.classproperty
    def SI(cls):
        return cls("SI")
    
    @schemas.classproperty
    def HANDLES(cls):
        return cls("Handles")
    
    @schemas.classproperty
    def VM(cls):
        return cls("VM")
    
    @schemas.classproperty
    def WS(cls):
        return cls("WS")
    
    @schemas.classproperty
    def PM(cls):
        return cls("PM")
    
    @schemas.classproperty
    def NPM(cls):
        return cls("NPM")
    
    @schemas.classproperty
    def PATH(cls):
        return cls("Path")
    
    @schemas.classproperty
    def CPU(cls):
        return cls("CPU")
    
    @schemas.classproperty
    def EXIT_CODE(cls):
        return cls("ExitCode")
    
    @schemas.classproperty
    def EXIT_TIME(cls):
        return cls("ExitTime")
    
    @schemas.classproperty
    def HANDLE(cls):
        return cls("Handle")
    
    @schemas.classproperty
    def HANDLE_COUNT(cls):
        return cls("HandleCount")
    
    @schemas.classproperty
    def HAS_EXITED(cls):
        return cls("HasExited")
    
    @schemas.classproperty
    def ID(cls):
        return cls("Id")
    
    @schemas.classproperty
    def MACHINE_NAME(cls):
        return cls("MachineName")
    
    @schemas.classproperty
    def MAIN_MODULE(cls):
        return cls("MainModule")
    
    @schemas.classproperty
    def MAIN_WINDOW_HANDLE(cls):
        return cls("MainWindowHandle")
    
    @schemas.classproperty
    def MAIN_WINDOW_TITLE(cls):
        return cls("MainWindowTitle")
    
    @schemas.classproperty
    def MAX_WORKING_SET(cls):
        return cls("MaxWorkingSet")
    
    @schemas.classproperty
    def MIN_WORKING_SET(cls):
        return cls("MinWorkingSet")
    
    @schemas.classproperty
    def MODULES(cls):
        return cls("Modules")
    
    @schemas.classproperty
    def NONPAGED_SYSTEM_MEMORY_SIZE(cls):
        return cls("NonpagedSystemMemorySize")
    
    @schemas.classproperty
    def NONPAGED_SYSTEM_MEMORY_SIZE64(cls):
        return cls("NonpagedSystemMemorySize64")
    
    @schemas.classproperty
    def PAGED_MEMORY_SIZE(cls):
        return cls("PagedMemorySize")
    
    @schemas.classproperty
    def PAGED_MEMORY_SIZE64(cls):
        return cls("PagedMemorySize64")
    
    @schemas.classproperty
    def PAGED_SYSTEM_MEMORY_SIZE(cls):
        return cls("PagedSystemMemorySize")
    
    @schemas.classproperty
    def PAGED_SYSTEM_MEMORY_SIZE64(cls):
        return cls("PagedSystemMemorySize64")
    
    @schemas.classproperty
    def PEAK_PAGED_MEMORY_SIZE(cls):
        return cls("PeakPagedMemorySize")
    
    @schemas.classproperty
    def PEAK_PAGED_MEMORY_SIZE64(cls):
        return cls("PeakPagedMemorySize64")
    
    @schemas.classproperty
    def PEAK_VIRTUAL_MEMORY_SIZE(cls):
        return cls("PeakVirtualMemorySize")
    
    @schemas.classproperty
    def PEAK_VIRTUAL_MEMORY_SIZE64(cls):
        return cls("PeakVirtualMemorySize64")
    
    @schemas.classproperty
    def PEAK_WORKING_SET(cls):
        return cls("PeakWorkingSet")
    
    @schemas.classproperty
    def PEAK_WORKING_SET64(cls):
        return cls("PeakWorkingSet64")
    
    @schemas.classproperty
    def PRIORITY_BOOST_ENABLED(cls):
        return cls("PriorityBoostEnabled")
    
    @schemas.classproperty
    def PRIORITY_CLASS(cls):
        return cls("PriorityClass")
    
    @schemas.classproperty
    def PRIVATE_MEMORY_SIZE(cls):
        return cls("PrivateMemorySize")
    
    @schemas.classproperty
    def PRIVATE_MEMORY_SIZE64(cls):
        return cls("PrivateMemorySize64")
    
    @schemas.classproperty
    def PRIVILEGED_PROCESSOR_TIME(cls):
        return cls("PrivilegedProcessorTime")
    
    @schemas.classproperty
    def PROCESS_NAME(cls):
        return cls("ProcessName")
    
    @schemas.classproperty
    def PROCESSOR_AFFINITY(cls):
        return cls("ProcessorAffinity")
    
    @schemas.classproperty
    def RESPONDING(cls):
        return cls("Responding")
    
    @schemas.classproperty
    def SAFE_HANDLE(cls):
        return cls("SafeHandle")
    
    @schemas.classproperty
    def SESSION_ID(cls):
        return cls("SessionId")
    
    @schemas.classproperty
    def STANDARD_ERROR(cls):
        return cls("StandardError")
    
    @schemas.classproperty
    def STANDARD_INPUT(cls):
        return cls("StandardInput")
    
    @schemas.classproperty
    def STANDARD_OUTPUT(cls):
        return cls("StandardOutput")
    
    @schemas.classproperty
    def START_INFO(cls):
        return cls("StartInfo")
    
    @schemas.classproperty
    def START_TIME(cls):
        return cls("StartTime")
    
    @schemas.classproperty
    def SYNCHRONIZING_OBJECT(cls):
        return cls("SynchronizingObject")
    
    @schemas.classproperty
    def THREADS(cls):
        return cls("Threads")
    
    @schemas.classproperty
    def TOTAL_PROCESSOR_TIME(cls):
        return cls("TotalProcessorTime")
    
    @schemas.classproperty
    def USER_PROCESSOR_TIME(cls):
        return cls("UserProcessorTime")
    
    @schemas.classproperty
    def VIRTUAL_MEMORY_SIZE(cls):
        return cls("VirtualMemorySize")
    
    @schemas.classproperty
    def VIRTUAL_MEMORY_SIZE64(cls):
        return cls("VirtualMemorySize64")
    
    @schemas.classproperty
    def WORKING_SET(cls):
        return cls("WorkingSet")
    
    @schemas.classproperty
    def WORKING_SET64(cls):
        return cls("WorkingSet64")
