# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class ThreatEmulation(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            teAvailability = schemas.StrSchema
            teOverloaded = schemas.StrSchema
            teReputation = schemas.StrSchema
            saLastUpdate = schemas.StrSchema
            ofrLastUpdate = schemas.StrSchema
            __annotations__ = {
                "teAvailability": teAvailability,
                "teOverloaded": teOverloaded,
                "teReputation": teReputation,
                "saLastUpdate": saLastUpdate,
                "ofrLastUpdate": ofrLastUpdate,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["teAvailability"]) -> MetaOapg.properties.teAvailability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["teOverloaded"]) -> MetaOapg.properties.teOverloaded: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["teReputation"]) -> MetaOapg.properties.teReputation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["saLastUpdate"]) -> MetaOapg.properties.saLastUpdate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ofrLastUpdate"]) -> MetaOapg.properties.ofrLastUpdate: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["teAvailability"], typing_extensions.Literal["teOverloaded"], typing_extensions.Literal["teReputation"], typing_extensions.Literal["saLastUpdate"], typing_extensions.Literal["ofrLastUpdate"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["teAvailability"]) -> typing.Union[MetaOapg.properties.teAvailability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["teOverloaded"]) -> typing.Union[MetaOapg.properties.teOverloaded, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["teReputation"]) -> typing.Union[MetaOapg.properties.teReputation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["saLastUpdate"]) -> typing.Union[MetaOapg.properties.saLastUpdate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ofrLastUpdate"]) -> typing.Union[MetaOapg.properties.ofrLastUpdate, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["teAvailability"], typing_extensions.Literal["teOverloaded"], typing_extensions.Literal["teReputation"], typing_extensions.Literal["saLastUpdate"], typing_extensions.Literal["ofrLastUpdate"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        teAvailability: typing.Union[MetaOapg.properties.teAvailability, str, schemas.Unset] = schemas.unset,
        teOverloaded: typing.Union[MetaOapg.properties.teOverloaded, str, schemas.Unset] = schemas.unset,
        teReputation: typing.Union[MetaOapg.properties.teReputation, str, schemas.Unset] = schemas.unset,
        saLastUpdate: typing.Union[MetaOapg.properties.saLastUpdate, str, schemas.Unset] = schemas.unset,
        ofrLastUpdate: typing.Union[MetaOapg.properties.ofrLastUpdate, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ThreatEmulation':
        return super().__new__(
            cls,
            *_args,
            teAvailability=teAvailability,
            teOverloaded=teOverloaded,
            teReputation=teReputation,
            saLastUpdate=saLastUpdate,
            ofrLastUpdate=ofrLastUpdate,
            _configuration=_configuration,
        )
