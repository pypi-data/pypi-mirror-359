# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class AlertMailSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "supportedTags",
        }
        
        class properties:
            
            
            class supportedTags(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OverviewAlertDynamicTag']:
                        return OverviewAlertDynamicTag
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OverviewAlertDynamicTag'], typing.List['OverviewAlertDynamicTag']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'supportedTags':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OverviewAlertDynamicTag':
                    return super().__getitem__(i)
            shouldIncludeAlertReportAttachment = schemas.BoolSchema
            
            
            class recipientAddresses(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'recipientAddresses':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            subject = schemas.StrSchema
            body = schemas.StrSchema
            __annotations__ = {
                "supportedTags": supportedTags,
                "shouldIncludeAlertReportAttachment": shouldIncludeAlertReportAttachment,
                "recipientAddresses": recipientAddresses,
                "subject": subject,
                "body": body,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    supportedTags: MetaOapg.properties.supportedTags
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportedTags"]) -> MetaOapg.properties.supportedTags: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shouldIncludeAlertReportAttachment"]) -> MetaOapg.properties.shouldIncludeAlertReportAttachment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientAddresses"]) -> MetaOapg.properties.recipientAddresses: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subject"]) -> MetaOapg.properties.subject: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["body"]) -> MetaOapg.properties.body: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["supportedTags"], typing_extensions.Literal["shouldIncludeAlertReportAttachment"], typing_extensions.Literal["recipientAddresses"], typing_extensions.Literal["subject"], typing_extensions.Literal["body"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportedTags"]) -> MetaOapg.properties.supportedTags: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shouldIncludeAlertReportAttachment"]) -> typing.Union[MetaOapg.properties.shouldIncludeAlertReportAttachment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientAddresses"]) -> typing.Union[MetaOapg.properties.recipientAddresses, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subject"]) -> typing.Union[MetaOapg.properties.subject, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["body"]) -> typing.Union[MetaOapg.properties.body, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["supportedTags"], typing_extensions.Literal["shouldIncludeAlertReportAttachment"], typing_extensions.Literal["recipientAddresses"], typing_extensions.Literal["subject"], typing_extensions.Literal["body"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        supportedTags: typing.Union[MetaOapg.properties.supportedTags, list, tuple, ],
        shouldIncludeAlertReportAttachment: typing.Union[MetaOapg.properties.shouldIncludeAlertReportAttachment, bool, schemas.Unset] = schemas.unset,
        recipientAddresses: typing.Union[MetaOapg.properties.recipientAddresses, list, tuple, schemas.Unset] = schemas.unset,
        subject: typing.Union[MetaOapg.properties.subject, str, schemas.Unset] = schemas.unset,
        body: typing.Union[MetaOapg.properties.body, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AlertMailSettings':
        return super().__new__(
            cls,
            *_args,
            supportedTags=supportedTags,
            shouldIncludeAlertReportAttachment=shouldIncludeAlertReportAttachment,
            recipientAddresses=recipientAddresses,
            subject=subject,
            body=body,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.saas.model.overview_alert_dynamic_tag import OverviewAlertDynamicTag
