# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class FdePrebootStatus(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "totalDisabled",
            "totalEnabled",
            "totalNotInstalled",
            "totalTemporarilyDisabled",
            "totalCount",
        }
        
        class properties:
            totalCount = schemas.Float64Schema
            totalEnabled = schemas.Float64Schema
            totalDisabled = schemas.Float64Schema
            totalTemporarilyDisabled = schemas.Float64Schema
            totalNotInstalled = schemas.Float64Schema
            __annotations__ = {
                "totalCount": totalCount,
                "totalEnabled": totalEnabled,
                "totalDisabled": totalDisabled,
                "totalTemporarilyDisabled": totalTemporarilyDisabled,
                "totalNotInstalled": totalNotInstalled,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    totalDisabled: MetaOapg.properties.totalDisabled
    totalEnabled: MetaOapg.properties.totalEnabled
    totalNotInstalled: MetaOapg.properties.totalNotInstalled
    totalTemporarilyDisabled: MetaOapg.properties.totalTemporarilyDisabled
    totalCount: MetaOapg.properties.totalCount
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalDisabled"]) -> MetaOapg.properties.totalDisabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalEnabled"]) -> MetaOapg.properties.totalEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalNotInstalled"]) -> MetaOapg.properties.totalNotInstalled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalTemporarilyDisabled"]) -> MetaOapg.properties.totalTemporarilyDisabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["totalDisabled"], typing_extensions.Literal["totalEnabled"], typing_extensions.Literal["totalNotInstalled"], typing_extensions.Literal["totalTemporarilyDisabled"], typing_extensions.Literal["totalCount"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalDisabled"]) -> MetaOapg.properties.totalDisabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalEnabled"]) -> MetaOapg.properties.totalEnabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalNotInstalled"]) -> MetaOapg.properties.totalNotInstalled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalTemporarilyDisabled"]) -> MetaOapg.properties.totalTemporarilyDisabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["totalDisabled"], typing_extensions.Literal["totalEnabled"], typing_extensions.Literal["totalNotInstalled"], typing_extensions.Literal["totalTemporarilyDisabled"], typing_extensions.Literal["totalCount"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        totalDisabled: typing.Union[MetaOapg.properties.totalDisabled, decimal.Decimal, int, float, ],
        totalEnabled: typing.Union[MetaOapg.properties.totalEnabled, decimal.Decimal, int, float, ],
        totalNotInstalled: typing.Union[MetaOapg.properties.totalNotInstalled, decimal.Decimal, int, float, ],
        totalTemporarilyDisabled: typing.Union[MetaOapg.properties.totalTemporarilyDisabled, decimal.Decimal, int, float, ],
        totalCount: typing.Union[MetaOapg.properties.totalCount, decimal.Decimal, int, float, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FdePrebootStatus':
        return super().__new__(
            cls,
            *_args,
            totalDisabled=totalDisabled,
            totalEnabled=totalEnabled,
            totalNotInstalled=totalNotInstalled,
            totalTemporarilyDisabled=totalTemporarilyDisabled,
            totalCount=totalCount,
            _configuration=_configuration,
        )
