# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class PublicManageEndpointsInput(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    machineId - endpoint service identifier
    """

    class MetaOapg:
        required = {
            "action",
            "machinesId",
        }
        
        class properties:
            
            
            class machinesId(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'machinesId':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
        
            @staticmethod
            def action() -> typing.Type['ManageTenantEndpointServerAction']:
                return ManageTenantEndpointServerAction
            __annotations__ = {
                "machinesId": machinesId,
                "action": action,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    action: 'ManageTenantEndpointServerAction'
    machinesId: MetaOapg.properties.machinesId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["action"]) -> 'ManageTenantEndpointServerAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["machinesId"]) -> MetaOapg.properties.machinesId: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["action"], typing_extensions.Literal["machinesId"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["action"]) -> 'ManageTenantEndpointServerAction': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["machinesId"]) -> MetaOapg.properties.machinesId: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["action"], typing_extensions.Literal["machinesId"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        action: 'ManageTenantEndpointServerAction',
        machinesId: typing.Union[MetaOapg.properties.machinesId, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PublicManageEndpointsInput':
        return super().__new__(
            cls,
            *_args,
            action=action,
            machinesId=machinesId,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.saas.model.manage_tenant_endpoint_server_action import ManageTenantEndpointServerAction
