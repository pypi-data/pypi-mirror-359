# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class EndpointForServers(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            profilesPolicy6 = schemas.StrSchema
            profilesPolicy11 = schemas.StrSchema
            profilesPolicy20 = schemas.StrSchema
            profilesPolicy10 = schemas.StrSchema
            profilesPolicy130 = schemas.StrSchema
            profilesPolicy51 = schemas.StrSchema
            profilesPolicy30 = schemas.StrSchema
            profilesPolicy45 = schemas.StrSchema
            profilesPolicy91 = schemas.StrSchema
            profilesPolicy22 = schemas.StrSchema
            profilesPolicy35 = schemas.StrSchema
            profilesPolicy60 = schemas.StrSchema
            profilesPolicy120 = schemas.StrSchema
            profilesPolicy100 = schemas.StrSchema
            profilesPolicy55 = schemas.StrSchema
            allPolicies = schemas.StrSchema
            __annotations__ = {
                "profilesPolicy6": profilesPolicy6,
                "profilesPolicy11": profilesPolicy11,
                "profilesPolicy20": profilesPolicy20,
                "profilesPolicy10": profilesPolicy10,
                "profilesPolicy130": profilesPolicy130,
                "profilesPolicy51": profilesPolicy51,
                "profilesPolicy30": profilesPolicy30,
                "profilesPolicy45": profilesPolicy45,
                "profilesPolicy91": profilesPolicy91,
                "profilesPolicy22": profilesPolicy22,
                "profilesPolicy35": profilesPolicy35,
                "profilesPolicy60": profilesPolicy60,
                "profilesPolicy120": profilesPolicy120,
                "profilesPolicy100": profilesPolicy100,
                "profilesPolicy55": profilesPolicy55,
                "allPolicies": allPolicies,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy6"]) -> MetaOapg.properties.profilesPolicy6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy11"]) -> MetaOapg.properties.profilesPolicy11: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy20"]) -> MetaOapg.properties.profilesPolicy20: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy10"]) -> MetaOapg.properties.profilesPolicy10: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy130"]) -> MetaOapg.properties.profilesPolicy130: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy51"]) -> MetaOapg.properties.profilesPolicy51: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy30"]) -> MetaOapg.properties.profilesPolicy30: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy45"]) -> MetaOapg.properties.profilesPolicy45: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy91"]) -> MetaOapg.properties.profilesPolicy91: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy22"]) -> MetaOapg.properties.profilesPolicy22: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy35"]) -> MetaOapg.properties.profilesPolicy35: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy60"]) -> MetaOapg.properties.profilesPolicy60: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy120"]) -> MetaOapg.properties.profilesPolicy120: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy100"]) -> MetaOapg.properties.profilesPolicy100: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profilesPolicy55"]) -> MetaOapg.properties.profilesPolicy55: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allPolicies"]) -> MetaOapg.properties.allPolicies: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["profilesPolicy6"], typing_extensions.Literal["profilesPolicy11"], typing_extensions.Literal["profilesPolicy20"], typing_extensions.Literal["profilesPolicy10"], typing_extensions.Literal["profilesPolicy130"], typing_extensions.Literal["profilesPolicy51"], typing_extensions.Literal["profilesPolicy30"], typing_extensions.Literal["profilesPolicy45"], typing_extensions.Literal["profilesPolicy91"], typing_extensions.Literal["profilesPolicy22"], typing_extensions.Literal["profilesPolicy35"], typing_extensions.Literal["profilesPolicy60"], typing_extensions.Literal["profilesPolicy120"], typing_extensions.Literal["profilesPolicy100"], typing_extensions.Literal["profilesPolicy55"], typing_extensions.Literal["allPolicies"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy6"]) -> typing.Union[MetaOapg.properties.profilesPolicy6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy11"]) -> typing.Union[MetaOapg.properties.profilesPolicy11, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy20"]) -> typing.Union[MetaOapg.properties.profilesPolicy20, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy10"]) -> typing.Union[MetaOapg.properties.profilesPolicy10, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy130"]) -> typing.Union[MetaOapg.properties.profilesPolicy130, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy51"]) -> typing.Union[MetaOapg.properties.profilesPolicy51, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy30"]) -> typing.Union[MetaOapg.properties.profilesPolicy30, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy45"]) -> typing.Union[MetaOapg.properties.profilesPolicy45, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy91"]) -> typing.Union[MetaOapg.properties.profilesPolicy91, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy22"]) -> typing.Union[MetaOapg.properties.profilesPolicy22, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy35"]) -> typing.Union[MetaOapg.properties.profilesPolicy35, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy60"]) -> typing.Union[MetaOapg.properties.profilesPolicy60, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy120"]) -> typing.Union[MetaOapg.properties.profilesPolicy120, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy100"]) -> typing.Union[MetaOapg.properties.profilesPolicy100, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profilesPolicy55"]) -> typing.Union[MetaOapg.properties.profilesPolicy55, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allPolicies"]) -> typing.Union[MetaOapg.properties.allPolicies, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["profilesPolicy6"], typing_extensions.Literal["profilesPolicy11"], typing_extensions.Literal["profilesPolicy20"], typing_extensions.Literal["profilesPolicy10"], typing_extensions.Literal["profilesPolicy130"], typing_extensions.Literal["profilesPolicy51"], typing_extensions.Literal["profilesPolicy30"], typing_extensions.Literal["profilesPolicy45"], typing_extensions.Literal["profilesPolicy91"], typing_extensions.Literal["profilesPolicy22"], typing_extensions.Literal["profilesPolicy35"], typing_extensions.Literal["profilesPolicy60"], typing_extensions.Literal["profilesPolicy120"], typing_extensions.Literal["profilesPolicy100"], typing_extensions.Literal["profilesPolicy55"], typing_extensions.Literal["allPolicies"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        profilesPolicy6: typing.Union[MetaOapg.properties.profilesPolicy6, str, schemas.Unset] = schemas.unset,
        profilesPolicy11: typing.Union[MetaOapg.properties.profilesPolicy11, str, schemas.Unset] = schemas.unset,
        profilesPolicy20: typing.Union[MetaOapg.properties.profilesPolicy20, str, schemas.Unset] = schemas.unset,
        profilesPolicy10: typing.Union[MetaOapg.properties.profilesPolicy10, str, schemas.Unset] = schemas.unset,
        profilesPolicy130: typing.Union[MetaOapg.properties.profilesPolicy130, str, schemas.Unset] = schemas.unset,
        profilesPolicy51: typing.Union[MetaOapg.properties.profilesPolicy51, str, schemas.Unset] = schemas.unset,
        profilesPolicy30: typing.Union[MetaOapg.properties.profilesPolicy30, str, schemas.Unset] = schemas.unset,
        profilesPolicy45: typing.Union[MetaOapg.properties.profilesPolicy45, str, schemas.Unset] = schemas.unset,
        profilesPolicy91: typing.Union[MetaOapg.properties.profilesPolicy91, str, schemas.Unset] = schemas.unset,
        profilesPolicy22: typing.Union[MetaOapg.properties.profilesPolicy22, str, schemas.Unset] = schemas.unset,
        profilesPolicy35: typing.Union[MetaOapg.properties.profilesPolicy35, str, schemas.Unset] = schemas.unset,
        profilesPolicy60: typing.Union[MetaOapg.properties.profilesPolicy60, str, schemas.Unset] = schemas.unset,
        profilesPolicy120: typing.Union[MetaOapg.properties.profilesPolicy120, str, schemas.Unset] = schemas.unset,
        profilesPolicy100: typing.Union[MetaOapg.properties.profilesPolicy100, str, schemas.Unset] = schemas.unset,
        profilesPolicy55: typing.Union[MetaOapg.properties.profilesPolicy55, str, schemas.Unset] = schemas.unset,
        allPolicies: typing.Union[MetaOapg.properties.allPolicies, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EndpointForServers':
        return super().__new__(
            cls,
            *_args,
            profilesPolicy6=profilesPolicy6,
            profilesPolicy11=profilesPolicy11,
            profilesPolicy20=profilesPolicy20,
            profilesPolicy10=profilesPolicy10,
            profilesPolicy130=profilesPolicy130,
            profilesPolicy51=profilesPolicy51,
            profilesPolicy30=profilesPolicy30,
            profilesPolicy45=profilesPolicy45,
            profilesPolicy91=profilesPolicy91,
            profilesPolicy22=profilesPolicy22,
            profilesPolicy35=profilesPolicy35,
            profilesPolicy60=profilesPolicy60,
            profilesPolicy120=profilesPolicy120,
            profilesPolicy100=profilesPolicy100,
            profilesPolicy55=profilesPolicy55,
            allPolicies=allPolicies,
            _configuration=_configuration,
        )
