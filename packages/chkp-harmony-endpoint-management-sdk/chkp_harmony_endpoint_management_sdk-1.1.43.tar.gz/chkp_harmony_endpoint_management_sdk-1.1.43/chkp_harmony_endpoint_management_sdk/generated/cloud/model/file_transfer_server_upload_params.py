# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class FileTransferServerUploadParams(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "connection",
        }
        
        class properties:
        
            @staticmethod
            def connection() -> typing.Type['FileTransferServerConnection']:
                return FileTransferServerConnection
        
            @staticmethod
            def loginCredentials() -> typing.Type['LoginCredentials']:
                return LoginCredentials
            uploadPath = schemas.StrSchema
            __annotations__ = {
                "connection": connection,
                "loginCredentials": loginCredentials,
                "uploadPath": uploadPath,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    connection: 'FileTransferServerConnection'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connection"]) -> 'FileTransferServerConnection': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loginCredentials"]) -> 'LoginCredentials': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uploadPath"]) -> MetaOapg.properties.uploadPath: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["connection"], typing_extensions.Literal["loginCredentials"], typing_extensions.Literal["uploadPath"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connection"]) -> 'FileTransferServerConnection': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loginCredentials"]) -> typing.Union['LoginCredentials', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uploadPath"]) -> typing.Union[MetaOapg.properties.uploadPath, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["connection"], typing_extensions.Literal["loginCredentials"], typing_extensions.Literal["uploadPath"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        connection: 'FileTransferServerConnection',
        loginCredentials: typing.Union['LoginCredentials', schemas.Unset] = schemas.unset,
        uploadPath: typing.Union[MetaOapg.properties.uploadPath, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FileTransferServerUploadParams':
        return super().__new__(
            cls,
            *_args,
            connection=connection,
            loginCredentials=loginCredentials,
            uploadPath=uploadPath,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.file_transfer_server_connection import FileTransferServerConnection
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.login_credentials import LoginCredentials
