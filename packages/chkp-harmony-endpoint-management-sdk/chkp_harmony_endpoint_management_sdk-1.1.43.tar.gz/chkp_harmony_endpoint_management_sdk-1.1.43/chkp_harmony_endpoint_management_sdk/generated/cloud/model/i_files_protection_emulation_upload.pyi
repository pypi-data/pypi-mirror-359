# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IFilesProtectionEmulationUpload(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def encryptionFailCloseMode() -> typing.Type['FailCloseMode']:
                return FailCloseMode
        
            @staticmethod
            def failCloseMode() -> typing.Type['FailCloseMode']:
                return FailCloseMode
        
            @staticmethod
            def notificationsMode() -> typing.Type['NotificationsMode']:
                return NotificationsMode
            
            
            class fileProtectionDomainsActions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['IFilesProtectionEmulationUploadFileProtectionDomainsActions']:
                        return IFilesProtectionEmulationUploadFileProtectionDomainsActions
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['IFilesProtectionEmulationUploadFileProtectionDomainsActions'], typing.List['IFilesProtectionEmulationUploadFileProtectionDomainsActions']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'fileProtectionDomainsActions':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'IFilesProtectionEmulationUploadFileProtectionDomainsActions':
                    return super().__getitem__(i)
            
            
            class protectedIPs(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProtectedNetworkResourceIpRange']:
                        return ProtectedNetworkResourceIpRange
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ProtectedNetworkResourceIpRange'], typing.List['ProtectedNetworkResourceIpRange']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'protectedIPs':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProtectedNetworkResourceIpRange':
                    return super().__getitem__(i)
            
            
            class protectedDomains(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProtectedNetworkResourceDomain']:
                        return ProtectedNetworkResourceDomain
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['ProtectedNetworkResourceDomain'], typing.List['ProtectedNetworkResourceDomain']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'protectedDomains':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProtectedNetworkResourceDomain':
                    return super().__getitem__(i)
            
            
            class maxFileSize(
                schemas.Float64Schema
            ):
                pass
        
            @staticmethod
            def fileActions() -> typing.Type['IFilesProtectionEmulationUploadFileActions']:
                return IFilesProtectionEmulationUploadFileActions
        
            @staticmethod
            def mode() -> typing.Type['CapabilityMode']:
                return CapabilityMode
            __annotations__ = {
                "encryptionFailCloseMode": encryptionFailCloseMode,
                "failCloseMode": failCloseMode,
                "notificationsMode": notificationsMode,
                "fileProtectionDomainsActions": fileProtectionDomainsActions,
                "protectedIPs": protectedIPs,
                "protectedDomains": protectedDomains,
                "maxFileSize": maxFileSize,
                "fileActions": fileActions,
                "mode": mode,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["encryptionFailCloseMode"]) -> 'FailCloseMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["failCloseMode"]) -> 'FailCloseMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notificationsMode"]) -> 'NotificationsMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileProtectionDomainsActions"]) -> MetaOapg.properties.fileProtectionDomainsActions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protectedIPs"]) -> MetaOapg.properties.protectedIPs: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protectedDomains"]) -> MetaOapg.properties.protectedDomains: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxFileSize"]) -> MetaOapg.properties.maxFileSize: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileActions"]) -> 'IFilesProtectionEmulationUploadFileActions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> 'CapabilityMode': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["encryptionFailCloseMode"], typing_extensions.Literal["failCloseMode"], typing_extensions.Literal["notificationsMode"], typing_extensions.Literal["fileProtectionDomainsActions"], typing_extensions.Literal["protectedIPs"], typing_extensions.Literal["protectedDomains"], typing_extensions.Literal["maxFileSize"], typing_extensions.Literal["fileActions"], typing_extensions.Literal["mode"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["encryptionFailCloseMode"]) -> typing.Union['FailCloseMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["failCloseMode"]) -> typing.Union['FailCloseMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notificationsMode"]) -> typing.Union['NotificationsMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileProtectionDomainsActions"]) -> typing.Union[MetaOapg.properties.fileProtectionDomainsActions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protectedIPs"]) -> typing.Union[MetaOapg.properties.protectedIPs, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protectedDomains"]) -> typing.Union[MetaOapg.properties.protectedDomains, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxFileSize"]) -> typing.Union[MetaOapg.properties.maxFileSize, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileActions"]) -> typing.Union['IFilesProtectionEmulationUploadFileActions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union['CapabilityMode', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["encryptionFailCloseMode"], typing_extensions.Literal["failCloseMode"], typing_extensions.Literal["notificationsMode"], typing_extensions.Literal["fileProtectionDomainsActions"], typing_extensions.Literal["protectedIPs"], typing_extensions.Literal["protectedDomains"], typing_extensions.Literal["maxFileSize"], typing_extensions.Literal["fileActions"], typing_extensions.Literal["mode"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        encryptionFailCloseMode: typing.Union['FailCloseMode', schemas.Unset] = schemas.unset,
        failCloseMode: typing.Union['FailCloseMode', schemas.Unset] = schemas.unset,
        notificationsMode: typing.Union['NotificationsMode', schemas.Unset] = schemas.unset,
        fileProtectionDomainsActions: typing.Union[MetaOapg.properties.fileProtectionDomainsActions, list, tuple, schemas.Unset] = schemas.unset,
        protectedIPs: typing.Union[MetaOapg.properties.protectedIPs, list, tuple, schemas.Unset] = schemas.unset,
        protectedDomains: typing.Union[MetaOapg.properties.protectedDomains, list, tuple, schemas.Unset] = schemas.unset,
        maxFileSize: typing.Union[MetaOapg.properties.maxFileSize, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fileActions: typing.Union['IFilesProtectionEmulationUploadFileActions', schemas.Unset] = schemas.unset,
        mode: typing.Union['CapabilityMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IFilesProtectionEmulationUpload':
        return super().__new__(
            cls,
            *_args,
            encryptionFailCloseMode=encryptionFailCloseMode,
            failCloseMode=failCloseMode,
            notificationsMode=notificationsMode,
            fileProtectionDomainsActions=fileProtectionDomainsActions,
            protectedIPs=protectedIPs,
            protectedDomains=protectedDomains,
            maxFileSize=maxFileSize,
            fileActions=fileActions,
            mode=mode,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.capability_mode import CapabilityMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.fail_close_mode import FailCloseMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_upload_file_actions import IFilesProtectionEmulationUploadFileActions
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_upload_file_protection_domains_actions import IFilesProtectionEmulationUploadFileProtectionDomainsActions
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.notifications_mode import NotificationsMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.protected_network_resource_domain import ProtectedNetworkResourceDomain
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.protected_network_resource_ip_range import ProtectedNetworkResourceIpRange
