# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IMalwareProtectionScanOnAccessScan(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def reputationServices() -> typing.Type['IMalwareProtectionScanOnAccessScanReputationServices']:
                return IMalwareProtectionScanOnAccessScanReputationServices
            enableWebProtection = schemas.BoolSchema
            detectUnusualActivity = schemas.BoolSchema
            __annotations__ = {
                "reputationServices": reputationServices,
                "enableWebProtection": enableWebProtection,
                "detectUnusualActivity": detectUnusualActivity,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reputationServices"]) -> 'IMalwareProtectionScanOnAccessScanReputationServices': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enableWebProtection"]) -> MetaOapg.properties.enableWebProtection: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detectUnusualActivity"]) -> MetaOapg.properties.detectUnusualActivity: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["reputationServices"], typing_extensions.Literal["enableWebProtection"], typing_extensions.Literal["detectUnusualActivity"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reputationServices"]) -> typing.Union['IMalwareProtectionScanOnAccessScanReputationServices', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enableWebProtection"]) -> typing.Union[MetaOapg.properties.enableWebProtection, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detectUnusualActivity"]) -> typing.Union[MetaOapg.properties.detectUnusualActivity, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["reputationServices"], typing_extensions.Literal["enableWebProtection"], typing_extensions.Literal["detectUnusualActivity"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        reputationServices: typing.Union['IMalwareProtectionScanOnAccessScanReputationServices', schemas.Unset] = schemas.unset,
        enableWebProtection: typing.Union[MetaOapg.properties.enableWebProtection, bool, schemas.Unset] = schemas.unset,
        detectUnusualActivity: typing.Union[MetaOapg.properties.detectUnusualActivity, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IMalwareProtectionScanOnAccessScan':
        return super().__new__(
            cls,
            *_args,
            reputationServices=reputationServices,
            enableWebProtection=enableWebProtection,
            detectUnusualActivity=detectUnusualActivity,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_malware_protection_scan_on_access_scan_reputation_services import IMalwareProtectionScanOnAccessScanReputationServices
