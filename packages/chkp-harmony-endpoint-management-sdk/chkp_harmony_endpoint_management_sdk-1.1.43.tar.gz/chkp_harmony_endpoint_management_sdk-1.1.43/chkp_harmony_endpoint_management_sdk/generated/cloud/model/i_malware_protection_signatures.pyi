# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IMalwareProtectionSignatures(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def signatureServers() -> typing.Type['IMalwareProtectionSignaturesSignatureServers']:
                return IMalwareProtectionSignaturesSignatureServers
            updaterTimeoutSeconds = schemas.Float64Schema
            singleFileUpdateThresholdDays = schemas.Float64Schema
            singleFileUpdateEnabled = schemas.BoolSchema
            updateInterval = schemas.Float64Schema
            __annotations__ = {
                "signatureServers": signatureServers,
                "updaterTimeoutSeconds": updaterTimeoutSeconds,
                "singleFileUpdateThresholdDays": singleFileUpdateThresholdDays,
                "singleFileUpdateEnabled": singleFileUpdateEnabled,
                "updateInterval": updateInterval,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["signatureServers"]) -> 'IMalwareProtectionSignaturesSignatureServers': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updaterTimeoutSeconds"]) -> MetaOapg.properties.updaterTimeoutSeconds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["singleFileUpdateThresholdDays"]) -> MetaOapg.properties.singleFileUpdateThresholdDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["singleFileUpdateEnabled"]) -> MetaOapg.properties.singleFileUpdateEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updateInterval"]) -> MetaOapg.properties.updateInterval: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["signatureServers"], typing_extensions.Literal["updaterTimeoutSeconds"], typing_extensions.Literal["singleFileUpdateThresholdDays"], typing_extensions.Literal["singleFileUpdateEnabled"], typing_extensions.Literal["updateInterval"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["signatureServers"]) -> typing.Union['IMalwareProtectionSignaturesSignatureServers', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updaterTimeoutSeconds"]) -> typing.Union[MetaOapg.properties.updaterTimeoutSeconds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["singleFileUpdateThresholdDays"]) -> typing.Union[MetaOapg.properties.singleFileUpdateThresholdDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["singleFileUpdateEnabled"]) -> typing.Union[MetaOapg.properties.singleFileUpdateEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updateInterval"]) -> typing.Union[MetaOapg.properties.updateInterval, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["signatureServers"], typing_extensions.Literal["updaterTimeoutSeconds"], typing_extensions.Literal["singleFileUpdateThresholdDays"], typing_extensions.Literal["singleFileUpdateEnabled"], typing_extensions.Literal["updateInterval"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        signatureServers: typing.Union['IMalwareProtectionSignaturesSignatureServers', schemas.Unset] = schemas.unset,
        updaterTimeoutSeconds: typing.Union[MetaOapg.properties.updaterTimeoutSeconds, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        singleFileUpdateThresholdDays: typing.Union[MetaOapg.properties.singleFileUpdateThresholdDays, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        singleFileUpdateEnabled: typing.Union[MetaOapg.properties.singleFileUpdateEnabled, bool, schemas.Unset] = schemas.unset,
        updateInterval: typing.Union[MetaOapg.properties.updateInterval, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IMalwareProtectionSignatures':
        return super().__new__(
            cls,
            *_args,
            signatureServers=signatureServers,
            updaterTimeoutSeconds=updaterTimeoutSeconds,
            singleFileUpdateThresholdDays=singleFileUpdateThresholdDays,
            singleFileUpdateEnabled=singleFileUpdateEnabled,
            updateInterval=updateInterval,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_malware_protection_signatures_signature_servers import IMalwareProtectionSignaturesSignatureServers
