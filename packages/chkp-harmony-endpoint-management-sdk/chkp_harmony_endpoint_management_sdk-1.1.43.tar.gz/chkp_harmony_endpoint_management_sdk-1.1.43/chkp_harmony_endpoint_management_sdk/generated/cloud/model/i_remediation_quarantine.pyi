# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IRemediationQuarantine(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            quarantinedItemsCentralLocationUrl = schemas.StrSchema
            allowUserRestore = schemas.BoolSchema
            allowUserDelete = schemas.BoolSchema
            folderName = schemas.StrSchema
        
            @staticmethod
            def mode() -> typing.Type['RemediationMode']:
                return RemediationMode
            __annotations__ = {
                "quarantinedItemsCentralLocationUrl": quarantinedItemsCentralLocationUrl,
                "allowUserRestore": allowUserRestore,
                "allowUserDelete": allowUserDelete,
                "folderName": folderName,
                "mode": mode,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quarantinedItemsCentralLocationUrl"]) -> MetaOapg.properties.quarantinedItemsCentralLocationUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowUserRestore"]) -> MetaOapg.properties.allowUserRestore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowUserDelete"]) -> MetaOapg.properties.allowUserDelete: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["folderName"]) -> MetaOapg.properties.folderName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> 'RemediationMode': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["quarantinedItemsCentralLocationUrl"], typing_extensions.Literal["allowUserRestore"], typing_extensions.Literal["allowUserDelete"], typing_extensions.Literal["folderName"], typing_extensions.Literal["mode"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quarantinedItemsCentralLocationUrl"]) -> typing.Union[MetaOapg.properties.quarantinedItemsCentralLocationUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowUserRestore"]) -> typing.Union[MetaOapg.properties.allowUserRestore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowUserDelete"]) -> typing.Union[MetaOapg.properties.allowUserDelete, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["folderName"]) -> typing.Union[MetaOapg.properties.folderName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union['RemediationMode', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["quarantinedItemsCentralLocationUrl"], typing_extensions.Literal["allowUserRestore"], typing_extensions.Literal["allowUserDelete"], typing_extensions.Literal["folderName"], typing_extensions.Literal["mode"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        quarantinedItemsCentralLocationUrl: typing.Union[MetaOapg.properties.quarantinedItemsCentralLocationUrl, str, schemas.Unset] = schemas.unset,
        allowUserRestore: typing.Union[MetaOapg.properties.allowUserRestore, bool, schemas.Unset] = schemas.unset,
        allowUserDelete: typing.Union[MetaOapg.properties.allowUserDelete, bool, schemas.Unset] = schemas.unset,
        folderName: typing.Union[MetaOapg.properties.folderName, str, schemas.Unset] = schemas.unset,
        mode: typing.Union['RemediationMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IRemediationQuarantine':
        return super().__new__(
            cls,
            *_args,
            quarantinedItemsCentralLocationUrl=quarantinedItemsCentralLocationUrl,
            allowUserRestore=allowUserRestore,
            allowUserDelete=allowUserDelete,
            folderName=folderName,
            mode=mode,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.remediation_mode import RemediationMode
