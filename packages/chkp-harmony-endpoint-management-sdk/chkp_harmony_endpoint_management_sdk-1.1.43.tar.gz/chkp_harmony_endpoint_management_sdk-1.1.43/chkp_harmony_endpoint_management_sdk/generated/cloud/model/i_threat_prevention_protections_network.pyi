# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IThreatPreventionProtectionsNetwork(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def urlFiltering() -> typing.Type['PolicySettingsIUrlFilteringProtectionBladeAntiBot']:
                return PolicySettingsIUrlFilteringProtectionBladeAntiBot
        
            @staticmethod
            def files() -> typing.Type['PolicySettingsIFilesProtectionBladeThreatEmulation']:
                return PolicySettingsIFilesProtectionBladeThreatEmulation
        
            @staticmethod
            def phishing() -> typing.Type['PolicySettingsIPhishingProtectionBladeThreatEmulation']:
                return PolicySettingsIPhishingProtectionBladeThreatEmulation
        
            @staticmethod
            def passwordReuse() -> typing.Type['PolicySettingsIPasswordReuseProtectionBladeThreatEmulation']:
                return PolicySettingsIPasswordReuseProtectionBladeThreatEmulation
        
            @staticmethod
            def search() -> typing.Type['PolicySettingsISearchProtectionBladeAntiBot']:
                return PolicySettingsISearchProtectionBladeAntiBot
            __annotations__ = {
                "urlFiltering": urlFiltering,
                "files": files,
                "phishing": phishing,
                "passwordReuse": passwordReuse,
                "search": search,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlFiltering"]) -> 'PolicySettingsIUrlFilteringProtectionBladeAntiBot': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["files"]) -> 'PolicySettingsIFilesProtectionBladeThreatEmulation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phishing"]) -> 'PolicySettingsIPhishingProtectionBladeThreatEmulation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordReuse"]) -> 'PolicySettingsIPasswordReuseProtectionBladeThreatEmulation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["search"]) -> 'PolicySettingsISearchProtectionBladeAntiBot': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["urlFiltering"], typing_extensions.Literal["files"], typing_extensions.Literal["phishing"], typing_extensions.Literal["passwordReuse"], typing_extensions.Literal["search"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlFiltering"]) -> typing.Union['PolicySettingsIUrlFilteringProtectionBladeAntiBot', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["files"]) -> typing.Union['PolicySettingsIFilesProtectionBladeThreatEmulation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phishing"]) -> typing.Union['PolicySettingsIPhishingProtectionBladeThreatEmulation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordReuse"]) -> typing.Union['PolicySettingsIPasswordReuseProtectionBladeThreatEmulation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["search"]) -> typing.Union['PolicySettingsISearchProtectionBladeAntiBot', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["urlFiltering"], typing_extensions.Literal["files"], typing_extensions.Literal["phishing"], typing_extensions.Literal["passwordReuse"], typing_extensions.Literal["search"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        urlFiltering: typing.Union['PolicySettingsIUrlFilteringProtectionBladeAntiBot', schemas.Unset] = schemas.unset,
        files: typing.Union['PolicySettingsIFilesProtectionBladeThreatEmulation', schemas.Unset] = schemas.unset,
        phishing: typing.Union['PolicySettingsIPhishingProtectionBladeThreatEmulation', schemas.Unset] = schemas.unset,
        passwordReuse: typing.Union['PolicySettingsIPasswordReuseProtectionBladeThreatEmulation', schemas.Unset] = schemas.unset,
        search: typing.Union['PolicySettingsISearchProtectionBladeAntiBot', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IThreatPreventionProtectionsNetwork':
        return super().__new__(
            cls,
            *_args,
            urlFiltering=urlFiltering,
            files=files,
            phishing=phishing,
            passwordReuse=passwordReuse,
            search=search,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.policy_settings_i_files_protection_blade_threat_emulation import PolicySettingsIFilesProtectionBladeThreatEmulation
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.policy_settings_i_password_reuse_protection_blade_threat_emulation import PolicySettingsIPasswordReuseProtectionBladeThreatEmulation
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.policy_settings_i_phishing_protection_blade_threat_emulation import PolicySettingsIPhishingProtectionBladeThreatEmulation
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.policy_settings_i_search_protection_blade_anti_bot import PolicySettingsISearchProtectionBladeAntiBot
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.policy_settings_i_url_filtering_protection_blade_anti_bot import PolicySettingsIUrlFilteringProtectionBladeAntiBot
