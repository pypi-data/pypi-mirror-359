# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class SearchInOrganizationRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "searchTerm",
        }
        
        class properties:
            searchTerm = schemas.StrSchema
        
            @staticmethod
            def searchType() -> typing.Type['FreeSearchFilterType']:
                return FreeSearchFilterType
        
            @staticmethod
            def paging() -> typing.Type['Paging']:
                return Paging
            
            
            class entityTypesToSearch(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['SearchableEntityTypes']:
                        return SearchableEntityTypes
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['SearchableEntityTypes'], typing.List['SearchableEntityTypes']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'entityTypesToSearch':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'SearchableEntityTypes':
                    return super().__getitem__(i)
            __annotations__ = {
                "searchTerm": searchTerm,
                "searchType": searchType,
                "paging": paging,
                "entityTypesToSearch": entityTypesToSearch,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    searchTerm: MetaOapg.properties.searchTerm
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["searchTerm"]) -> MetaOapg.properties.searchTerm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["searchType"]) -> 'FreeSearchFilterType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paging"]) -> 'Paging': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["entityTypesToSearch"]) -> MetaOapg.properties.entityTypesToSearch: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["searchTerm"], typing_extensions.Literal["searchType"], typing_extensions.Literal["paging"], typing_extensions.Literal["entityTypesToSearch"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["searchTerm"]) -> MetaOapg.properties.searchTerm: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["searchType"]) -> typing.Union['FreeSearchFilterType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paging"]) -> typing.Union['Paging', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["entityTypesToSearch"]) -> typing.Union[MetaOapg.properties.entityTypesToSearch, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["searchTerm"], typing_extensions.Literal["searchType"], typing_extensions.Literal["paging"], typing_extensions.Literal["entityTypesToSearch"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        searchTerm: typing.Union[MetaOapg.properties.searchTerm, str, ],
        searchType: typing.Union['FreeSearchFilterType', schemas.Unset] = schemas.unset,
        paging: typing.Union['Paging', schemas.Unset] = schemas.unset,
        entityTypesToSearch: typing.Union[MetaOapg.properties.entityTypesToSearch, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'SearchInOrganizationRequest':
        return super().__new__(
            cls,
            *_args,
            searchTerm=searchTerm,
            searchType=searchType,
            paging=paging,
            entityTypesToSearch=entityTypesToSearch,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.free_search_filter_type import FreeSearchFilterType
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.paging import Paging
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.searchable_entity_types import SearchableEntityTypes
