# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class CountTrendPeriod(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The period in time the trend refers to
    """

    class MetaOapg:
        required = {
            "start",
            "end",
        }
        
        class properties:
            end = schemas.DateTimeSchema
            start = schemas.DateTimeSchema
            __annotations__ = {
                "end": end,
                "start": start,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    start: MetaOapg.properties.start
    end: MetaOapg.properties.end
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["start"]) -> MetaOapg.properties.start: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["end"]) -> MetaOapg.properties.end: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["start"], typing_extensions.Literal["end"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["start"]) -> MetaOapg.properties.start: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["end"]) -> MetaOapg.properties.end: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["start"], typing_extensions.Literal["end"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        start: typing.Union[MetaOapg.properties.start, str, datetime, ],
        end: typing.Union[MetaOapg.properties.end, str, datetime, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'CountTrendPeriod':
        return super().__new__(
            cls,
            *_args,
            start=start,
            end=end,
            _configuration=_configuration,
        )
