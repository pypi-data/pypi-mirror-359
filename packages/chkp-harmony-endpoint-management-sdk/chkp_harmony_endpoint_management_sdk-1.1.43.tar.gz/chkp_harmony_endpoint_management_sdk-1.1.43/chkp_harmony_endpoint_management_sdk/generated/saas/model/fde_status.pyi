# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class FdeStatus(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "totalNotEncrypted",
            "totalEncrypted",
            "totalNotInstalledOrError",
            "totalCount",
            "totalInProgress",
        }
        
        class properties:
            totalCount = schemas.Float64Schema
            totalEncrypted = schemas.Float64Schema
            totalInProgress = schemas.Float64Schema
            totalNotEncrypted = schemas.Float64Schema
            totalNotInstalledOrError = schemas.Float64Schema
            __annotations__ = {
                "totalCount": totalCount,
                "totalEncrypted": totalEncrypted,
                "totalInProgress": totalInProgress,
                "totalNotEncrypted": totalNotEncrypted,
                "totalNotInstalledOrError": totalNotInstalledOrError,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    totalNotEncrypted: MetaOapg.properties.totalNotEncrypted
    totalEncrypted: MetaOapg.properties.totalEncrypted
    totalNotInstalledOrError: MetaOapg.properties.totalNotInstalledOrError
    totalCount: MetaOapg.properties.totalCount
    totalInProgress: MetaOapg.properties.totalInProgress
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalNotEncrypted"]) -> MetaOapg.properties.totalNotEncrypted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalEncrypted"]) -> MetaOapg.properties.totalEncrypted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalNotInstalledOrError"]) -> MetaOapg.properties.totalNotInstalledOrError: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalInProgress"]) -> MetaOapg.properties.totalInProgress: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["totalNotEncrypted"], typing_extensions.Literal["totalEncrypted"], typing_extensions.Literal["totalNotInstalledOrError"], typing_extensions.Literal["totalCount"], typing_extensions.Literal["totalInProgress"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalNotEncrypted"]) -> MetaOapg.properties.totalNotEncrypted: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalEncrypted"]) -> MetaOapg.properties.totalEncrypted: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalNotInstalledOrError"]) -> MetaOapg.properties.totalNotInstalledOrError: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalInProgress"]) -> MetaOapg.properties.totalInProgress: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["totalNotEncrypted"], typing_extensions.Literal["totalEncrypted"], typing_extensions.Literal["totalNotInstalledOrError"], typing_extensions.Literal["totalCount"], typing_extensions.Literal["totalInProgress"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        totalNotEncrypted: typing.Union[MetaOapg.properties.totalNotEncrypted, decimal.Decimal, int, float, ],
        totalEncrypted: typing.Union[MetaOapg.properties.totalEncrypted, decimal.Decimal, int, float, ],
        totalNotInstalledOrError: typing.Union[MetaOapg.properties.totalNotInstalledOrError, decimal.Decimal, int, float, ],
        totalCount: typing.Union[MetaOapg.properties.totalCount, decimal.Decimal, int, float, ],
        totalInProgress: typing.Union[MetaOapg.properties.totalInProgress, decimal.Decimal, int, float, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FdeStatus':
        return super().__new__(
            cls,
            *_args,
            totalNotEncrypted=totalNotEncrypted,
            totalEncrypted=totalEncrypted,
            totalNotInstalledOrError=totalNotInstalledOrError,
            totalCount=totalCount,
            totalInProgress=totalInProgress,
            _configuration=_configuration,
        )
