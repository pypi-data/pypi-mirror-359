# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class AgentCollectLogsParameters(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            informUser = schemas.BoolSchema
            allowPostpone = schemas.BoolSchema
        
            @staticmethod
            def detailLevel() -> typing.Type['AgentCollectLogsDetailsLevel']:
                return AgentCollectLogsDetailsLevel
        
            @staticmethod
            def protocol() -> typing.Type['AgentCollectLogsOperationProtocol']:
                return AgentCollectLogsOperationProtocol
            uploadToCP = schemas.BoolSchema
            uploadToS3 = schemas.BoolSchema
            uploadToCorporate = schemas.BoolSchema
            serverFingerprint = schemas.StrSchema
            serverAddress = schemas.StrSchema
            pathOnServer = schemas.StrSchema
            specificCredentials = schemas.BoolSchema
            login = schemas.StrSchema
            password = schemas.StrSchema
            __annotations__ = {
                "informUser": informUser,
                "allowPostpone": allowPostpone,
                "detailLevel": detailLevel,
                "protocol": protocol,
                "uploadToCP": uploadToCP,
                "uploadToS3": uploadToS3,
                "uploadToCorporate": uploadToCorporate,
                "serverFingerprint": serverFingerprint,
                "serverAddress": serverAddress,
                "pathOnServer": pathOnServer,
                "specificCredentials": specificCredentials,
                "login": login,
                "password": password,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["informUser"]) -> MetaOapg.properties.informUser: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowPostpone"]) -> MetaOapg.properties.allowPostpone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detailLevel"]) -> 'AgentCollectLogsDetailsLevel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol"]) -> 'AgentCollectLogsOperationProtocol': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uploadToCP"]) -> MetaOapg.properties.uploadToCP: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uploadToS3"]) -> MetaOapg.properties.uploadToS3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uploadToCorporate"]) -> MetaOapg.properties.uploadToCorporate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serverFingerprint"]) -> MetaOapg.properties.serverFingerprint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serverAddress"]) -> MetaOapg.properties.serverAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pathOnServer"]) -> MetaOapg.properties.pathOnServer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specificCredentials"]) -> MetaOapg.properties.specificCredentials: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["login"]) -> MetaOapg.properties.login: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["password"]) -> MetaOapg.properties.password: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["informUser"], typing_extensions.Literal["allowPostpone"], typing_extensions.Literal["detailLevel"], typing_extensions.Literal["protocol"], typing_extensions.Literal["uploadToCP"], typing_extensions.Literal["uploadToS3"], typing_extensions.Literal["uploadToCorporate"], typing_extensions.Literal["serverFingerprint"], typing_extensions.Literal["serverAddress"], typing_extensions.Literal["pathOnServer"], typing_extensions.Literal["specificCredentials"], typing_extensions.Literal["login"], typing_extensions.Literal["password"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["informUser"]) -> typing.Union[MetaOapg.properties.informUser, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowPostpone"]) -> typing.Union[MetaOapg.properties.allowPostpone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detailLevel"]) -> typing.Union['AgentCollectLogsDetailsLevel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol"]) -> typing.Union['AgentCollectLogsOperationProtocol', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uploadToCP"]) -> typing.Union[MetaOapg.properties.uploadToCP, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uploadToS3"]) -> typing.Union[MetaOapg.properties.uploadToS3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uploadToCorporate"]) -> typing.Union[MetaOapg.properties.uploadToCorporate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serverFingerprint"]) -> typing.Union[MetaOapg.properties.serverFingerprint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serverAddress"]) -> typing.Union[MetaOapg.properties.serverAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pathOnServer"]) -> typing.Union[MetaOapg.properties.pathOnServer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specificCredentials"]) -> typing.Union[MetaOapg.properties.specificCredentials, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["login"]) -> typing.Union[MetaOapg.properties.login, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["password"]) -> typing.Union[MetaOapg.properties.password, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["informUser"], typing_extensions.Literal["allowPostpone"], typing_extensions.Literal["detailLevel"], typing_extensions.Literal["protocol"], typing_extensions.Literal["uploadToCP"], typing_extensions.Literal["uploadToS3"], typing_extensions.Literal["uploadToCorporate"], typing_extensions.Literal["serverFingerprint"], typing_extensions.Literal["serverAddress"], typing_extensions.Literal["pathOnServer"], typing_extensions.Literal["specificCredentials"], typing_extensions.Literal["login"], typing_extensions.Literal["password"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        informUser: typing.Union[MetaOapg.properties.informUser, bool, schemas.Unset] = schemas.unset,
        allowPostpone: typing.Union[MetaOapg.properties.allowPostpone, bool, schemas.Unset] = schemas.unset,
        detailLevel: typing.Union['AgentCollectLogsDetailsLevel', schemas.Unset] = schemas.unset,
        protocol: typing.Union['AgentCollectLogsOperationProtocol', schemas.Unset] = schemas.unset,
        uploadToCP: typing.Union[MetaOapg.properties.uploadToCP, bool, schemas.Unset] = schemas.unset,
        uploadToS3: typing.Union[MetaOapg.properties.uploadToS3, bool, schemas.Unset] = schemas.unset,
        uploadToCorporate: typing.Union[MetaOapg.properties.uploadToCorporate, bool, schemas.Unset] = schemas.unset,
        serverFingerprint: typing.Union[MetaOapg.properties.serverFingerprint, str, schemas.Unset] = schemas.unset,
        serverAddress: typing.Union[MetaOapg.properties.serverAddress, str, schemas.Unset] = schemas.unset,
        pathOnServer: typing.Union[MetaOapg.properties.pathOnServer, str, schemas.Unset] = schemas.unset,
        specificCredentials: typing.Union[MetaOapg.properties.specificCredentials, bool, schemas.Unset] = schemas.unset,
        login: typing.Union[MetaOapg.properties.login, str, schemas.Unset] = schemas.unset,
        password: typing.Union[MetaOapg.properties.password, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AgentCollectLogsParameters':
        return super().__new__(
            cls,
            *_args,
            informUser=informUser,
            allowPostpone=allowPostpone,
            detailLevel=detailLevel,
            protocol=protocol,
            uploadToCP=uploadToCP,
            uploadToS3=uploadToS3,
            uploadToCorporate=uploadToCorporate,
            serverFingerprint=serverFingerprint,
            serverAddress=serverAddress,
            pathOnServer=pathOnServer,
            specificCredentials=specificCredentials,
            login=login,
            password=password,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.agent_collect_logs_details_level import AgentCollectLogsDetailsLevel
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.agent_collect_logs_operation_protocol import AgentCollectLogsOperationProtocol
