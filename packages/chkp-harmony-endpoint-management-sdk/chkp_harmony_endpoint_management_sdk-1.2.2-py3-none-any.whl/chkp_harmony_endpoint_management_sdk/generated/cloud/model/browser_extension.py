# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class BrowserExtension(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            browserExtensionTeConnection = schemas.BoolSchema
            chromeExtensionPingRecently = schemas.BoolSchema
            edgeExtensionPingRecently = schemas.BoolSchema
            firefoxExtensionPingRecently = schemas.BoolSchema
            braveExtensionPingRecently = schemas.BoolSchema
            safariExtensionPingRecently = schemas.BoolSchema
            __annotations__ = {
                "browserExtensionTeConnection": browserExtensionTeConnection,
                "chromeExtensionPingRecently": chromeExtensionPingRecently,
                "edgeExtensionPingRecently": edgeExtensionPingRecently,
                "firefoxExtensionPingRecently": firefoxExtensionPingRecently,
                "braveExtensionPingRecently": braveExtensionPingRecently,
                "safariExtensionPingRecently": safariExtensionPingRecently,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["browserExtensionTeConnection"]) -> MetaOapg.properties.browserExtensionTeConnection: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chromeExtensionPingRecently"]) -> MetaOapg.properties.chromeExtensionPingRecently: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["edgeExtensionPingRecently"]) -> MetaOapg.properties.edgeExtensionPingRecently: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firefoxExtensionPingRecently"]) -> MetaOapg.properties.firefoxExtensionPingRecently: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["braveExtensionPingRecently"]) -> MetaOapg.properties.braveExtensionPingRecently: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["safariExtensionPingRecently"]) -> MetaOapg.properties.safariExtensionPingRecently: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["browserExtensionTeConnection"], typing_extensions.Literal["chromeExtensionPingRecently"], typing_extensions.Literal["edgeExtensionPingRecently"], typing_extensions.Literal["firefoxExtensionPingRecently"], typing_extensions.Literal["braveExtensionPingRecently"], typing_extensions.Literal["safariExtensionPingRecently"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["browserExtensionTeConnection"]) -> typing.Union[MetaOapg.properties.browserExtensionTeConnection, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chromeExtensionPingRecently"]) -> typing.Union[MetaOapg.properties.chromeExtensionPingRecently, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["edgeExtensionPingRecently"]) -> typing.Union[MetaOapg.properties.edgeExtensionPingRecently, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firefoxExtensionPingRecently"]) -> typing.Union[MetaOapg.properties.firefoxExtensionPingRecently, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["braveExtensionPingRecently"]) -> typing.Union[MetaOapg.properties.braveExtensionPingRecently, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["safariExtensionPingRecently"]) -> typing.Union[MetaOapg.properties.safariExtensionPingRecently, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["browserExtensionTeConnection"], typing_extensions.Literal["chromeExtensionPingRecently"], typing_extensions.Literal["edgeExtensionPingRecently"], typing_extensions.Literal["firefoxExtensionPingRecently"], typing_extensions.Literal["braveExtensionPingRecently"], typing_extensions.Literal["safariExtensionPingRecently"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        browserExtensionTeConnection: typing.Union[MetaOapg.properties.browserExtensionTeConnection, bool, schemas.Unset] = schemas.unset,
        chromeExtensionPingRecently: typing.Union[MetaOapg.properties.chromeExtensionPingRecently, bool, schemas.Unset] = schemas.unset,
        edgeExtensionPingRecently: typing.Union[MetaOapg.properties.edgeExtensionPingRecently, bool, schemas.Unset] = schemas.unset,
        firefoxExtensionPingRecently: typing.Union[MetaOapg.properties.firefoxExtensionPingRecently, bool, schemas.Unset] = schemas.unset,
        braveExtensionPingRecently: typing.Union[MetaOapg.properties.braveExtensionPingRecently, bool, schemas.Unset] = schemas.unset,
        safariExtensionPingRecently: typing.Union[MetaOapg.properties.safariExtensionPingRecently, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BrowserExtension':
        return super().__new__(
            cls,
            *_args,
            browserExtensionTeConnection=browserExtensionTeConnection,
            chromeExtensionPingRecently=chromeExtensionPingRecently,
            edgeExtensionPingRecently=edgeExtensionPingRecently,
            firefoxExtensionPingRecently=firefoxExtensionPingRecently,
            braveExtensionPingRecently=braveExtensionPingRecently,
            safariExtensionPingRecently=safariExtensionPingRecently,
            _configuration=_configuration,
        )
