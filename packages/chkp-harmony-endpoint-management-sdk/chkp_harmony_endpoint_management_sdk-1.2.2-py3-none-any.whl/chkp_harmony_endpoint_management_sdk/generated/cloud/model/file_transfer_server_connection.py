# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class FileTransferServerConnection(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "protocol",
            "address",
        }
        
        class properties:
        
            @staticmethod
            def protocol() -> typing.Type['FileTransferProtocol']:
                return FileTransferProtocol
            address = schemas.StrSchema
            fingerprint = schemas.StrSchema
            __annotations__ = {
                "protocol": protocol,
                "address": address,
                "fingerprint": fingerprint,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    protocol: 'FileTransferProtocol'
    address: MetaOapg.properties.address
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol"]) -> 'FileTransferProtocol': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["address"]) -> MetaOapg.properties.address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fingerprint"]) -> MetaOapg.properties.fingerprint: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["protocol"], typing_extensions.Literal["address"], typing_extensions.Literal["fingerprint"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol"]) -> 'FileTransferProtocol': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["address"]) -> MetaOapg.properties.address: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fingerprint"]) -> typing.Union[MetaOapg.properties.fingerprint, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["protocol"], typing_extensions.Literal["address"], typing_extensions.Literal["fingerprint"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        protocol: 'FileTransferProtocol',
        address: typing.Union[MetaOapg.properties.address, str, ],
        fingerprint: typing.Union[MetaOapg.properties.fingerprint, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FileTransferServerConnection':
        return super().__new__(
            cls,
            *_args,
            protocol=protocol,
            address=address,
            fingerprint=fingerprint,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.file_transfer_protocol import FileTransferProtocol
