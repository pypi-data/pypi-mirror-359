# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IBotProtection(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def connectionInspectionMode() -> typing.Type['IBotProtectionConnectionInspectionModeEnum']:
                return IBotProtectionConnectionInspectionModeEnum
        
            @staticmethod
            def confidenceThresholds() -> typing.Type['IBotProtectionConfidenceThresholds']:
                return IBotProtectionConfidenceThresholds
        
            @staticmethod
            def reporting() -> typing.Type['IBotProtectionReporting']:
                return IBotProtectionReporting
        
            @staticmethod
            def sslInspection() -> typing.Type['IBotProtectionSslInspection']:
                return IBotProtectionSslInspection
            __annotations__ = {
                "connectionInspectionMode": connectionInspectionMode,
                "confidenceThresholds": confidenceThresholds,
                "reporting": reporting,
                "sslInspection": sslInspection,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connectionInspectionMode"]) -> 'IBotProtectionConnectionInspectionModeEnum': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["confidenceThresholds"]) -> 'IBotProtectionConfidenceThresholds': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reporting"]) -> 'IBotProtectionReporting': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sslInspection"]) -> 'IBotProtectionSslInspection': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["connectionInspectionMode"], typing_extensions.Literal["confidenceThresholds"], typing_extensions.Literal["reporting"], typing_extensions.Literal["sslInspection"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connectionInspectionMode"]) -> typing.Union['IBotProtectionConnectionInspectionModeEnum', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["confidenceThresholds"]) -> typing.Union['IBotProtectionConfidenceThresholds', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reporting"]) -> typing.Union['IBotProtectionReporting', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sslInspection"]) -> typing.Union['IBotProtectionSslInspection', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["connectionInspectionMode"], typing_extensions.Literal["confidenceThresholds"], typing_extensions.Literal["reporting"], typing_extensions.Literal["sslInspection"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        connectionInspectionMode: typing.Union['IBotProtectionConnectionInspectionModeEnum', schemas.Unset] = schemas.unset,
        confidenceThresholds: typing.Union['IBotProtectionConfidenceThresholds', schemas.Unset] = schemas.unset,
        reporting: typing.Union['IBotProtectionReporting', schemas.Unset] = schemas.unset,
        sslInspection: typing.Union['IBotProtectionSslInspection', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IBotProtection':
        return super().__new__(
            cls,
            *_args,
            connectionInspectionMode=connectionInspectionMode,
            confidenceThresholds=confidenceThresholds,
            reporting=reporting,
            sslInspection=sslInspection,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_bot_protection_confidence_thresholds import IBotProtectionConfidenceThresholds
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_bot_protection_connection_inspection_mode_enum import IBotProtectionConnectionInspectionModeEnum
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_bot_protection_reporting import IBotProtectionReporting
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_bot_protection_ssl_inspection import IBotProtectionSslInspection
