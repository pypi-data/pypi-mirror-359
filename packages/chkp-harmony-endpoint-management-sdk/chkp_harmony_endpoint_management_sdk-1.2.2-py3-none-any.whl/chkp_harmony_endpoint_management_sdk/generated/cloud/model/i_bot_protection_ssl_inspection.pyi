# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IBotProtectionSslInspection(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def enableWhiteList() -> typing.Type['StandardToggleState']:
                return StandardToggleState
        
            @staticmethod
            def browserTraffic() -> typing.Type['SSLInspectionMode']:
                return SSLInspectionMode
        
            @staticmethod
            def onFail() -> typing.Type['FailAction']:
                return FailAction
        
            @staticmethod
            def mode() -> typing.Type['SSLInspectionMode']:
                return SSLInspectionMode
            __annotations__ = {
                "enableWhiteList": enableWhiteList,
                "browserTraffic": browserTraffic,
                "onFail": onFail,
                "mode": mode,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enableWhiteList"]) -> 'StandardToggleState': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["browserTraffic"]) -> 'SSLInspectionMode': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["onFail"]) -> 'FailAction': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> 'SSLInspectionMode': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["enableWhiteList"], typing_extensions.Literal["browserTraffic"], typing_extensions.Literal["onFail"], typing_extensions.Literal["mode"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enableWhiteList"]) -> typing.Union['StandardToggleState', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["browserTraffic"]) -> typing.Union['SSLInspectionMode', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["onFail"]) -> typing.Union['FailAction', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union['SSLInspectionMode', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["enableWhiteList"], typing_extensions.Literal["browserTraffic"], typing_extensions.Literal["onFail"], typing_extensions.Literal["mode"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        enableWhiteList: typing.Union['StandardToggleState', schemas.Unset] = schemas.unset,
        browserTraffic: typing.Union['SSLInspectionMode', schemas.Unset] = schemas.unset,
        onFail: typing.Union['FailAction', schemas.Unset] = schemas.unset,
        mode: typing.Union['SSLInspectionMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IBotProtectionSslInspection':
        return super().__new__(
            cls,
            *_args,
            enableWhiteList=enableWhiteList,
            browserTraffic=browserTraffic,
            onFail=onFail,
            mode=mode,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.fail_action import FailAction
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.ssl_inspection_mode import SSLInspectionMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.standard_toggle_state import StandardToggleState
