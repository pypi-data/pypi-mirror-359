# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class QuarantinedFileMetadata(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "remediationType",
            "sensor",
            "incidentId",
        }
        
        class properties:
        
            @staticmethod
            def remediationType() -> typing.Type['RemediationType']:
                return RemediationType
        
            @staticmethod
            def sensor() -> typing.Type['EndpointClientSensorType']:
                return EndpointClientSensorType
            incidentId = schemas.StrSchema
            __annotations__ = {
                "remediationType": remediationType,
                "sensor": sensor,
                "incidentId": incidentId,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    remediationType: 'RemediationType'
    sensor: 'EndpointClientSensorType'
    incidentId: MetaOapg.properties.incidentId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remediationType"]) -> 'RemediationType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sensor"]) -> 'EndpointClientSensorType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["incidentId"]) -> MetaOapg.properties.incidentId: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["remediationType"], typing_extensions.Literal["sensor"], typing_extensions.Literal["incidentId"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remediationType"]) -> 'RemediationType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sensor"]) -> 'EndpointClientSensorType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["incidentId"]) -> MetaOapg.properties.incidentId: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["remediationType"], typing_extensions.Literal["sensor"], typing_extensions.Literal["incidentId"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        remediationType: 'RemediationType',
        sensor: 'EndpointClientSensorType',
        incidentId: typing.Union[MetaOapg.properties.incidentId, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'QuarantinedFileMetadata':
        return super().__new__(
            cls,
            *_args,
            remediationType=remediationType,
            sensor=sensor,
            incidentId=incidentId,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.endpoint_client_sensor_type import EndpointClientSensorType
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.remediation_type import RemediationType
