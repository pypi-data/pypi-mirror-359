# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class VpnSiteAuth(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "method",
        }
        
        class properties:
        
            @staticmethod
            def method() -> typing.Type['VpnSiteAuthMethod']:
                return VpnSiteAuthMethod
            __annotations__ = {
                "method": method,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    method: 'VpnSiteAuthMethod'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["method"]) -> 'VpnSiteAuthMethod': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["method"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["method"]) -> 'VpnSiteAuthMethod': ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["method"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        method: 'VpnSiteAuthMethod',
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VpnSiteAuth':
        return super().__new__(
            cls,
            *_args,
            method=method,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.vpn_site_auth_method import VpnSiteAuthMethod
