# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class AddRegistryKeyParams(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "hive",
            "valueName",
            "valueType",
            "key",
            "valueData",
        }
        
        class properties:
        
            @staticmethod
            def hive() -> typing.Type['RegistryHive']:
                return RegistryHive
            key = schemas.StrSchema
            valueName = schemas.StrSchema
        
            @staticmethod
            def valueType() -> typing.Type['RegistryValueType']:
                return RegistryValueType
            valueData = schemas.StrSchema
            informUser = schemas.BoolSchema
            allowPostpone = schemas.BoolSchema
            isRedirected = schemas.BoolSchema
            __annotations__ = {
                "hive": hive,
                "key": key,
                "valueName": valueName,
                "valueType": valueType,
                "valueData": valueData,
                "informUser": informUser,
                "allowPostpone": allowPostpone,
                "isRedirected": isRedirected,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    hive: 'RegistryHive'
    valueName: MetaOapg.properties.valueName
    valueType: 'RegistryValueType'
    key: MetaOapg.properties.key
    valueData: MetaOapg.properties.valueData
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hive"]) -> 'RegistryHive': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valueName"]) -> MetaOapg.properties.valueName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valueType"]) -> 'RegistryValueType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["key"]) -> MetaOapg.properties.key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valueData"]) -> MetaOapg.properties.valueData: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["informUser"]) -> MetaOapg.properties.informUser: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowPostpone"]) -> MetaOapg.properties.allowPostpone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isRedirected"]) -> MetaOapg.properties.isRedirected: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["hive"], typing_extensions.Literal["valueName"], typing_extensions.Literal["valueType"], typing_extensions.Literal["key"], typing_extensions.Literal["valueData"], typing_extensions.Literal["informUser"], typing_extensions.Literal["allowPostpone"], typing_extensions.Literal["isRedirected"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hive"]) -> 'RegistryHive': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valueName"]) -> MetaOapg.properties.valueName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valueType"]) -> 'RegistryValueType': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["key"]) -> MetaOapg.properties.key: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valueData"]) -> MetaOapg.properties.valueData: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["informUser"]) -> typing.Union[MetaOapg.properties.informUser, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowPostpone"]) -> typing.Union[MetaOapg.properties.allowPostpone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isRedirected"]) -> typing.Union[MetaOapg.properties.isRedirected, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["hive"], typing_extensions.Literal["valueName"], typing_extensions.Literal["valueType"], typing_extensions.Literal["key"], typing_extensions.Literal["valueData"], typing_extensions.Literal["informUser"], typing_extensions.Literal["allowPostpone"], typing_extensions.Literal["isRedirected"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        hive: 'RegistryHive',
        valueName: typing.Union[MetaOapg.properties.valueName, str, ],
        valueType: 'RegistryValueType',
        key: typing.Union[MetaOapg.properties.key, str, ],
        valueData: typing.Union[MetaOapg.properties.valueData, str, ],
        informUser: typing.Union[MetaOapg.properties.informUser, bool, schemas.Unset] = schemas.unset,
        allowPostpone: typing.Union[MetaOapg.properties.allowPostpone, bool, schemas.Unset] = schemas.unset,
        isRedirected: typing.Union[MetaOapg.properties.isRedirected, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AddRegistryKeyParams':
        return super().__new__(
            cls,
            *_args,
            hive=hive,
            valueName=valueName,
            valueType=valueType,
            key=key,
            valueData=valueData,
            informUser=informUser,
            allowPostpone=allowPostpone,
            isRedirected=isRedirected,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.registry_hive import RegistryHive
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.registry_value_type import RegistryValueType
