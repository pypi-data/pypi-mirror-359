# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class ComputersByUnlimitedFilterArgs(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "filters",
        }
        
        class properties:
            
            
            class filters(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['IFilter']:
                        return IFilter
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['IFilter'], typing.List['IFilter']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'filters':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'IFilter':
                    return super().__getitem__(i)
        
            @staticmethod
            def paging() -> typing.Type['Paging']:
                return Paging
        
            @staticmethod
            def viewType() -> typing.Type['EmonView']:
                return EmonView
            __annotations__ = {
                "filters": filters,
                "paging": paging,
                "viewType": viewType,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    filters: MetaOapg.properties.filters
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["filters"]) -> MetaOapg.properties.filters: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paging"]) -> 'Paging': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["viewType"]) -> 'EmonView': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["filters"], typing_extensions.Literal["paging"], typing_extensions.Literal["viewType"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["filters"]) -> MetaOapg.properties.filters: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paging"]) -> typing.Union['Paging', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["viewType"]) -> typing.Union['EmonView', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["filters"], typing_extensions.Literal["paging"], typing_extensions.Literal["viewType"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        filters: typing.Union[MetaOapg.properties.filters, list, tuple, ],
        paging: typing.Union['Paging', schemas.Unset] = schemas.unset,
        viewType: typing.Union['EmonView', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ComputersByUnlimitedFilterArgs':
        return super().__new__(
            cls,
            *_args,
            filters=filters,
            paging=paging,
            viewType=viewType,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.emon_view import EmonView
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_filter import IFilter
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.paging import Paging
