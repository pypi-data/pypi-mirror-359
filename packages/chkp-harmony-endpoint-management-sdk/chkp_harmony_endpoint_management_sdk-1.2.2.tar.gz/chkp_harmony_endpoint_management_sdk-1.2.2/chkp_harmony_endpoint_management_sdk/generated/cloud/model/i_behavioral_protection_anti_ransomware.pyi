# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IBehavioralProtectionAntiRansomware(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def blockBitLocker() -> typing.Type['BlockBitLockerOptions']:
                return BlockBitLockerOptions
        
            @staticmethod
            def mode() -> typing.Type['CapabilityMode']:
                return CapabilityMode
            __annotations__ = {
                "blockBitLocker": blockBitLocker,
                "mode": mode,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["blockBitLocker"]) -> 'BlockBitLockerOptions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> 'CapabilityMode': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["blockBitLocker"], typing_extensions.Literal["mode"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["blockBitLocker"]) -> typing.Union['BlockBitLockerOptions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union['CapabilityMode', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["blockBitLocker"], typing_extensions.Literal["mode"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        blockBitLocker: typing.Union['BlockBitLockerOptions', schemas.Unset] = schemas.unset,
        mode: typing.Union['CapabilityMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IBehavioralProtectionAntiRansomware':
        return super().__new__(
            cls,
            *_args,
            blockBitLocker=blockBitLocker,
            mode=mode,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.block_bit_locker_options import BlockBitLockerOptions
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.capability_mode import CapabilityMode
