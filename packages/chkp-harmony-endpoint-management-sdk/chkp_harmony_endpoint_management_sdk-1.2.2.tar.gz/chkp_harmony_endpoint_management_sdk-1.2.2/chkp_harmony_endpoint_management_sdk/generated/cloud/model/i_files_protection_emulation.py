# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class IFilesProtectionEmulation(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def sensors() -> typing.Type['ThreatPreventionSensors']:
                return ThreatPreventionSensors
        
            @staticmethod
            def upload() -> typing.Type['IFilesProtectionEmulationUpload']:
                return IFilesProtectionEmulationUpload
        
            @staticmethod
            def download() -> typing.Type['IFilesProtectionEmulationDownload']:
                return IFilesProtectionEmulationDownload
            
            
            class unsupportedFileTypeActions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['IFilesProtectionEmulationUnsupportedFileTypeActions']:
                        return IFilesProtectionEmulationUnsupportedFileTypeActions
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['IFilesProtectionEmulationUnsupportedFileTypeActions'], typing.List['IFilesProtectionEmulationUnsupportedFileTypeActions']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'unsupportedFileTypeActions':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'IFilesProtectionEmulationUnsupportedFileTypeActions':
                    return super().__getitem__(i)
            
            
            class fileSystemFileTypesOverrides(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['IFilesProtectionEmulationFileSystemFileTypesOverrides']:
                        return IFilesProtectionEmulationFileSystemFileTypesOverrides
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['IFilesProtectionEmulationFileSystemFileTypesOverrides'], typing.List['IFilesProtectionEmulationFileSystemFileTypesOverrides']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'fileSystemFileTypesOverrides':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'IFilesProtectionEmulationFileSystemFileTypesOverrides':
                    return super().__getitem__(i)
        
            @staticmethod
            def emulationEnvironment() -> typing.Type['EmulationEnvironment']:
                return EmulationEnvironment
        
            @staticmethod
            def mode() -> typing.Type['CapabilityMode']:
                return CapabilityMode
            __annotations__ = {
                "sensors": sensors,
                "upload": upload,
                "download": download,
                "unsupportedFileTypeActions": unsupportedFileTypeActions,
                "fileSystemFileTypesOverrides": fileSystemFileTypesOverrides,
                "emulationEnvironment": emulationEnvironment,
                "mode": mode,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sensors"]) -> 'ThreatPreventionSensors': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["upload"]) -> 'IFilesProtectionEmulationUpload': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["download"]) -> 'IFilesProtectionEmulationDownload': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unsupportedFileTypeActions"]) -> MetaOapg.properties.unsupportedFileTypeActions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileSystemFileTypesOverrides"]) -> MetaOapg.properties.fileSystemFileTypesOverrides: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emulationEnvironment"]) -> 'EmulationEnvironment': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> 'CapabilityMode': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["sensors"], typing_extensions.Literal["upload"], typing_extensions.Literal["download"], typing_extensions.Literal["unsupportedFileTypeActions"], typing_extensions.Literal["fileSystemFileTypesOverrides"], typing_extensions.Literal["emulationEnvironment"], typing_extensions.Literal["mode"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sensors"]) -> typing.Union['ThreatPreventionSensors', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["upload"]) -> typing.Union['IFilesProtectionEmulationUpload', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["download"]) -> typing.Union['IFilesProtectionEmulationDownload', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unsupportedFileTypeActions"]) -> typing.Union[MetaOapg.properties.unsupportedFileTypeActions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileSystemFileTypesOverrides"]) -> typing.Union[MetaOapg.properties.fileSystemFileTypesOverrides, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emulationEnvironment"]) -> typing.Union['EmulationEnvironment', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union['CapabilityMode', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["sensors"], typing_extensions.Literal["upload"], typing_extensions.Literal["download"], typing_extensions.Literal["unsupportedFileTypeActions"], typing_extensions.Literal["fileSystemFileTypesOverrides"], typing_extensions.Literal["emulationEnvironment"], typing_extensions.Literal["mode"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        sensors: typing.Union['ThreatPreventionSensors', schemas.Unset] = schemas.unset,
        upload: typing.Union['IFilesProtectionEmulationUpload', schemas.Unset] = schemas.unset,
        download: typing.Union['IFilesProtectionEmulationDownload', schemas.Unset] = schemas.unset,
        unsupportedFileTypeActions: typing.Union[MetaOapg.properties.unsupportedFileTypeActions, list, tuple, schemas.Unset] = schemas.unset,
        fileSystemFileTypesOverrides: typing.Union[MetaOapg.properties.fileSystemFileTypesOverrides, list, tuple, schemas.Unset] = schemas.unset,
        emulationEnvironment: typing.Union['EmulationEnvironment', schemas.Unset] = schemas.unset,
        mode: typing.Union['CapabilityMode', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IFilesProtectionEmulation':
        return super().__new__(
            cls,
            *_args,
            sensors=sensors,
            upload=upload,
            download=download,
            unsupportedFileTypeActions=unsupportedFileTypeActions,
            fileSystemFileTypesOverrides=fileSystemFileTypesOverrides,
            emulationEnvironment=emulationEnvironment,
            mode=mode,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.capability_mode import CapabilityMode
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.emulation_environment import EmulationEnvironment
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_download import IFilesProtectionEmulationDownload
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_file_system_file_types_overrides import IFilesProtectionEmulationFileSystemFileTypesOverrides
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_unsupported_file_type_actions import IFilesProtectionEmulationUnsupportedFileTypeActions
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.i_files_protection_emulation_upload import IFilesProtectionEmulationUpload
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.threat_prevention_sensors import ThreatPreventionSensors
