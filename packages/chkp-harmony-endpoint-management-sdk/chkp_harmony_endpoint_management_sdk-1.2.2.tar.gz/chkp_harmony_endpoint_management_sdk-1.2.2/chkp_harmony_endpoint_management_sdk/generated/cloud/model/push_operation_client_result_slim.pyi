# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class PushOperationClientResultSlim(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    A Remediation Operation\'s results in regards to a particular client device <p>This is a \'Slim\' structure, containing only the most useful fields; This allows for larger pages to be processed at once</p>
    """

    class MetaOapg:
        required = {
            "machine",
            "operation",
        }
        
        class properties:
        
            @staticmethod
            def machine() -> typing.Type['PushOperationClientMachineInfoSlim']:
                return PushOperationClientMachineInfoSlim
        
            @staticmethod
            def operation() -> typing.Type['PushOperationClientOperationStatusSlim']:
                return PushOperationClientOperationStatusSlim
            __annotations__ = {
                "machine": machine,
                "operation": operation,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    machine: 'PushOperationClientMachineInfoSlim'
    operation: 'PushOperationClientOperationStatusSlim'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["machine"]) -> 'PushOperationClientMachineInfoSlim': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["operation"]) -> 'PushOperationClientOperationStatusSlim': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["machine"], typing_extensions.Literal["operation"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["machine"]) -> 'PushOperationClientMachineInfoSlim': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["operation"]) -> 'PushOperationClientOperationStatusSlim': ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["machine"], typing_extensions.Literal["operation"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        machine: 'PushOperationClientMachineInfoSlim',
        operation: 'PushOperationClientOperationStatusSlim',
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PushOperationClientResultSlim':
        return super().__new__(
            cls,
            *_args,
            machine=machine,
            operation=operation,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.push_operation_client_machine_info_slim import PushOperationClientMachineInfoSlim
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.push_operation_client_operation_status_slim import PushOperationClientOperationStatusSlim
