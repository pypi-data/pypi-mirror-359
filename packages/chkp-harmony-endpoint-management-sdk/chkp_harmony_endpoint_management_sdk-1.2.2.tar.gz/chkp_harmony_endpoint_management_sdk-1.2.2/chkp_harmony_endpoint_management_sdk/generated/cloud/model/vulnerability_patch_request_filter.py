# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class VulnerabilityPatchRequestFilter(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            
            
            class deviceIds(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    max_items = 5000
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'deviceIds':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class cveIdVersionIds(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    max_items = 5000
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'cveIdVersionIds':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "deviceIds": deviceIds,
                "cveIdVersionIds": cveIdVersionIds,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deviceIds"]) -> MetaOapg.properties.deviceIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cveIdVersionIds"]) -> MetaOapg.properties.cveIdVersionIds: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["deviceIds"], typing_extensions.Literal["cveIdVersionIds"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deviceIds"]) -> typing.Union[MetaOapg.properties.deviceIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cveIdVersionIds"]) -> typing.Union[MetaOapg.properties.cveIdVersionIds, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["deviceIds"], typing_extensions.Literal["cveIdVersionIds"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        deviceIds: typing.Union[MetaOapg.properties.deviceIds, list, tuple, schemas.Unset] = schemas.unset,
        cveIdVersionIds: typing.Union[MetaOapg.properties.cveIdVersionIds, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VulnerabilityPatchRequestFilter':
        return super().__new__(
            cls,
            *_args,
            deviceIds=deviceIds,
            cveIdVersionIds=cveIdVersionIds,
            _configuration=_configuration,
        )
