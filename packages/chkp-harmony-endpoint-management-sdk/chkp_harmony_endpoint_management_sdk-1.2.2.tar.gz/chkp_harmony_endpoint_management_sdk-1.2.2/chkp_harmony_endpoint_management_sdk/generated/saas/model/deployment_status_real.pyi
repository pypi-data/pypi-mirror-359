# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.saas import schemas


class DeploymentStatusReal(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        required = {
            "inProgressCount",
            "failedCount",
            "notInstalledOrUnknownCount",
            "successCount",
            "totalCount",
        }
        
        class properties:
            totalCount = schemas.Float64Schema
            successCount = schemas.Float64Schema
            inProgressCount = schemas.Float64Schema
            failedCount = schemas.Float64Schema
            notInstalledOrUnknownCount = schemas.Float64Schema
            __annotations__ = {
                "totalCount": totalCount,
                "successCount": successCount,
                "inProgressCount": inProgressCount,
                "failedCount": failedCount,
                "notInstalledOrUnknownCount": notInstalledOrUnknownCount,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    inProgressCount: MetaOapg.properties.inProgressCount
    failedCount: MetaOapg.properties.failedCount
    notInstalledOrUnknownCount: MetaOapg.properties.notInstalledOrUnknownCount
    successCount: MetaOapg.properties.successCount
    totalCount: MetaOapg.properties.totalCount
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["inProgressCount"]) -> MetaOapg.properties.inProgressCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["failedCount"]) -> MetaOapg.properties.failedCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notInstalledOrUnknownCount"]) -> MetaOapg.properties.notInstalledOrUnknownCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["successCount"]) -> MetaOapg.properties.successCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["inProgressCount"], typing_extensions.Literal["failedCount"], typing_extensions.Literal["notInstalledOrUnknownCount"], typing_extensions.Literal["successCount"], typing_extensions.Literal["totalCount"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["inProgressCount"]) -> MetaOapg.properties.inProgressCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["failedCount"]) -> MetaOapg.properties.failedCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notInstalledOrUnknownCount"]) -> MetaOapg.properties.notInstalledOrUnknownCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["successCount"]) -> MetaOapg.properties.successCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalCount"]) -> MetaOapg.properties.totalCount: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["inProgressCount"], typing_extensions.Literal["failedCount"], typing_extensions.Literal["notInstalledOrUnknownCount"], typing_extensions.Literal["successCount"], typing_extensions.Literal["totalCount"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        inProgressCount: typing.Union[MetaOapg.properties.inProgressCount, decimal.Decimal, int, float, ],
        failedCount: typing.Union[MetaOapg.properties.failedCount, decimal.Decimal, int, float, ],
        notInstalledOrUnknownCount: typing.Union[MetaOapg.properties.notInstalledOrUnknownCount, decimal.Decimal, int, float, ],
        successCount: typing.Union[MetaOapg.properties.successCount, decimal.Decimal, int, float, ],
        totalCount: typing.Union[MetaOapg.properties.totalCount, decimal.Decimal, int, float, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DeploymentStatusReal':
        return super().__new__(
            cls,
            *_args,
            inProgressCount=inProgressCount,
            failedCount=failedCount,
            notInstalledOrUnknownCount=notInstalledOrUnknownCount,
            successCount=successCount,
            totalCount=totalCount,
            _configuration=_configuration,
        )
