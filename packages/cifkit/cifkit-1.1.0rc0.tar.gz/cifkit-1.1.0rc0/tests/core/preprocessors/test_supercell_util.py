from cifkit.preprocessors.supercell_util import _shift_xyz_plus_minus, get_cell_atom_count


def test_get_cell_atom_count_no_shift(unitcell_points_URhIn):
    assert get_cell_atom_count(unitcell_points_URhIn) == 22


def test_get_cell_atom_count_full_shift(supercell_points_URhIn):
    assert get_cell_atom_count(supercell_points_URhIn) == 336


def test_shift_points_based_on_supercell_size_shift_by_one():
    actual_points_shifted = _shift_xyz_plus_minus(1)
    # Shift +/- 1 in each direction, expected 3 by 3 by 3 supercell (27 unit cells)
    assert len(actual_points_shifted) == 27
    assert actual_points_shifted == [
        [-1, -1, -1],
        [-1, -1, 0],
        [-1, -1, 1],
        [-1, 0, -1],
        [-1, 0, 0],
        [-1, 0, 1],
        [-1, 1, -1],
        [-1, 1, 0],
        [-1, 1, 1],
        [0, -1, -1],
        [0, -1, 0],
        [0, -1, 1],
        [0, 0, -1],
        [0, 0, 0],
        [0, 0, 1],
        [0, 1, -1],
        [0, 1, 0],
        [0, 1, 1],
        [1, -1, -1],
        [1, -1, 0],
        [1, -1, 1],
        [1, 0, -1],
        [1, 0, 0],
        [1, 0, 1],
        [1, 1, -1],
        [1, 1, 0],
        [1, 1, 1],
    ]


def test_shift_points_based_on_supercell_size_shift_by_two():
    actual_points_shifted = _shift_xyz_plus_minus(2)
    # Shift +/- 2 in each direction, expected 5 by 5 by 5 supercell (125 unit cells)
    assert len(actual_points_shifted) == 125
    assert actual_points_shifted == [
        [-2, -2, -2],
        [-2, -2, -1],
        [-2, -2, 0],
        [-2, -2, 1],
        [-2, -2, 2],
        [-2, -1, -2],
        [-2, -1, -1],
        [-2, -1, 0],
        [-2, -1, 1],
        [-2, -1, 2],
        [-2, 0, -2],
        [-2, 0, -1],
        [-2, 0, 0],
        [-2, 0, 1],
        [-2, 0, 2],
        [-2, 1, -2],
        [-2, 1, -1],
        [-2, 1, 0],
        [-2, 1, 1],
        [-2, 1, 2],
        [-2, 2, -2],
        [-2, 2, -1],
        [-2, 2, 0],
        [-2, 2, 1],
        [-2, 2, 2],
        [-1, -2, -2],
        [-1, -2, -1],
        [-1, -2, 0],
        [-1, -2, 1],
        [-1, -2, 2],
        [-1, -1, -2],
        [-1, -1, -1],
        [-1, -1, 0],
        [-1, -1, 1],
        [-1, -1, 2],
        [-1, 0, -2],
        [-1, 0, -1],
        [-1, 0, 0],
        [-1, 0, 1],
        [-1, 0, 2],
        [-1, 1, -2],
        [-1, 1, -1],
        [-1, 1, 0],
        [-1, 1, 1],
        [-1, 1, 2],
        [-1, 2, -2],
        [-1, 2, -1],
        [-1, 2, 0],
        [-1, 2, 1],
        [-1, 2, 2],
        [0, -2, -2],
        [0, -2, -1],
        [0, -2, 0],
        [0, -2, 1],
        [0, -2, 2],
        [0, -1, -2],
        [0, -1, -1],
        [0, -1, 0],
        [0, -1, 1],
        [0, -1, 2],
        [0, 0, -2],
        [0, 0, -1],
        [0, 0, 0],
        [0, 0, 1],
        [0, 0, 2],
        [0, 1, -2],
        [0, 1, -1],
        [0, 1, 0],
        [0, 1, 1],
        [0, 1, 2],
        [0, 2, -2],
        [0, 2, -1],
        [0, 2, 0],
        [0, 2, 1],
        [0, 2, 2],
        [1, -2, -2],
        [1, -2, -1],
        [1, -2, 0],
        [1, -2, 1],
        [1, -2, 2],
        [1, -1, -2],
        [1, -1, -1],
        [1, -1, 0],
        [1, -1, 1],
        [1, -1, 2],
        [1, 0, -2],
        [1, 0, -1],
        [1, 0, 0],
        [1, 0, 1],
        [1, 0, 2],
        [1, 1, -2],
        [1, 1, -1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 1, 2],
        [1, 2, -2],
        [1, 2, -1],
        [1, 2, 0],
        [1, 2, 1],
        [1, 2, 2],
        [2, -2, -2],
        [2, -2, -1],
        [2, -2, 0],
        [2, -2, 1],
        [2, -2, 2],
        [2, -1, -2],
        [2, -1, -1],
        [2, -1, 0],
        [2, -1, 1],
        [2, -1, 2],
        [2, 0, -2],
        [2, 0, -1],
        [2, 0, 0],
        [2, 0, 1],
        [2, 0, 2],
        [2, 1, -2],
        [2, 1, -1],
        [2, 1, 0],
        [2, 1, 1],
        [2, 1, 2],
        [2, 2, -2],
        [2, 2, -1],
        [2, 2, 0],
        [2, 2, 1],
        [2, 2, 2],
    ]
