Metadata-Version: 2.4
Name: codex-cli-montezuma
Version: 0.1.4
Summary: Codex CLI ‚Äì Ferramentas de IA, APIs e automa√ß√£o para desenvolvedores. Modular, extens√≠vel, com logging, testes e documenta√ß√£o de refer√™ncia.
Author-email: montezuma <pedromontezuma@gmail.com>
Keywords: cli,ia,automacao,desenvolvedores,aplicativo,codex
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Utilities
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests
Requires-Dist: sqlalchemy
Requires-Dist: google-genai
Requires-Dist: google-api-python-client
Requires-Dist: google-auth
Requires-Dist: google-auth-oauthlib
Requires-Dist: google-auth-httplib2
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Dynamic: license-file

# Codex CLI: Seu Assistente de IA e Automa√ß√£o no Terminal

[![PyPI](https://img.shields.io/pypi/v/codex-cli-montezuma)](https://pypi.org/project/codex-cli-montezuma/)

**Codex CLI** √© uma poderosa ferramenta de linha de comando projetada para desenvolvedores, engenheiros de dados e entusiastas de automa√ß√£o. Integre a intelig√™ncia artificial do Google Gemini diretamente no seu fluxo de trabalho, automatize tarefas repetitivas e consulte uma variedade de fontes de informa√ß√£o sem sair do terminal.

Com uma arquitetura extens√≠vel e foco na produtividade, o Codex CLI armazena seu hist√≥rico de intera√ß√µes, permite a busca por conversas passadas e oferece um conjunto de ferramentas integradas para interagir com seu sistema de arquivos e APIs externas.

---

## üåê Documenta√ß√£o Completa (Multil√≠ngue)

Para uma experi√™ncia completa, incluindo guias de instala√ß√£o, configura√ß√£o de API e tutoriais detalhados, por favor, selecione seu idioma:

- üáßüá∑ [**Documenta√ß√£o em Portugu√™s**](docs/pt/README.md)
- üá∫üá∏ [**Documentation in English**](docs/en/README.md)

---

## Instala√ß√£o R√°pida

```bash
pip install codex-cli-montezuma
```

## Como Usar o Codex CLI (Passo a Passo)

### 1. Configura√ß√£o das Chaves de API

Para que o Codex possa usar a IA do Google Gemini e outras ferramentas de busca, voc√™ precisa fornecer suas chaves de API.

**Por que isso √© necess√°rio?**
*   **`GOOGLE_API_KEY`**: Autentica suas requisi√ß√µes √† API do Gemini, permitindo que o Codex envie suas perguntas e receba respostas da IA.
*   **`GOOGLE_SEARCH_CX`**: √â o ID do seu Mecanismo de Busca Personalizada do Google, necess√°rio para a ferramenta `consultar_google`.

**Como configurar:**

Voc√™ tem duas op√ß√µes:

*   **(Recomendado) Script de Configura√ß√£o:** Se voc√™ clonou o reposit√≥rio, pode usar nosso script interativo:
    ```bash
    ./scripts/setup-api-keys.sh
    ```
    Ele ir√° gui√°-lo e criar um arquivo `.env` automaticamente.

*   **Manualmente (Arquivo `.env`):** Crie um arquivo chamado `.env` na pasta onde voc√™ executar√° o comando `codex` e adicione as seguintes linhas, substituindo pelos seus valores:
    ```
    GOOGLE_API_KEY="SUA_CHAVE_DE_API_DO_GEMINI"
    GOOGLE_SEARCH_CX="SEU_ID_DE_MECANISMO_DE_BUSCA_PERSONALIZADA"
    ```

> Para um guia detalhado sobre **como obter** essas chaves, consulte nosso [guia de configura√ß√£o de API Keys](configuracao-api-keys.md).

### 2. Executando o Codex CLI

Com tudo instalado e configurado, voc√™ pode interagir com o Codex de v√°rias maneiras:

**a) Modo Interativo (Chat)**

Este √© o modo principal, onde voc√™ conversa com a IA. Para iniciar, simplesmente execute:
```bash
codex
```
A partir da√≠, voc√™ pode fazer perguntas, pedir para executar tarefas ou usar as ferramentas dispon√≠veis. Para sair, digite `sair` ou `exit`.

**Exemplo de Intera√ß√£o:**
```
Voc√™: Crie um arquivo chamado 'app.py' com um "Hello, World" em Python.

Codex: Claro, usando a ferramenta 'escrever_arquivo'.

(O arquivo app.py √© criado no seu diret√≥rio)
```

**b) Comandos Diretos (Argumentos)**

Voc√™ pode executar comandos espec√≠ficos diretamente da linha de comando, sem entrar no modo de chat.

*   **Buscar no Hist√≥rico:**
    ```bash
    codex --buscar "termo de busca"
    ```

*   **Gerar Relat√≥rio de Uso:**
    ```bash
    codex --relatorio-uso
    ```

*   **Exportar Hist√≥rico para JSONL:**
    ```bash
    codex --exportar-jsonl
    ```

*   **Gerar Documenta√ß√£o das Ferramentas:**
    ```bash
    codex --doc-ferramentas
    ```

*   **Ver Perfil de Uso:**
    ```bash
    codex --perfil
    ```
---
## Funcionalidades Principais

- **Intelig√™ncia Artificial Integrada:** Converse com o modelo de linguagem **Google Gemini** para gerar c√≥digo, obter explica√ß√µes, traduzir textos e muito mais.
- **Hist√≥rico de Conversas:** Todas as suas intera√ß√µes s√£o salvas localmente em um banco de dados SQLite, permitindo que voc√™ revise e busque por informa√ß√µes importantes a qualquer momento.
- **Sistema de Ferramentas Extens√≠vel:**
  - `escrever_arquivo`: Crie ou modifique arquivos no seu projeto.
  - `listar_arquivos`: Navegue pela estrutura de diret√≥rios.
  - `ler_arquivo`: Leia o conte√∫do de arquivos de texto.
  - `consultar_wikipedia`: Obtenha resumos r√°pidos da Wikipedia.
  - `consultar_stackoverflow`: Encontre solu√ß√µes para problemas de programa√ß√£o.
  - `consultar_google`: Realize buscas na web.
  - E muito mais!
- **Suporte Multil√≠ngue:** A interface e a documenta√ß√£o est√£o dispon√≠veis em Portugu√™s e Ingl√™s.
- **Automa√ß√£o de Tarefas:** Use o Codex para automatizar scripts, gerar relat√≥rios e interagir com seu ambiente de desenvolvimento.

---

## Logging Estruturado e Depura√ß√£o

O Codex CLI utiliza logging estruturado e configur√°vel em todos os m√≥dulos, facilitando depura√ß√£o, auditoria e integra√ß√£o com ferramentas externas.

- O logging √© centralizado em `src/log_config.py`.
- Por padr√£o, logs s√£o enviados para o console, mas voc√™ pode configurar para arquivo ou outros destinos.
- N√≠veis suportados: DEBUG, INFO, WARNING, ERROR, CRITICAL.
- Todos os m√≥dulos usam `logger = logging.getLogger("codex.nome_do_modulo")` para rastreabilidade.

---

## Arquitetura e Boas Pr√°ticas
- C√≥digo modularizado em `src/` (core, integra√ß√µes, sugest√µes, banco, etc).
- Todas as fun√ß√µes principais usam type hints e docstrings.
- Logging estruturado em todos os fluxos.
- Testes automatizados com pytest e mocks para integra√ß√µes externas.
- Automa√ß√£o de build, testes e limpeza via Makefile e scripts.
- Extensibilidade planejada via sistema de plugins (em desenvolvimento).

---

## Para Desenvolvedores
- Siga o padr√£o de logging e type hints em todo novo c√≥digo.
- Consulte `src/log_config.py` para configurar logs.
- Veja exemplos de testes e patches em `tests/` e `docs/guia_didatico/como_escrever_testes.md`.
- Documenta√ß√£o de cada ferramenta √© gerada automaticamente em `docs/guia_didatico/auto_documentacao_ferramentas.md`.
- Para criar novas integra√ß√µes, siga o padr√£o de `src/integrations/` e registre no dicion√°rio `FERRAMENTAS`.

---


## Sum√°rio das Mudan√ßas Recentes (2025)

- **Modulariza√ß√£o total:** C√≥digo reorganizado em `src/` com separa√ß√£o clara de integra√ß√µes, core, sugest√µes e banco.
- **Type hints e docstrings:** Todo o c√≥digo principal agora segue tipagem est√°tica e documenta√ß√£o de fun√ß√µes.
- **Logging estruturado:** Todos os m√≥dulos usam logging centralizado e configur√°vel via `src/log_config.py`.
- **Testes automatizados:** Cobertura total com pytest, incluindo mocks para integra√ß√µes externas.
- **Automa√ß√£o:** Makefile e scripts para build, testes, limpeza e gera√ß√£o de documenta√ß√£o.
- **Extensibilidade:** Estrutura pronta para plugins e novas integra√ß√µes.
- **Documenta√ß√£o did√°tica:** Todos os guias, exemplos e auto-documenta√ß√£o atualizados.
- **Personaliza√ß√£o din√¢mica:** Respostas do agente adaptam tom, exemplos e dicas conforme perfil do usu√°rio.
- **CLI aprimorado:** Sugest√µes inteligentes, exporta√ß√£o de hist√≥rico, relat√≥rios e perfil do usu√°rio.

Consulte o di√°rio de bordo (`docs/diario_de_bordo.md`) para hist√≥rico detalhado e decis√µes de arquitetura.

---

## Privacidade e Hist√≥rico

- O hist√≥rico de conversas do Codex CLI √© salvo **localmente** no arquivo `memoria_codex.db` na pasta onde o comando √© executado.
- **Apenas quem tem acesso ao arquivo .db pode ver o hist√≥rico.**
- O hist√≥rico **n√£o √© enviado para a internet** nem compartilhado entre usu√°rios diferentes, a menos que o arquivo seja copiado manualmente.
- Para resetar seu hist√≥rico, basta apagar o arquivo `memoria_codex.db`.
- Em ambientes multiusu√°rio, recomenda-se rodar o CLI em pastas separadas para cada usu√°rio.

> Para planos de seguran√ßa avan√ßada (criptografia, prote√ß√£o por senha, etc), consulte o roadmap ou entre em contato com o mantenedor.

---

Projeto did√°tico, aberto a sugest√µes e contribui√ß√µes!

## Licen√ßa
MIT License. Consulte o arquivo `LICENSE` para mais detalhes.
