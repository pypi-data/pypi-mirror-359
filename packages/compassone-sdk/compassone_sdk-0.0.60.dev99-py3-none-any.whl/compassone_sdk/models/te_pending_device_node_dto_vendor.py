from typing import Literal, cast

TEPendingDeviceNodeDtoVendor = Literal[
    "ALCATEL",
    "AMAZON",
    "APC",
    "APPLE",
    "ARISTA",
    "ARRIS",
    "AVAYA",
    "BELKIN",
    "BLACKBERRY",
    "BLUE_COAT_SYSTEMS",
    "BRIGHTSIGN",
    "BROCADE",
    "BUFFALO",
    "CANON",
    "CISCO",
    "DELL",
    "DLINK",
    "EASYIO",
    "EATON",
    "EMERSON",
    "ENTERASYS",
    "EPSON",
    "ERICSSON",
    "EXTREME",
    "F5",
    "FIBERHOME",
    "FORTINET",
    "FREEWAVE",
    "GOOGLE",
    "HIKVISION",
    "HONEYWELL",
    "HP",
    "HTC",
    "HUAWEI",
    "IBM",
    "INGENICO",
    "JOHNSON_CONTROLS",
    "JUNIPER",
    "LEXMARK",
    "LG",
    "MERCURY_SECURITY",
    "MICROSOFT",
    "MIKROTIK",
    "MISTUBISHI",
    "MOTOROLA",
    "MURATA",
    "NEC",
    "NETAPP",
    "NETGEAR",
    "NINTENDO",
    "NOKIA",
    "NORTEL",
    "ORACLE",
    "OTIS",
    "PALOALTONETWORKS",
    "PARALLELS",
    "PLANET_TECHNOLOGY",
    "POLYCOM",
    "PRONET",
    "REDHAT",
    "RF_IDEAS",
    "RICOH",
    "ROCKWELL_AUTOMATION",
    "ROKU",
    "RUCKUS",
    "SAMSUNG",
    "SCHNEIDER_ELECTRIC",
    "SHARP",
    "SIEMENS",
    "SIERRA_MONITOR",
    "SILEX",
    "SONICWALL",
    "SONY",
    "SUN",
    "SUSE",
    "TENOVIS",
    "THREECOM",
    "TI",
    "TOSHIBA",
    "TRAPEZE",
    "TRIDIUM",
    "UBIQUITI",
    "UBUNTU",
    "UNKNOWN",
    "UTC",
    "VMWARE",
    "XEROX",
    "YAMAHA",
    "ZEBRA",
    "ZTE",
    "ZYXEL",
]

TE_PENDING_DEVICE_NODE_DTO_VENDOR_VALUES: set[TEPendingDeviceNodeDtoVendor] = {
    "ALCATEL",
    "AMAZON",
    "APC",
    "APPLE",
    "ARISTA",
    "ARRIS",
    "AVAYA",
    "BELKIN",
    "BLACKBERRY",
    "BLUE_COAT_SYSTEMS",
    "BRIGHTSIGN",
    "BROCADE",
    "BUFFALO",
    "CANON",
    "CISCO",
    "DELL",
    "DLINK",
    "EASYIO",
    "EATON",
    "EMERSON",
    "ENTERASYS",
    "EPSON",
    "ERICSSON",
    "EXTREME",
    "F5",
    "FIBERHOME",
    "FORTINET",
    "FREEWAVE",
    "GOOGLE",
    "HIKVISION",
    "HONEYWELL",
    "HP",
    "HTC",
    "HUAWEI",
    "IBM",
    "INGENICO",
    "JOHNSON_CONTROLS",
    "JUNIPER",
    "LEXMARK",
    "LG",
    "MERCURY_SECURITY",
    "MICROSOFT",
    "MIKROTIK",
    "MISTUBISHI",
    "MOTOROLA",
    "MURATA",
    "NEC",
    "NETAPP",
    "NETGEAR",
    "NINTENDO",
    "NOKIA",
    "NORTEL",
    "ORACLE",
    "OTIS",
    "PALOALTONETWORKS",
    "PARALLELS",
    "PLANET_TECHNOLOGY",
    "POLYCOM",
    "PRONET",
    "REDHAT",
    "RF_IDEAS",
    "RICOH",
    "ROCKWELL_AUTOMATION",
    "ROKU",
    "RUCKUS",
    "SAMSUNG",
    "SCHNEIDER_ELECTRIC",
    "SHARP",
    "SIEMENS",
    "SIERRA_MONITOR",
    "SILEX",
    "SONICWALL",
    "SONY",
    "SUN",
    "SUSE",
    "TENOVIS",
    "THREECOM",
    "TI",
    "TOSHIBA",
    "TRAPEZE",
    "TRIDIUM",
    "UBIQUITI",
    "UBUNTU",
    "UNKNOWN",
    "UTC",
    "VMWARE",
    "XEROX",
    "YAMAHA",
    "ZEBRA",
    "ZTE",
    "ZYXEL",
}


def check_te_pending_device_node_dto_vendor(value: str) -> TEPendingDeviceNodeDtoVendor:
    if value in TE_PENDING_DEVICE_NODE_DTO_VENDOR_VALUES:
        return cast(TEPendingDeviceNodeDtoVendor, value)
    raise TypeError(f"Unexpected value {value!r}. Expected one of {TE_PENDING_DEVICE_NODE_DTO_VENDOR_VALUES!r}")
