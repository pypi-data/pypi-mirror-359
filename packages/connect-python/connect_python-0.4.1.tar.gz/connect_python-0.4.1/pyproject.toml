[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "connect-python"
dynamic = ["version"]
description = "Client runtime library for Connect RPC"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Spencer Nelson", email = "spencer@firetiger.com"},
]
maintainers = [
    {name = "Spencer Nelson", email = "spencer@firetiger.com"},
]
keywords = ["rpc", "grpc", "connect", "protobuf", "http"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = [
    "aiohttp>=3.1", # 3.1 adds AsyncIterablePayload, which we need
    "multidict",
    "protobuf",
    "urllib3>=2.5.0",
]

[project.optional-dependencies]
compiler = [
    "protogen>=0.3",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "gunicorn>=23.0.0",
    "brotli>=1.1.0",
    "pyzstd>=0.17.0",
]

[project.scripts]
protoc-gen-connect_python = "connectrpc.protoc_gen_connect_python.main:main"

[project.urls]
Homepage = "https://github.com/firetiger-oss/connect-python"
Repository = "https://github.com/firetiger-oss/connect-python"
Issues = "https://github.com/firetiger-oss/connect-python/issues"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }

[tool.hatch.build.targets.wheel]
packages = ["src/connectrpc"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_unreachable = true
warn_unused_ignores = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
mypy_path = "src"

[[tool.mypy.overrides]]
module = "connectrpc.generator"
strict = false
check_untyped_defs = false
disallow_untyped_calls = false
warn_return_any = false
disable_error_code = ["union-attr"]

[[tool.mypy.overrides]]
module = "connectrpc.conformance.v1.service_pb2"
ignore_errors = true

[[tool.mypy.overrides]]
module = "connectrpc.conformance.v1.client_compat_pb2"
ignore_errors = true

[[tool.mypy.overrides]]
module = "connectrpc.conformance.v1.server_compat_pb2"
ignore_errors = true

[[tool.mypy.overrides]]
module = "connectrpc.conformance.v1.config_pb2"
ignore_errors = true

[[tool.mypy.overrides]]
module = "brotli"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyzstd"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "compression.zstd"
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 100
src = ["src", "tests"]
exclude = ["tests/conformance/connectrpc", "examples/*_pb2.py", "examples/*_pb2.pyi", "examples/*_pb2_*.py"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["connectrpc"]
force-single-line = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[[tool.uv.index]]
url = "https://buf.build/gen/python"

[dependency-groups]
dev = [
    "connectrpc-conformance-protocolbuffers-pyi>=31.1.0.1.20241008212309",
    "connectrpc-conformance-protocolbuffers-python>=31.1.0.1.20241008212309",
    "just-bin>=1.40.0",
    "python-lsp-server>=1.12.2",
    "ruff-lsp>=0.0.62",
    "types-protobuf>=6.30.2.20250516",
    "bump-my-version>=0.26.0",
    "hatch-vcs>=0.5.0",
    "pytest>=8.4.0",
    "mypy>=1.16.0",
    "ruff>=0.11.13",
]

[tool.bumpversion]
current_version = "0.4.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<release>[a-z]+)(?P<build>\\d+))?"
serialize = [
    "{major}.{minor}.{patch}-{release}{build}",
    "{major}.{minor}.{patch}"
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_vcs_tag = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[tool.bumpversion.parts.release]
optional_value = "final"
first_value = "rc"
values = ["rc", "final"]

[tool.bumpversion.parts.build]
first_value = "1"

[[tool.bumpversion.files]]
filename = "src/connectrpc/_version.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""
