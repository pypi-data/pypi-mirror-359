name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  check-ci:
    runs-on: ubuntu-latest
    steps:
    - name: Wait for CI to pass
      uses: fountainhead/action-wait-for-check@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: lint-and-typecheck
        ref: main

  build-and-publish:
    runs-on: ubuntu-latest
    environment: pypi
    needs: check-ci
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.13.3

    - name: Install dependencies
      run: uv sync --group dev --all-extras

    - name: Build package
      run: uv build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Extract release notes
      id: extract-release-notes
      run: |
        version=${GITHUB_REF#refs/tags/v}
        if [[ "$version" == *"-"* ]]; then
          echo "prerelease=true" >> $GITHUB_OUTPUT
        else
          echo "prerelease=false" >> $GITHUB_OUTPUT
        fi
        echo "version=$version" >> $GITHUB_OUTPUT

        # Get previous tag for changelog comparison
        previous_tag=$(git tag --sort=-version:refname | grep -v "^v$version$" | head -n1)
        if [ -n "$previous_tag" ]; then
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT
        else
          echo "previous_tag=" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.extract-release-notes.outputs.version }}
        prerelease: ${{ steps.extract-release-notes.outputs.prerelease }}
        body: |
          ## Changes in ${{ steps.extract-release-notes.outputs.version }}

          ${{ steps.extract-release-notes.outputs.previous_tag && format('See the full changelog at https://github.com/{0}/compare/{1}...v{2}', github.repository, steps.extract-release-notes.outputs.previous_tag, steps.extract-release-notes.outputs.version) || 'Initial release' }}

          ### Installation
          ```bash
          pip install firetiger-connect-python==${{ steps.extract-release-notes.outputs.version }}
          ```
