# generated by datamodel-codegen:
#   filename:  secret_store_entry_state.json

from __future__ import annotations

from enum import Enum
from typing import Sequence, Union

from pydantic import BaseModel, Field, RootModel


class Version(Enum):
    V0 = 'V0'


class Type(Enum):
    DatasetKey = 'DatasetKey'


class Type34(Enum):
    DatasetMetadata = 'DatasetMetadata'


class Type35(Enum):
    PendingDatasetImport = 'PendingDatasetImport'


class Type36(Enum):
    PendingDatasetMetadataImport = 'PendingDatasetMetadataImport'


class Type37(Enum):
    UsersList = 'UsersList'


class UserRole(Enum):
    Owner = 'Owner'
    User = 'User'


class User(BaseModel):
    id: str
    role: UserRole


class SecretStoreEntryAcl1(BaseModel):
    type: Type37
    users: Sequence[User]


class SecretStoreEntryAcl(RootModel[SecretStoreEntryAcl1]):
    root: SecretStoreEntryAcl1


class SecretStoreEntryState1(BaseModel):
    acl: SecretStoreEntryAcl
    version: Version
    manifest_hash: str
    type: Type


class SecretStoreEntryState2(BaseModel):
    acl: SecretStoreEntryAcl
    version: Version
    manifest_hash: str
    type: Type34


class SecretStoreEntryState3(BaseModel):
    acl: SecretStoreEntryAcl
    version: Version
    data_connector_job_id: str
    type: Type35


class SecretStoreEntryState4(BaseModel):
    acl: SecretStoreEntryAcl
    version: Version
    data_connector_job_id: str
    type: Type36


class SecretStoreEntryState(
    RootModel[
        Union[
            SecretStoreEntryState1,
            SecretStoreEntryState2,
            SecretStoreEntryState3,
            SecretStoreEntryState4,
        ]
    ]
):
    root: Union[
        SecretStoreEntryState1,
        SecretStoreEntryState2,
        SecretStoreEntryState3,
        SecretStoreEntryState4,
    ] = Field(..., title='SecretStoreEntryState')
