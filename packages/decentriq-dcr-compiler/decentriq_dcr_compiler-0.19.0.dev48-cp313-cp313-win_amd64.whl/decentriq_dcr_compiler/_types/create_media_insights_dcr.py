# generated by datamodel-codegen:
#   filename:  create_media_insights_dcr.json

from __future__ import annotations

from typing import Optional, Sequence, Union

from typing_extensions import Literal, NotRequired, TypedDict


class EnclaveSpecificationV0(TypedDict):
    attestationProtoBase64: str
    id: str
    workerProtocol: int


FormatType = Literal[
    'STRING',
    'INTEGER',
    'FLOAT',
    'EMAIL',
    'DATE_ISO8601',
    'PHONE_NUMBER_E164',
    'HASH_SHA256_HEX',
]


HashingAlgorithm = Literal['SHA256_HEX']


ModelEvaluationType = Literal['ROC_CURVE', 'DISTANCE_TO_EMBEDDING', 'JACCARD']


class ModelEvaluationConfig(TypedDict):
    postScopeMerge: Sequence[ModelEvaluationType]
    preScopeMerge: Sequence[ModelEvaluationType]


class CreateMediaInsightsV0(TypedDict):
    advertiserEmails: Sequence[str]
    agencyEmails: Sequence[str]
    authenticationRootCertificatePem: str
    driverEnclaveSpecification: EnclaveSpecificationV0
    enableDebugMode: bool
    enableInsights: bool
    enableLookalike: bool
    enableRateLimitingOnPublishDataset: NotRequired[Optional[bool]]
    enableRetargeting: bool
    hashMatchingIdWith: NotRequired[Optional[HashingAlgorithm]]
    id: str
    mainAdvertiserEmail: str
    mainPublisherEmail: str
    matchingIdFormat: FormatType
    modelEvaluation: NotRequired[Optional[ModelEvaluationConfig]]
    name: str
    observerEmails: Sequence[str]
    publisherEmails: Sequence[str]
    pythonEnclaveSpecification: EnclaveSpecificationV0
    rateLimitPublishDataNumPerWindow: NotRequired[Optional[int]]
    rateLimitPublishDataWindowSeconds: NotRequired[Optional[int]]


class CreateMediaInsightsV1(TypedDict):
    advertiserEmails: Sequence[str]
    agencyEmails: Sequence[str]
    authenticationRootCertificatePem: str
    driverEnclaveSpecification: EnclaveSpecificationV0
    enableDebugMode: bool
    enableInsights: bool
    enableLookalike: bool
    enableRateLimitingOnPublishDataset: NotRequired[Optional[bool]]
    enableRetargeting: bool
    hashMatchingIdWith: NotRequired[Optional[HashingAlgorithm]]
    hideAbsoluteValuesFromInsights: bool
    id: str
    mainAdvertiserEmail: str
    mainPublisherEmail: str
    matchingIdFormat: FormatType
    modelEvaluation: NotRequired[Optional[ModelEvaluationConfig]]
    name: str
    observerEmails: Sequence[str]
    publisherEmails: Sequence[str]
    pythonEnclaveSpecification: EnclaveSpecificationV0
    rateLimitPublishDataNumPerWindow: NotRequired[Optional[int]]
    rateLimitPublishDataWindowSeconds: NotRequired[Optional[int]]


class CreateMediaInsightsV2(TypedDict):
    advertiserEmails: Sequence[str]
    agencyEmails: Sequence[str]
    authenticationRootCertificatePem: str
    dataPartnerEmails: NotRequired[Sequence[str]]
    driverEnclaveSpecification: EnclaveSpecificationV0
    enableAdvertiserAudienceDownload: NotRequired[Optional[bool]]
    enableDataPartner: bool
    enableDebugMode: bool
    enableInsights: bool
    enableLookalike: bool
    enableRateLimitingOnPublishDataset: NotRequired[Optional[bool]]
    enableRetargeting: bool
    hashMatchingIdWith: NotRequired[Optional[HashingAlgorithm]]
    hideAbsoluteValuesFromInsights: bool
    id: str
    mainAdvertiserEmail: str
    mainPublisherEmail: str
    matchingIdFormat: FormatType
    modelEvaluation: NotRequired[Optional[ModelEvaluationConfig]]
    name: str
    observerEmails: Sequence[str]
    publisherEmails: Sequence[str]
    pythonEnclaveSpecification: EnclaveSpecificationV0
    rateLimitPublishDataNumPerWindow: NotRequired[Optional[int]]
    rateLimitPublishDataWindowSeconds: NotRequired[Optional[int]]


class CreateMediaInsightsV3(TypedDict):
    advertiserEmails: Sequence[str]
    agencyEmails: Sequence[str]
    authenticationRootCertificatePem: str
    dataPartnerEmails: NotRequired[Sequence[str]]
    driverEnclaveSpecification: EnclaveSpecificationV0
    enableAdvertiserAudienceDownload: NotRequired[Optional[bool]]
    enableDataPartner: bool
    enableDebugMode: bool
    enableExclusionTargeting: bool
    enableInsights: bool
    enableLookalike: bool
    enableRateLimitingOnPublishDataset: NotRequired[Optional[bool]]
    enableRetargeting: bool
    hashMatchingIdWith: NotRequired[Optional[HashingAlgorithm]]
    hideAbsoluteValuesFromInsights: bool
    id: str
    mainAdvertiserEmail: str
    mainPublisherEmail: str
    matchingIdFormat: FormatType
    modelEvaluation: NotRequired[Optional[ModelEvaluationConfig]]
    name: str
    observerEmails: Sequence[str]
    publisherEmails: Sequence[str]
    pythonEnclaveSpecification: EnclaveSpecificationV0
    rateLimitPublishDataNumPerWindow: NotRequired[Optional[int]]
    rateLimitPublishDataWindowSeconds: NotRequired[Optional[int]]


class CreateMediaInsightsV4(CreateMediaInsightsV3):
    pass


class CreateMediaInsightsV5(CreateMediaInsightsV3):
    pass


class CreateMediaInsightsDcr1(TypedDict):
    v0: CreateMediaInsightsV0


class CreateMediaInsightsDcr2(TypedDict):
    v1: CreateMediaInsightsV1


class CreateMediaInsightsDcr3(TypedDict):
    v2: CreateMediaInsightsV2


class CreateMediaInsightsDcr4(TypedDict):
    v3: CreateMediaInsightsV3


class CreateMediaInsightsDcr5(TypedDict):
    v4: CreateMediaInsightsV4


class CreateMediaInsightsDcr6(TypedDict):
    v5: CreateMediaInsightsV5


CreateMediaInsightsDcr = Union[
    CreateMediaInsightsDcr1,
    CreateMediaInsightsDcr2,
    CreateMediaInsightsDcr3,
    CreateMediaInsightsDcr4,
    CreateMediaInsightsDcr5,
    CreateMediaInsightsDcr6,
]
