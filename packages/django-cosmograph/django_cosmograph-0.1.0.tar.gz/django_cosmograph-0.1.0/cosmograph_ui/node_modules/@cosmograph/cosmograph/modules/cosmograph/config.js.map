{"version":3,"file":"config.js","sources":["../../../src/modules/cosmograph/config.ts"],"sourcesContent":["import { CosmosInputLink, CosmosInputNode, GraphConfigInterface, GraphSimulationSettings, GraphEvents } from '@cosmograph/cosmos'\n\nexport type CosmographConfigInterface<N extends CosmosInputNode, L extends CosmosInputLink> = {\n  /**\n   * Do not run the simulation, just render the graph.\n   * Cosmos uses the x and y values of the nodes’ data to determine their position in the graph.\n   * If x and y values are not specified, the position of the nodes will be assigned randomly.\n   * If the value is set to null and the data does not have any links,\n   * Cosmograph will automatically set this value to `true`.\n   * Default value: `null`\n   */\n  disableSimulation?: boolean | null;\n  /**\n   * Show labels for the nodes that are currently visible on the screen,\n   * and automatically update to reflect the current zoom level.\n   * Default: `true`\n   */\n  showDynamicLabels?: boolean;\n  /**\n   * Show labels for the top nodes.\n   * Default: `false`\n   */\n  showTopLabels?: boolean;\n  /**\n   * Sets the maximum number of top nodes to show labels for.\n   * Default: `100`\n   */\n  showTopLabelsLimit?: number;\n  /**\n   * Specify the key that is used to determine the top nodes.\n   * By default, the top nodes are determined by the node degree.\n   * Default: `undefined`\n   */\n  showTopLabelsValueKey?: keyof N;\n  /**\n   * An array of nodes to show labels for.\n   * Default: `undefined`\n   */\n  showLabelsFor?: N[];\n  /**\n   * Whether to show a hovered node label.\n   * Default: `false`\n   */\n  showHoveredNodeLabel?: boolean;\n  /**\n   * Function that  generate custom text for each label.\n   * Default: `n => n.id`\n   * @param node Node object\n   * @returns String that will be used as the label text for that node\n   */\n  nodeLabelAccessor?: (node: N) => string;\n  /**\n   * Specifies the CSS class to use for the labels.\n   * Default: `undefined`\n   */\n  nodeLabelClassName?: string | ((node: N) => string);\n  /**\n   * Specifies the CSS color to use for the labels.\n   * Default: `undefined`\n   */\n  nodeLabelColor?: string | ((node: N) => string);\n  /**\n   * Specifies the CSS class to use for the hovered node label.\n   * Default: `undefined`\n   */\n  hoveredNodeLabelClassName?: string | ((node: N) => string);\n  /**\n   * Specifies the CSS color to use for the hovered node label.\n   * Default: `undefined`\n   */\n  hoveredNodeLabelColor?: string | ((node: N) => string);\n  /**\n   * Callback function that will be called when the data was updated\n   * Default: `undefined`\n   */\n  onSetData?: (nodes: N[], links: L[]) => void;\n  /**\n   * Callback function that will be called when the nodes was filtered by Node Crossfilter.\n   * Default: `undefined`\n   */\n  onNodesFiltered?: (filteredNodes: N[] | undefined) => void;\n  /**\n   * Callback function that will be called when the links was filtered by Link Crossfilter.\n   * Default: `undefined`\n   */\n  onLinksFiltered?: (filteredLinks: L[] | undefined) => void;\n  /**\n   * Callback function that will be called when clicked on a label.\n   * The Node data for this label will be passed as the first argument,\n   * and the corresponding mouse event as the second argument\n   * Default: `undefined`\n   */\n  onLabelClick?: (node: N, event: MouseEvent) => void;\n} & GraphEvents<N> & {\n  /**\n   * Decay coefficient. Use bigger values if you want the simulation to \"cool down\" slower.\n   * Default value: `1000`\n   */\n  simulationDecay?: GraphSimulationSettings<N>['decay'];\n  /**\n   * Gravity force coefficient.\n   * Default value: `0`\n   */\n  simulationGravity?: GraphSimulationSettings<N>['gravity'];\n  /**\n   * Centering to center mass force coefficient.\n   * Default value: `0`\n   */\n  simulationCenter?: GraphSimulationSettings<N>['center'];\n  /**\n   * Repulsion force coefficient.\n   * Default value: `0.1`\n   */\n  simulationRepulsion?: GraphSimulationSettings<N>['repulsion'];\n  /**\n   * Decreases / increases the detalization of the Many-Body force calculations.\n   * When `useQuadtree` is set to `true`, this property corresponds to the Barnes–Hut approximation criterion.\n   * Default value: `1.7`\n   */\n  simulationRepulsionTheta?: GraphSimulationSettings<N>['repulsionTheta'];\n  /**\n   * Barnes–Hut approximation depth.\n   * Can only be used when `useQuadtree` is set `true`.\n   * Default value: `12`\n   */\n  simulationRepulsionQuadtreeLevels?: GraphSimulationSettings<N>['repulsionQuadtreeLevels'];\n  /**\n   * Link spring force coefficient.\n   * Default value: `1`\n   */\n  simulationLinkSpring?: GraphSimulationSettings<N>['linkSpring'];\n  /**\n   * Minimum link distance.\n   * Default value: `2`\n   */\n  simulationLinkDistance?: GraphSimulationSettings<N>['linkDistance'];\n  /**\n   * Range of random link distance values.\n   * Default value: `[1, 1.2]`\n   */\n  simulationLinkDistRandomVariationRange?: GraphSimulationSettings<N>['linkDistRandomVariationRange'];\n  /**\n   * Repulsion coefficient from mouse position.\n   * The repulsion force is activated by pressing the right mouse button.\n   * Default value: `2`\n   */\n  simulationRepulsionFromMouse?: GraphSimulationSettings<N>['repulsionFromMouse'];\n  /**\n   * Friction coefficient.\n   * Default value: `0.85`\n   */\n  simulationFriction?: GraphSimulationSettings<N>['friction'];\n  /**\n   * Callback function that will be called when the simulation starts.\n   * Default value: `undefined`\n   */\n  onSimulationStart?: GraphSimulationSettings<N>['onStart'];\n  /**\n   * Callback function that will be called on every tick of the simulation.\n   * The value of the first argument `alpha` will decrease over time as the simulation\n   * \"cools down\". If there's a node under the cursor, its datum will be passed as the second argument,\n   * index as the third argument and position as the fourth argument:\n   * (alpha: number, node: Node | undefined, index: number | undefined, nodePosition: [number, number] | undefined) => void. Default value: undefined\n   * Default value: `undefined`\n   */\n  onSimulationTick?: GraphSimulationSettings<N>['onTick'];\n  /**\n   * Callback function that will be called when the simulation stops.\n   * Default value: `undefined`\n   */\n  onSimulationEnd?: GraphSimulationSettings<N>['onEnd'];\n  /**\n   * Callback function that will be called when the simulation is paused.\n   * Default value: `undefined`\n   */\n  onSimulationPause?: GraphSimulationSettings<N>['onPause'];\n  /**\n   * Callback function that will be called when the simulation is restarted.\n   * Default value: `undefined`\n   */\n  onSimulationRestart?: GraphSimulationSettings<N>['onRestart'];\n}\n\nexport const defaultCosmographConfig: CosmographConfigInterface<CosmosInputNode, CosmosInputLink> = {\n  disableSimulation: null,\n  showDynamicLabels: true,\n  showTopLabels: false,\n  showTopLabelsLimit: 100,\n  showTopLabelsValueKey: undefined,\n  showLabelsFor: undefined,\n  showHoveredNodeLabel: true,\n  nodeLabelAccessor: n => n.id,\n  nodeLabelClassName: undefined,\n  nodeLabelColor: undefined,\n  hoveredNodeLabelClassName: undefined,\n  hoveredNodeLabelColor: undefined,\n  onSetData: undefined,\n  onNodesFiltered: undefined,\n  onLinksFiltered: undefined,\n  onLabelClick: undefined,\n}\n\nexport type CosmographInputConfig <N extends CosmosInputNode, L extends CosmosInputLink> =\n  CosmographConfigInterface<N, L> &\n  Omit<GraphConfigInterface<N, L>, 'events' | 'simulation' | 'disableSimulation'>\n"],"names":["defaultCosmographConfig","disableSimulation","showDynamicLabels","showTopLabels","showTopLabelsLimit","showTopLabelsValueKey","undefined","showLabelsFor","showHoveredNodeLabel","nodeLabelAccessor","n","id","nodeLabelClassName","nodeLabelColor","hoveredNodeLabelClassName","hoveredNodeLabelColor","onSetData","onNodesFiltered","onLinksFiltered","onLabelClick"],"mappings":"AAuLa,MAAAA,EAAuF,CAClGC,kBAAmB,KACnBC,mBAAmB,EACnBC,eAAe,EACfC,mBAAoB,IACpBC,2BAAuBC,EACvBC,mBAAeD,EACfE,sBAAsB,EACtBC,kBAAmBC,GAAKA,EAAEC,GAC1BC,wBAAoBN,EACpBO,oBAAgBP,EAChBQ,+BAA2BR,EAC3BS,2BAAuBT,EACvBU,eAAWV,EACXW,qBAAiBX,EACjBY,qBAAiBZ,EACjBa,kBAAcb"}