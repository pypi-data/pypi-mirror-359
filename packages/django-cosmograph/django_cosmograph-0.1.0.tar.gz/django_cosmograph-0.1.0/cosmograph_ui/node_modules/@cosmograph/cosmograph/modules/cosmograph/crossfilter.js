import s from"crossfilter2";class i{constructor(s,i,e){this._crossfilter=s,this._selfRemove=i,this._syncUp=e}setAccessor(s){const{_crossfilter:i}=this;this.dispose(),this._dimension=i.dimension(s)}applyFilter(s){var i,e;null===(i=this._dimension)||void 0===i||i.filter(s),null===(e=this._syncUp)||void 0===e||e.call(this)}clear(){var s,i;null===(s=this._dimension)||void 0===s||s.filterAll(),null===(i=this._syncUp)||void 0===i||i.call(this)}getAllValues(){const{_crossfilter:s,_dimension:i}=this;if(i)return s.all().map(i.accessor)}getFilteredValues(){const{_crossfilter:s,_dimension:i}=this;if(i)return s.allFiltered().map(i.accessor)}getFilteredRecords(){return this._crossfilter.allFiltered([this._dimension])}isActive(){var s;return(null===(s=this._dimension)||void 0===s?void 0:s.hasCurrentFilter())||!1}dispose(){var s;null===(s=this._dimension)||void 0===s||s.dispose()}remove(){this.dispose(),this._selfRemove()}}class e{constructor(i){this._crossfilter=s(),this._filters=new Set,this._syncUpFunction=i,this._crossfilter.onChange((s=>{var i,e,t;switch(s){case"filtered":null===(i=this.onFiltered)||void 0===i||i.call(this),this._filters.forEach((s=>{var i;null===(i=s.onFiltered)||void 0===i||i.call(s)}));break;case"dataAdded":null===(e=this.onDataAdded)||void 0===e||e.call(this),this._filters.forEach((s=>{var i;null===(i=s.onDataAdded)||void 0===i||i.call(s)}));break;case"dataRemoved":null===(t=this.onDataRemoved)||void 0===t||t.call(this),this._filters.forEach((s=>{var i;null===(i=s.onDataRemoved)||void 0===i||i.call(s)}))}}))}addRecords(s){const{_crossfilter:i}=this;this._records=s,i.remove(),i.add(s)}getFilteredRecords(s){const{_crossfilter:i}=this;return(null==s?void 0:s.getFilteredRecords())||i.allFiltered()}addFilter(s=!0){const e=new i(this._crossfilter,(()=>{this._filters.delete(e)}),s?this._syncUpFunction:void 0);return this._filters.add(e),e}clearFilters(){this._filters.forEach((s=>{s.clear()}))}isAnyFiltersActive(s){for(const i of this._filters.values())if(i!==s&&i.isActive())return!0;return!1}getAllRecords(){return this._records}}export{e as Crossfilter,i as Filter};
//# sourceMappingURL=crossfilter.js.map
