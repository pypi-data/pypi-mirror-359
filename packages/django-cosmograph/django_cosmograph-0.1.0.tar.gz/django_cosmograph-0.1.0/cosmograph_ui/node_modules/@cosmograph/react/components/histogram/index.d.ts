import React, { Ref, ForwardedRef } from 'react';
import { CosmographHistogram as _CosmographHistogram, CosmographHistogramInputConfig } from '@cosmograph/cosmograph';
export type CosmographHistogramProps<OutDatum, InDatum = OutDatum> = {
    style?: object;
    className?: string;
} & CosmographHistogramInputConfig<OutDatum, InDatum>;
export type CosmographHistogramRef<OutDatum, InDatum = OutDatum> = _CosmographHistogram<OutDatum, InDatum> | undefined;
export declare function CosmographHistogramFC<OutDatum, InDatum = OutDatum>({ style, className, ...config }: CosmographHistogramProps<OutDatum, InDatum>, ref: ForwardedRef<_CosmographHistogram<OutDatum, InDatum> | undefined>): React.ReactElement;
export declare const CosmographHistogram: <OutDatum, InDatum = OutDatum>(props: {
    style?: object | undefined;
    className?: string | undefined;
} & {
    accessor?: ((d: InDatum) => number) | undefined;
    customExtent?: [number, number] | undefined;
    data?: InDatum[] | undefined;
    filterFunction?: ((selection: [number, number], data: InDatum[], crossfilteredData: OutDatum[]) => OutDatum[]) | undefined;
    filterType?: string | undefined;
    onSelection?: ((selection: [number, number] | undefined, isManuallySelected?: boolean | undefined) => void) | undefined;
    highlightCrossfiltered?: boolean | undefined;
} & Omit<import("@cosmograph/ui").HistogramEvents, "onBrush"> & Omit<import("@cosmograph/ui").HistogramConfigInterface, "events"> & {
    ref?: React.Ref<_CosmographHistogram<OutDatum, InDatum> | undefined> | undefined;
}) => React.ReactElement;
export type { CosmographHistogramInputConfig };
