{"version":3,"file":"index.js","sources":["../../../src/components/histogram/index.tsx"],"sourcesContent":["import React, { Ref, ForwardedRef, useRef, useState, useEffect, useImperativeHandle } from 'react'\nimport { CosmographHistogram as _CosmographHistogram, CosmographHistogramInputConfig } from '@cosmograph/cosmograph'\nimport { CosmosInputLink, CosmosInputNode } from '@cosmograph/cosmos'\nimport { useCosmograph } from '../../context'\n\nexport type CosmographHistogramProps<OutDatum, InDatum = OutDatum> = {\n  style?: object;\n  className?: string;\n} & CosmographHistogramInputConfig<OutDatum, InDatum>\n\nexport type CosmographHistogramRef<OutDatum, InDatum = OutDatum> = _CosmographHistogram<OutDatum, InDatum> | undefined;\n\nexport function CosmographHistogramFC<OutDatum, InDatum = OutDatum> (\n  { style, className, ...config }: CosmographHistogramProps<OutDatum, InDatum>,\n  ref: ForwardedRef<_CosmographHistogram<OutDatum, InDatum> | undefined>\n): React.ReactElement {\n  const context = useCosmograph<CosmosInputNode, CosmosInputLink>()\n  const container = useRef<HTMLDivElement>(null)\n  const histogramInstance = useRef<_CosmographHistogram<OutDatum, InDatum>>()\n  const [isComponentMounted, setComponentMounted] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (container.current && context?.cosmograph) {\n      histogramInstance.current = new _CosmographHistogram(context?.cosmograph, container.current, config)\n      setComponentMounted(true)\n    }\n    return () => {\n      histogramInstance.current?.remove()\n    }\n  }, [context?.cosmograph])\n\n  useEffect(() => {\n    histogramInstance.current?.setConfig(config)\n  }, [config])\n\n  useImperativeHandle(ref, () => histogramInstance.current, [isComponentMounted])\n\n  return <div id=\"CosmographHistogram\" style={style} className={className} ref={container}/>\n}\n\n// https://stackoverflow.com/a/58473012\nexport const CosmographHistogram = React.forwardRef(CosmographHistogramFC) as\n  <OutDatum, InDatum = OutDatum>(\n    props: CosmographHistogramProps<OutDatum, InDatum> & { ref?: Ref<_CosmographHistogram<OutDatum, InDatum> | undefined> }\n  ) => React.ReactElement\n\nexport type { CosmographHistogramInputConfig }\n"],"names":["CosmographHistogramFC","style","className","config","ref","context","useCosmograph","container","useRef","histogramInstance","isComponentMounted","setComponentMounted","useState","useEffect","current","cosmograph","_CosmographHistogram","_a","remove","setConfig","useImperativeHandle","React","id","CosmographHistogram","forwardRef"],"mappings":"sMAYgB,SAAAA,GACdC,MAAEA,EAAKC,UAAEA,KAAcC,GACvBC,GAEA,MAAMC,EAAUC,IACVC,EAAYC,EAAuB,MACnCC,EAAoBD,KACnBE,EAAoBC,GAAuBC,GAAkB,GAkBpE,OAhBAC,GAAU,KACJN,EAAUO,UAAWT,aAAO,EAAPA,EAASU,cAChCN,EAAkBK,QAAU,IAAIE,EAAqBX,aAAO,EAAPA,EAASU,WAAYR,EAAUO,QAASX,GAC7FQ,GAAoB,IAEf,WACsB,QAA3BM,EAAAR,EAAkBK,eAAS,IAAAG,GAAAA,EAAAC,QAAQ,IAEpC,CAACb,aAAA,EAAAA,EAASU,aAEbF,GAAU,WACiB,QAAzBI,EAAAR,EAAkBK,eAAO,IAAAG,GAAAA,EAAEE,UAAUhB,EAAO,GAC3C,CAACA,IAEJiB,EAAoBhB,GAAK,IAAMK,EAAkBK,SAAS,CAACJ,IAEpDW,uBAAKC,GAAG,sBAAsBrB,MAAOA,EAAOC,UAAWA,EAAWE,IAAKG,GAChF,CAGa,MAAAgB,EAAsBF,EAAMG,WAAWxB"}