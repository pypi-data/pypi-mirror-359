{"version":3,"file":"index.js","sources":["../../../src/components/search/index.tsx"],"sourcesContent":["import React, { Ref, ForwardedRef, useRef, useState, useEffect, useImperativeHandle } from 'react'\nimport { CosmographSearch as _CosmographSearch, CosmographSearchInputConfig } from '@cosmograph/cosmograph'\nimport { CosmosInputLink, CosmosInputNode } from '@cosmograph/cosmos'\nimport { useCosmograph } from '../../index'\n\nexport type CosmographSearchProps<N extends CosmosInputNode> = {\n  style?: object;\n  className?: string;\n} & CosmographSearchInputConfig<N>\n\nexport type CosmographSearchRef<N extends CosmosInputNode = CosmosInputNode, L extends CosmosInputLink = CosmosInputLink> = _CosmographSearch<N, L> | undefined;\n\nexport function CosmographSearchFC<N extends CosmosInputNode, L extends CosmosInputLink> (\n  { style, className, ...config }: CosmographSearchProps<N>,\n  ref: ForwardedRef<CosmographSearchRef<N, L>>\n): React.ReactElement {\n  const context = useCosmograph<N, L>()\n  const container = useRef<HTMLDivElement>(null)\n  const searchInstance = useRef<_CosmographSearch<N, L>>()\n  const [isComponentMounted, setComponentMounted] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (container.current && context?.cosmograph) {\n      searchInstance.current = new _CosmographSearch<N, L>(context?.cosmograph, container.current, config)\n      setComponentMounted(true)\n    }\n    return () => {\n      searchInstance.current?.remove()\n    }\n  }, [context?.cosmograph])\n\n  useEffect(() => {\n    searchInstance.current?.setConfig(config)\n  }, [config])\n\n  useImperativeHandle(ref, () => searchInstance.current, [isComponentMounted])\n\n  return <div id=\"CosmographSearch\" style={style} className={className} ref={container}/>\n}\n\n// https://stackoverflow.com/a/58473012\nexport const CosmographSearch = React.forwardRef(CosmographSearchFC) as\n  <N extends CosmosInputNode, L extends CosmosInputLink>(\n    props: CosmographSearchProps<N> & { ref?: Ref<CosmographSearchRef<N, L>> }\n  ) => React.ReactElement\n\nexport type { CosmographSearchInputConfig }\n"],"names":["CosmographSearchFC","style","className","config","ref","context","useCosmograph","container","useRef","searchInstance","isComponentMounted","setComponentMounted","useState","useEffect","current","cosmograph","_CosmographSearch","_a","remove","setConfig","useImperativeHandle","React","id","CosmographSearch","forwardRef"],"mappings":"6RAYgB,SAAAA,GACdC,MAAEA,EAAKC,UAAEA,KAAcC,GACvBC,GAEA,MAAMC,EAAUC,IACVC,EAAYC,EAAuB,MACnCC,EAAiBD,KAChBE,EAAoBC,GAAuBC,GAAkB,GAkBpE,OAhBAC,GAAU,KACJN,EAAUO,UAAWT,aAAO,EAAPA,EAASU,cAChCN,EAAeK,QAAU,IAAIE,EAAwBX,aAAO,EAAPA,EAASU,WAAYR,EAAUO,QAASX,GAC7FQ,GAAoB,IAEf,WACmB,QAAxBM,EAAAR,EAAeK,eAAS,IAAAG,GAAAA,EAAAC,QAAQ,IAEjC,CAACb,aAAA,EAAAA,EAASU,aAEbF,GAAU,WACc,QAAtBI,EAAAR,EAAeK,eAAO,IAAAG,GAAAA,EAAEE,UAAUhB,EAAO,GACxC,CAACA,IAEJiB,EAAoBhB,GAAK,IAAMK,EAAeK,SAAS,CAACJ,IAEjDW,uBAAKC,GAAG,mBAAmBrB,MAAOA,EAAOC,UAAWA,EAAWE,IAAKG,GAC7E,CAGa,MAAAgB,EAAmBF,EAAMG,WAAWxB"}