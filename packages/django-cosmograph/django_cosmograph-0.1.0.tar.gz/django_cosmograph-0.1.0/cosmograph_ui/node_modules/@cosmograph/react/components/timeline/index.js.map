{"version":3,"file":"index.js","sources":["../../../src/components/timeline/index.tsx"],"sourcesContent":["import React, { Ref, ForwardedRef, useRef, useState, useEffect, useImperativeHandle } from 'react'\nimport { CosmographTimeline as _CosmographTimeline, CosmographTimelineInputConfig } from '@cosmograph/cosmograph'\nimport { CosmosInputLink, CosmosInputNode } from '@cosmograph/cosmos'\nimport { useCosmograph } from '../../context'\n\nexport type CosmographTimelineProps<Datum> = {\n  style?: object;\n  className?: string;\n} & CosmographTimelineInputConfig<Datum>\n\nexport type CosmographTimelineRef<Datum> = _CosmographTimeline<Datum> | undefined;\n\nexport function CosmographTimelineFC<Datum> (\n  { style, className, ...config }: CosmographTimelineProps<Datum>,\n  ref: ForwardedRef<CosmographTimelineRef<Datum>>\n): React.ReactElement {\n  const context = useCosmograph<CosmosInputNode, CosmosInputLink>()\n  const container = useRef<HTMLDivElement>(null)\n  const timelineInstance = useRef<_CosmographTimeline<Datum>>()\n  const [isComponentMounted, setComponentMounted] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (container.current && context?.cosmograph) {\n      timelineInstance.current = new _CosmographTimeline(context?.cosmograph, container.current, config)\n      setComponentMounted(true)\n    }\n    return () => {\n      timelineInstance.current?.remove()\n    }\n  }, [context?.cosmograph])\n\n  useEffect(() => {\n    timelineInstance.current?.setConfig(config)\n  }, [config])\n\n  useImperativeHandle(ref, () => timelineInstance.current, [isComponentMounted])\n\n  return <div id=\"CosmographTimeline\" style={style} className={className} ref={container}/>\n}\n\n// https://stackoverflow.com/a/58473012\nexport const CosmographTimeline = React.forwardRef(CosmographTimelineFC) as\n  <Datum>(\n    props: CosmographTimelineProps<Datum> & { ref?: Ref<CosmographTimelineRef<Datum>> }\n  ) => React.ReactElement\n\nexport type { CosmographTimelineInputConfig }\n"],"names":["CosmographTimelineFC","style","className","config","ref","context","useCosmograph","container","useRef","timelineInstance","isComponentMounted","setComponentMounted","useState","useEffect","current","cosmograph","_CosmographTimeline","_a","remove","setConfig","useImperativeHandle","React","id","CosmographTimeline","forwardRef"],"mappings":"qMAYgB,SAAAA,GACdC,MAAEA,EAAKC,UAAEA,KAAcC,GACvBC,GAEA,MAAMC,EAAUC,IACVC,EAAYC,EAAuB,MACnCC,EAAmBD,KAClBE,EAAoBC,GAAuBC,GAAkB,GAkBpE,OAhBAC,GAAU,KACJN,EAAUO,UAAWT,aAAO,EAAPA,EAASU,cAChCN,EAAiBK,QAAU,IAAIE,EAAoBX,aAAO,EAAPA,EAASU,WAAYR,EAAUO,QAASX,GAC3FQ,GAAoB,IAEf,WACqB,QAA1BM,EAAAR,EAAiBK,eAAS,IAAAG,GAAAA,EAAAC,QAAQ,IAEnC,CAACb,aAAA,EAAAA,EAASU,aAEbF,GAAU,WACgB,QAAxBI,EAAAR,EAAiBK,eAAO,IAAAG,GAAAA,EAAEE,UAAUhB,EAAO,GAC1C,CAACA,IAEJiB,EAAoBhB,GAAK,IAAMK,EAAiBK,SAAS,CAACJ,IAEnDW,uBAAKC,GAAG,qBAAqBrB,MAAOA,EAAOC,UAAWA,EAAWE,IAAKG,GAC/E,CAGa,MAAAgB,EAAqBF,EAAMG,WAAWxB"}