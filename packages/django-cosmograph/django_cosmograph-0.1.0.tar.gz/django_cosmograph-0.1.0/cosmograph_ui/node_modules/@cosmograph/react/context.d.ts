import React, { ReactElement } from 'react';
import { Cosmograph } from '@cosmograph/cosmograph';
import { CosmosInputLink, CosmosInputNode } from '@cosmograph/cosmos';
export interface CosmographProviderProps<N extends CosmosInputNode, L extends CosmosInputLink> {
    nodes?: N[];
    links?: L[];
}
export type CosmographContextData<N extends CosmosInputNode, L extends CosmosInputLink> = {
    cosmograph?: Cosmograph<N, L>;
    nodes?: N[];
    links?: L[];
    initCosmograph: (cosmograph: Cosmograph<N, L>) => void;
};
export declare const CosmographContext: React.Context<CosmographContextData<any, any> | null>;
export declare function CosmographProvider<N extends CosmosInputNode, L extends CosmosInputLink>({ children, nodes, links }: React.PropsWithChildren<CosmographProviderProps<N, L>>): ReactElement;
export declare function useCosmograph<N extends CosmosInputNode, L extends CosmosInputLink>(): CosmographContextData<N, L> | null;
