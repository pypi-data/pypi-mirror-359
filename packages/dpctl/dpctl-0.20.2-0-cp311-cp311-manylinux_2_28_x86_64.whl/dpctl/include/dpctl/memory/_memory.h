/* Generated by Cython 3.1.2 */

#ifndef __PYX_HAVE__dpctl__memory___memory
#define __PYX_HAVE__dpctl__memory___memory

#include "Python.h"
struct Py_MemoryObject;
struct PyMemoryUSMSharedObject;
struct PyMemoryUSMHostObject;
struct PyMemoryUSMDeviceObject;

/* "dpctl/memory/_memory.pxd":35
 * 
 * 
 * cdef public api class _Memory [object Py_MemoryObject, type Py_MemoryType]:             # <<<<<<<<<<<<<<
 *     cdef DPCTLSyclUSMRef _memory_ptr
 *     cdef void* _opaque_ptr
*/
struct Py_MemoryObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_5dpctl_6memory_7_memory__Memory *__pyx_vtab;
  DPCTLSyclUSMRef _memory_ptr;
  void *_opaque_ptr;
  Py_ssize_t nbytes;
  struct PySyclQueueObject *queue;
  PyObject *refobj;
};

/* "dpctl/memory/_memory.pxd":77
 * 
 * 
 * cdef public api class MemoryUSMShared(_Memory) [             # <<<<<<<<<<<<<<
 *     object PyMemoryUSMSharedObject, type PyMemoryUSMSharedType
 * ]:
*/
struct PyMemoryUSMSharedObject {
  struct Py_MemoryObject __pyx_base;
};

/* "dpctl/memory/_memory.pxd":83
 * 
 * 
 * cdef public api class MemoryUSMHost(_Memory) [             # <<<<<<<<<<<<<<
 *     object PyMemoryUSMHostObject, type PyMemoryUSMHostType
 * ]:
*/
struct PyMemoryUSMHostObject {
  struct Py_MemoryObject __pyx_base;
};

/* "dpctl/memory/_memory.pxd":89
 * 
 * 
 * cdef public api class MemoryUSMDevice(_Memory) [             # <<<<<<<<<<<<<<
 *     object PyMemoryUSMDeviceObject, type PyMemoryUSMDeviceType
 * ]:
*/
struct PyMemoryUSMDeviceObject {
  struct Py_MemoryObject __pyx_base;
};

#ifndef __PYX_HAVE_API__dpctl__memory___memory

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) Py_MemoryType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyMemoryUSMSharedType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyMemoryUSMHostType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyMemoryUSMDeviceType;

#endif /* !__PYX_HAVE_API__dpctl__memory___memory */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

/* WARNING: Use PyImport_AppendInittab("_memory", PyInit__memory) instead of calling PyInit__memory directly from Python 3.5 */
PyMODINIT_FUNC PyInit__memory(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"_memory\", PyInit__memory) instead of calling PyInit__memory directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"_memory\", PyInit__memory) instead of calling PyInit__memory directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"_memory\", PyInit__memory) instead of calling PyInit__memory directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit__memory_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit__memory() __PYX_WARN_IF_PyInit__memory_INIT_CALLED(PyInit__memory())
#endif

#endif /* !__PYX_HAVE__dpctl__memory___memory */
