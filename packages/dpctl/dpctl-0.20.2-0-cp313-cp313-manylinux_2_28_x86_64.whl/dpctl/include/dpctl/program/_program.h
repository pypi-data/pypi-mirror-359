/* Generated by Cython 3.0.12 */

#ifndef __PYX_HAVE__dpctl__program___program
#define __PYX_HAVE__dpctl__program___program

#include "Python.h"
struct PySyclKernelObject;
struct PySyclProgramObject;

/* "dpctl/program/_program.pxd":31
 * 
 * 
 * cdef api class SyclKernel [object PySyclKernelObject, type PySyclKernelType]:             # <<<<<<<<<<<<<<
 *     ''' Wraps a sycl::kernel object created from an OpenCL interoperability
 *         kernel.
 */
struct PySyclKernelObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_5dpctl_7program_8_program_SyclKernel *__pyx_vtab;
  DPCTLSyclKernelRef _kernel_ref;
  PyObject *_function_name;
};

/* "dpctl/program/_program.pxd":43
 * 
 * 
 * cdef api class SyclProgram [object PySyclProgramObject, type PySyclProgramType]:             # <<<<<<<<<<<<<<
 *     """
 *     Wraps a sycl::kernel_bundle<sycl::bundle_state::executable> object created
 */
struct PySyclProgramObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_5dpctl_7program_8_program_SyclProgram *__pyx_vtab;
  DPCTLSyclKernelBundleRef _program_ref;
};

#ifndef __PYX_HAVE_API__dpctl__program___program

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__dpctl__program___program */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_program(void);
#else
/* WARNING: Use PyImport_AppendInittab("_program", PyInit__program) instead of calling PyInit__program directly from Python 3.5 */
PyMODINIT_FUNC PyInit__program(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"_program\", PyInit__program) instead of calling PyInit__program directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"_program\", PyInit__program) instead of calling PyInit__program directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"_program\", PyInit__program) instead of calling PyInit__program directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit__program_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit__program() __PYX_WARN_IF_PyInit__program_INIT_CALLED(PyInit__program())
#endif
#endif

#endif /* !__PYX_HAVE__dpctl__program___program */
