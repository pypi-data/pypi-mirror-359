/* Generated by Cython 3.0.12 */

#ifndef __PYX_HAVE__dpctl__tensor___usmarray
#define __PYX_HAVE__dpctl__tensor___usmarray

#include "Python.h"
struct PyUSMArrayObject;

/* "dpctl/tensor/_usmarray.pxd":46
 * 
 * 
 * cdef api class usm_ndarray [object PyUSMArrayObject, type PyUSMArrayType]:             # <<<<<<<<<<<<<<
 *     # data fields
 *     cdef char* data_
 */
struct PyUSMArrayObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_5dpctl_6tensor_9_usmarray_usm_ndarray *__pyx_vtab;
  char *data_;
  int nd_;
  Py_ssize_t *shape_;
  Py_ssize_t *strides_;
  int typenum_;
  int flags_;
  PyObject *base_;
  PyObject *array_namespace_;
  PyObject *__weakref__;
};

#ifndef __PYX_HAVE_API__dpctl__tensor___usmarray

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C int USM_ARRAY_C_CONTIGUOUS;
__PYX_EXTERN_C int USM_ARRAY_F_CONTIGUOUS;
__PYX_EXTERN_C int USM_ARRAY_WRITABLE;
__PYX_EXTERN_C int UAR_BOOL;
__PYX_EXTERN_C int UAR_BYTE;
__PYX_EXTERN_C int UAR_UBYTE;
__PYX_EXTERN_C int UAR_SHORT;
__PYX_EXTERN_C int UAR_USHORT;
__PYX_EXTERN_C int UAR_INT;
__PYX_EXTERN_C int UAR_UINT;
__PYX_EXTERN_C int UAR_LONG;
__PYX_EXTERN_C int UAR_ULONG;
__PYX_EXTERN_C int UAR_LONGLONG;
__PYX_EXTERN_C int UAR_ULONGLONG;
__PYX_EXTERN_C int UAR_FLOAT;
__PYX_EXTERN_C int UAR_DOUBLE;
__PYX_EXTERN_C int UAR_CFLOAT;
__PYX_EXTERN_C int UAR_CDOUBLE;
__PYX_EXTERN_C int UAR_TYPE_SENTINEL;
__PYX_EXTERN_C int UAR_HALF;

#endif /* !__PYX_HAVE_API__dpctl__tensor___usmarray */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_usmarray(void);
#else
/* WARNING: Use PyImport_AppendInittab("_usmarray", PyInit__usmarray) instead of calling PyInit__usmarray directly from Python 3.5 */
PyMODINIT_FUNC PyInit__usmarray(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"_usmarray\", PyInit__usmarray) instead of calling PyInit__usmarray directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"_usmarray\", PyInit__usmarray) instead of calling PyInit__usmarray directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"_usmarray\", PyInit__usmarray) instead of calling PyInit__usmarray directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit__usmarray_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit__usmarray() __PYX_WARN_IF_PyInit__usmarray_INIT_CALLED(PyInit__usmarray())
#endif
#endif

#endif /* !__PYX_HAVE__dpctl__tensor___usmarray */
