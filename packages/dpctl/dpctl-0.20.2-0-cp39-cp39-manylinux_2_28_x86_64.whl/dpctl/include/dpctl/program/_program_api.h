/* Generated by Cython 3.1.2 */

#ifndef __PYX_HAVE_API__dpctl__program___program
#define __PYX_HAVE_API__dpctl__program___program
#ifdef __MINGW64__
#define MS_WIN64
#endif
#include "Python.h"
#include "_program.h"

static PyTypeObject *__pyx_ptype_5dpctl_7program_8_program_SyclKernel = 0;
#define PySyclKernelType (*__pyx_ptype_5dpctl_7program_8_program_SyclKernel)
static PyTypeObject *__pyx_ptype_5dpctl_7program_8_program_SyclProgram = 0;
#define PySyclProgramType (*__pyx_ptype_5dpctl_7program_8_program_SyclProgram)

static DPCTLSyclKernelRef (*__pyx_api_f_5dpctl_7program_8_program_SyclKernel_GetKernelRef)(struct PySyclKernelObject *) = 0;
#define SyclKernel_GetKernelRef __pyx_api_f_5dpctl_7program_8_program_SyclKernel_GetKernelRef
static struct PySyclKernelObject *(*__pyx_api_f_5dpctl_7program_8_program_SyclKernel_Make)(DPCTLSyclKernelRef, char const *) = 0;
#define SyclKernel_Make __pyx_api_f_5dpctl_7program_8_program_SyclKernel_Make
static DPCTLSyclKernelBundleRef (*__pyx_api_f_5dpctl_7program_8_program_SyclProgram_GetKernelBundleRef)(struct PySyclProgramObject *) = 0;
#define SyclProgram_GetKernelBundleRef __pyx_api_f_5dpctl_7program_8_program_SyclProgram_GetKernelBundleRef
static struct PySyclProgramObject *(*__pyx_api_f_5dpctl_7program_8_program_SyclProgram_Make)(DPCTLSyclKernelBundleRef) = 0;
#define SyclProgram_Make __pyx_api_f_5dpctl_7program_8_program_SyclProgram_Make
static int __Pyx_ImportFunction_3_1_2(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

#ifndef __PYX_HAVE_RT_ImportFunction_3_1_2
#define __PYX_HAVE_RT_ImportFunction_3_1_2
static int __Pyx_ImportFunction_3_1_2(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, "__pyx_capi__");
    if (!d)
        goto bad;
#if (defined(Py_LIMITED_API) && Py_LIMITED_API >= 0x030d0000) || (!defined(Py_LIMITED_API) && PY_VERSION_HEX >= 0x030d0000)
    PyDict_GetItemStringRef(d, funcname, &cobj);
#else
    cobj = PyDict_GetItemString(d, funcname);
    Py_XINCREF(cobj);
#endif
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    Py_DECREF(cobj);
    return 0;
bad:
    Py_XDECREF(d);
    Py_XDECREF(cobj);
    return -1;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType_proto_3_1_2
#define __PYX_HAVE_RT_ImportType_proto_3_1_2
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_1_2(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_1_2(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_1_2 {
   __Pyx_ImportType_CheckSize_Error_3_1_2 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_1_2 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_1_2 = 2
};
static PyTypeObject *__Pyx_ImportType_3_1_2(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_1_2 check_size);
#endif

#ifndef __PYX_HAVE_RT_ImportType_3_1_2
#define __PYX_HAVE_RT_ImportType_3_1_2
static PyTypeObject *__Pyx_ImportType_3_1_2(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_1_2 check_size)
{
    PyObject *result = 0;
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    if (size == 0) {
        return (PyTypeObject *)result;
    }
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_1_2 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_1_2 && (size_t)basicsize > size) {
        if (PyErr_WarnFormat(NULL, 0,
                "%.200s.%.200s size changed, may indicate binary incompatibility. "
                "Expected %zd from C header, got %zd from PyObject",
                module_name, class_name, size, basicsize) < 0) {
            goto bad;
        }
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif


static int import_dpctl__program___program(void) {
  PyObject *module = 0;
  module = PyImport_ImportModule("dpctl.program._program");
  if (!module) goto bad;
  if (__Pyx_ImportFunction_3_1_2(module, "SyclKernel_GetKernelRef", (void (**)(void))&__pyx_api_f_5dpctl_7program_8_program_SyclKernel_GetKernelRef, "DPCTLSyclKernelRef (struct PySyclKernelObject *)") < 0) goto bad;
  if (__Pyx_ImportFunction_3_1_2(module, "SyclKernel_Make", (void (**)(void))&__pyx_api_f_5dpctl_7program_8_program_SyclKernel_Make, "struct PySyclKernelObject *(DPCTLSyclKernelRef, char const *)") < 0) goto bad;
  if (__Pyx_ImportFunction_3_1_2(module, "SyclProgram_GetKernelBundleRef", (void (**)(void))&__pyx_api_f_5dpctl_7program_8_program_SyclProgram_GetKernelBundleRef, "DPCTLSyclKernelBundleRef (struct PySyclProgramObject *)") < 0) goto bad;
  if (__Pyx_ImportFunction_3_1_2(module, "SyclProgram_Make", (void (**)(void))&__pyx_api_f_5dpctl_7program_8_program_SyclProgram_Make, "struct PySyclProgramObject *(DPCTLSyclKernelBundleRef)") < 0) goto bad;
  __pyx_ptype_5dpctl_7program_8_program_SyclKernel = __Pyx_ImportType_3_1_2(module, "dpctl.program._program", "SyclKernel",
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(struct PySyclKernelObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclKernelObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(struct PySyclKernelObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclKernelObject),
  #else
  sizeof(struct PySyclKernelObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclKernelObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_1_2); if (!__pyx_ptype_5dpctl_7program_8_program_SyclKernel) goto bad;
  __pyx_ptype_5dpctl_7program_8_program_SyclProgram = __Pyx_ImportType_3_1_2(module, "dpctl.program._program", "SyclProgram",
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(struct PySyclProgramObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclProgramObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(struct PySyclProgramObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclProgramObject),
  #else
  sizeof(struct PySyclProgramObject), __PYX_GET_STRUCT_ALIGNMENT_3_1_2(struct PySyclProgramObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_1_2); if (!__pyx_ptype_5dpctl_7program_8_program_SyclProgram) goto bad;
  Py_DECREF(module); module = 0;
  return 0;
  bad:
  Py_XDECREF(module);
  return -1;
}

#endif /* !__PYX_HAVE_API__dpctl__program___program */
