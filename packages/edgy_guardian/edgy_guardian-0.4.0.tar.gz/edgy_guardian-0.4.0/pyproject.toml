[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edgy_guardian"
description = "Per object permissions for Edgy"
readme = "README.md"
requires-python = ">=3.10"
dynamic = ['version']
authors = [{ name = "Tiago Silva", email = "tiago.arasilva@gmail.com" }]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: AnyIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = ["edgy>=0.31.1,<1.0.0"]
keywords = ["edgy_guardian"]

[project.urls]
Homepage = "https://github.com/dymmond/edgy-guardian"
Documentation = "https://edgy-guardian.dymmond.com"
Changelog = "https://edgy-guardian.dymmond.com/release-notes/"
Funding = "https://github.com/sponsors/tarsil"
Source = "https://github.com/dymmond/edgy-guardian"


[tool.hatch.version]
path = "edgy_guardian/__init__.py"

[tool.hatch.envs.default]
dependencies = [
    "mypy==1.16.1",
    "ruff>=0.3.0,<5.0.0",
    "pre-commit>=3.3.1,<4.0.0",
    "devtools>=0.12.2",
    "ipython",
    "ptpython",
    "twine",
]

[project.optional-dependencies]
testing = [
    "autoflake>=2.0.2,<3.0.0",
    "black==24.1.1,<25.0",
    "isort>=5.12.0,<6.0.0",
    "pytest>=7.2.2,<9.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "esmerald>=3.8.4",
    "edgy[postgres,testing]>=0.27.3,<1.0.0",
    "httpx",
    "pytest-pspec",
    "faker",
]

[tool.hatch.envs.default.scripts]
clean_pyc = "find . -type f -name \"*.pyc\" -delete"
clean_pyi = "find . -type f -name \"*.pyi\" -delete"
clean_pycache = "find . -type d -name \"*__pycache__*\" -delete"
build_with_check = "hatch build; twine check dist/*"
lint = "ruff check --fix --line-length 99  edgy_guardian tests {args}"

[tool.hatch.envs.docs]
dependencies = [
    "griffe-typingdoc>=0.2.2,<1.0",
    "mkautodoc>=0.2.0,<0.3.0",
    "mkdocs>=1.1.2,<2.0.0",
    "mkdocs-material>=9.4.4,<10.0.0",
    "mdx-include>=1.4.2,<2.0.0",
    "mkdocs-macros-plugin>=0.4.0",
    "mkdocs-meta-descriptions-plugin>=2.3.0",
    "mkdocstrings[python]>=0.23.0,<0.30.0",
    "pyyaml>=6.0,<7.0.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.hatch.envs.test]
features = ["testing"]
dependencies = [
  "esmerald"
]

[tool.hatch.envs.test.scripts]
# needs docker services running
test = "hatch test -- {args}"
test_man = "hatch test -- {args} -s -vv"
check_types = "mypy -p edgy_guardian"

[tool.isort]
profile = "black"
known_third_party = []
src_paths = ["edgy_guardian"]

[tool.mypy]
strict = true
warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
disallow_untyped_decorators = true
disallow_any_generics = false
implicit_reexport = false
show_error_codes = true
disallow_incomplete_defs = true
disable_error_code = [
    "attr-defined",
    "has-type",
    "override",
    "safe-super",
    "misc",
    "call-arg",
]
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = false
strict_equality = false
strict_optional = false

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I"]
ignore = ["E501", "B008", "C901", "B026"]

exclude = ["docs_src/"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.coverage.run]
parallel = true
context = '${CONTEXT}'
source = ["tests", "edgy_guardian"]
# omit = []

[[tool.mypy.overrides]]
module = "edgy_guardian.tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs_src.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
junit_family = "xunit2"

[tool.hatch.build.targets.sdist]
include = ["/edgy_guardian"]
