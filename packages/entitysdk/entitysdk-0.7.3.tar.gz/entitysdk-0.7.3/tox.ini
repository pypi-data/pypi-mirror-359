[base]
name = entitysdk
path = src/{[base]name}
testdeps =
    pytest
    pytest-cov
    pytest-httpx
    coverage[toml]

[tox]
envlist =
    lint
    check-packaging
    py{311,312,313}

minversion = 3.18

[testenv]
deps =
    {[base]testdeps}
commands =
    python -m pytest --cov={[base]name} tests/unit {posargs}
    python -m coverage xml
    python -m coverage html

[testenv:lint]
deps =
    ruff
    mypy
    types-requests
commands =
	python -m ruff format --check
	python -m ruff check
    python -m mypy src

[testenv:format]
skip_install = true
deps =
    ruff
commands =
	python -m ruff format
	python -m ruff check --fix

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:notebooks]
deps =
    jupyter
    nbconvert
    rich
    pandoc
commands =
    jupyter nbconvert --execute --to markdown {posargs:examples/*.ipynb}
    jupyter nbconvert \
        --ClearOutputPreprocessor.enabled=True \
        --ClearMetadataPreprocessor.enabled=True \
        --inplace {posargs:examples/*.ipynb}

[testenv:integration]
deps =
    {[base]testdeps}
passenv =
    ACCESS_TOKEN
setenv =
    DB_API_URL = {env:DB_API_URL:http://localhost:8000}
commands =
    python -m pytest tests/integration {posargs}
