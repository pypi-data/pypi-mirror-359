[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "envvar-validator"
version = "1.0.1"
description = "The most comprehensive, production-ready environment variable validation library for Python"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Sherin Joseph Roy", email = "sherin.joseph2217@gmail.com"}
]
maintainers = [
    {name = "Sherin Joseph Roy", email = "sherin.joseph2217@gmail.com"}
]
keywords = [
    "environment", "validation", "env", "variables", "configuration", 
    "settings", "security", "compliance", "monitoring", "cli"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: FastAPI",
    "Environment :: Console",
    "Environment :: Web Environment",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "email-validator>=2.0.0",
    "dnspython>=2.3.0",
    "cryptography>=41.0.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
    "jinja2>=3.1.0",
    "colorama>=0.4.6",
    "packaging>=23.0",
    "pathlib2>=2.3.7; python_version < '3.4'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
django = [
    "django>=4.0.0",
]
flask = [
    "flask>=2.3.0",
]
fastapi = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "datadog>=0.44.0",
    "newrelic>=8.0.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
cloud = [
    "boto3>=1.28.0",
    "google-cloud-secret-manager>=2.16.0",
    "azure-keyvault-secrets>=4.7.0",
]

[project.urls]
Homepage = "https://github.com/Sherin-SEF-AI/env-validator"
Documentation = "https://env-validator.readthedocs.io"
Repository = "https://github.com/Sherin-SEF-AI/env-validator.git"
"Bug Tracker" = "https://github.com/Sherin-SEF-AI/env-validator/issues"
"Source Code" = "https://github.com/Sherin-SEF-AI/env-validator"
"Changelog" = "https://github.com/Sherin-SEF-AI/env-validator/blob/main/CHANGELOG.md"

[project.scripts]
envvar-validator = "env_validator.cli.main:main"

[project.gui-scripts]
env-validator-gui = "env_validator.gui:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"env_validator" = ["py.typed", "*.pyi", "templates/*", "schemas/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["env_validator"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/env_validator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
policy = "strict" 