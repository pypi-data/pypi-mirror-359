# coding: utf-8

"""
    FAB Client Lib

    Python client lib to access Flatland Association Benchmarks / AI4REALNET Campaign Hub Backend API, generated with openapi-generator

    The version of the OpenAPI document: 0.0.0
    Contact: contact@flatland-association.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fab_clientlib.models.results_campaign_items_benchmark_id_get200_response_all_of_body_inner_items_inner import ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner

class TestResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner(unittest.TestCase):
    """ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner:
        """Test ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner`
        """
        model = ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner()
        if include_optional:
            return ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner(
                test_id = '',
                scorings = None,
                submission_id = ''
            )
        else:
            return ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner(
        )
        """

    def testResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner(self):
        """Test ResultsCampaignItemsBenchmarkIdGet200ResponseAllOfBodyInnerItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
