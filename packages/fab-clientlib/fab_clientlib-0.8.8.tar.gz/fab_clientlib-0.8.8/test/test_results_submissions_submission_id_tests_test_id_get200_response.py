# coding: utf-8

"""
    FAB Client Lib

    Python client lib to access Flatland Association Benchmarks / AI4REALNET Campaign Hub Backend API, generated with openapi-generator

    The version of the OpenAPI document: 0.0.0
    Contact: contact@flatland-association.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fab_clientlib.models.results_submissions_submission_id_tests_test_id_get200_response import ResultsSubmissionsSubmissionIdTestsTestIdGet200Response

class TestResultsSubmissionsSubmissionIdTestsTestIdGet200Response(unittest.TestCase):
    """ResultsSubmissionsSubmissionIdTestsTestIdGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultsSubmissionsSubmissionIdTestsTestIdGet200Response:
        """Test ResultsSubmissionsSubmissionIdTestsTestIdGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultsSubmissionsSubmissionIdTestsTestIdGet200Response`
        """
        model = ResultsSubmissionsSubmissionIdTestsTestIdGet200Response()
        if include_optional:
            return ResultsSubmissionsSubmissionIdTestsTestIdGet200Response(
                error = fab_clientlib.models.api_response_error.ApiResponse_error(
                    text = '', ),
                body = fab_clientlib.models._results_submissions__submission_id__get_200_response_all_of_body_inner_test_scorings_inner._results_submissions__submission_id__get_200_response_allOf_body_inner_test_scorings_inner(
                    test_id = '', 
                    scorings = fab_clientlib.models.scorings.scorings(), 
                    scenario_scorings = [
                        fab_clientlib.models._results_submissions__submission_id__get_200_response_all_of_body_inner_test_scorings_inner_scenario_scorings_inner._results_submissions__submission_id__get_200_response_allOf_body_inner_test_scorings_inner_scenario_scorings_inner(
                            scenario_id = '', 
                            scorings = fab_clientlib.models.scorings.scorings(), )
                        ], )
            )
        else:
            return ResultsSubmissionsSubmissionIdTestsTestIdGet200Response(
        )
        """

    def testResultsSubmissionsSubmissionIdTestsTestIdGet200Response(self):
        """Test ResultsSubmissionsSubmissionIdTestsTestIdGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
