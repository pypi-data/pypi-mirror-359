[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "fabric-mcp"
dynamic = ["version"]
description = "MCP Server for Fabric AI Framework"
authors = [{ name = "Kayvan Sylvan", email = "kayvan@sylvan.com" }]
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = ["fabric", "mcp", "ai", "framework", "server"]
dependencies = [
    "click>=8.2.1",
    "httpx>=0.28.1",
    "modelcontextprotocol>=0.1.0",
    "fastmcp>=2.8.1",
    "rich>=14.0.0",
    "httpx-retries>=0.4.0",
    "python-dotenv>=1.1.0",
    "httpx-sse>=0.4.0",
]

[project.urls]
"Homepage" = "https://github.com/ksylvan/fabric-mcp"
"Releases" = "https://github.com/ksylvan/fabric-mcp/releases"
"Bug Tracker" = "https://github.com/ksylvan/fabric-mcp/issues"
"Documentation" = "https://github.com/ksylvan/fabric-mcp#readme"

[project.scripts]
fabric-mcp = "fabric_mcp.cli:main"

[dependency-groups]
dev = [
    "hatch>=1.14.1",
    "hatchling>=1.27.0",
    "pre-commit>=4.2.0",
    "pylint>=3.3.7",
    "pylint-pytest>=1.1.8",
    "pyright>=1.1.402",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.0",
    "uv>=0.7.13",
    "fastapi>=0.115.13",
    "uvicorn>=0.34.3",
    "pytest-xdist>=3.7.0",
    "vulture>=2.14",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_default_fixture_loop_scope = "function"
markers = ["integration: marks tests as integration tests"]

# Tell hatchling where to find the version variable
[tool.hatch.version]
path = "src/fabric_mcp/__about__.py"

[tool.uv]
index = [
    { name = "testpypi", url = "https://test.pypi.org/simple/", publish-url = "https://test.pypi.org/legacy/", explicit = true },
    { name = "pypi", url = "https://pypi.org/simple/", publish-url = "https://upload.pypi.org/legacy/", explicit = true },
]

[tool.pyright]
typeCheckingMode = "strict"
reportMissingTypeStubs = true
reportUnknownParameterType = true
reportUnknownMemberType = true
reportAny = true

[tool.hatch.build]
# ensure editable installs pick up code under src/
dev-mode-dirs = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/fabric_mcp"]

[tool.hatch.build.targets.sdist]
sources = ["src"]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.vulture]
exclude = [".venv/"]
ignore_decorators = [
    "@app.get",
    "@app.post",
    "@app.put",
    "@app.delete",
    "@app.patch",
]
make_whitelist = true
min_confidence = 80
paths = ["src", "tests"]
sort_by_size = true
verbose = false
