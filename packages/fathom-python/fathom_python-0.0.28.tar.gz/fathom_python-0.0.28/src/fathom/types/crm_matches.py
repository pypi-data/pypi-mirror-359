# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .crm_company_match import CrmCompanyMatch
from .crm_contact_match import CrmContactMatch
from .crm_deal_match import CrmDealMatch


class CrmMatches(UniversalBaseModel):
    """
    CRM data linked to the meeting. Only returns data from your or your team's linked CRM.
    If no CRM is connected for the workspace, the `error` field will be populated.
    """

    contacts: typing.Optional[typing.List[CrmContactMatch]] = None
    companies: typing.Optional[typing.List[CrmCompanyMatch]] = None
    deals: typing.Optional[typing.List[CrmDealMatch]] = None
    error: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
