name: Release Rust Python Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  publish-to-pypi-linux:
    name: Build and Publish Linux Wheel to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Dependencies
        run: pip install maturin

      - name: Build and Publish to PyPI
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: |
          maturin publish --username __token__ --password $MATURIN_PASSWORD

  publish-to-pypi-windows:
    name: Build and Publish Windows Wheel to PyPI
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Dependencies
        run: pip install maturin


      - name: Build and Publish to PyPI
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: |
          maturin publish --username __token__ --password %MATURIN_PASSWORD%


  update-types:
    name: Generate and Commit OpenAPI Types
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install Dependencies
        run: pip install maturin datamodel-code-generator

      # Step 3: Generate OpenAPI JSON
      - name: Generate OpenAPI JSON
        run: |
          cargo run -- --openapi
          mkdir -p "$GITHUB_WORKSPACE/types"
          mv openapi.json "$GITHUB_WORKSPACE/types/openapi.json"

      # Step 4: Generate Pydantic models
      - name: Generate Pydantic Models
        run: |
          cd "$GITHUB_WORKSPACE/types"
          datamodel-codegen --input openapi.json --input-file-type openapi --output pydantic_models.py

      # Step 5: Commit and push updated types
      - name: Commit and Push Generated Files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add types/openapi.json types/pydantic_models.py
          git commit -m "Update OpenAPI JSON and Pydantic models in /types folder"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
