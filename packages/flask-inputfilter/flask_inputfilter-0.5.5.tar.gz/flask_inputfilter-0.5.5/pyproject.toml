[build-system]
requires = ["setuptools", "wheel", "cython"]
build-backend = "setuptools.build_meta"

[project]
name = "flask_inputfilter"
version = "0.5.5"
description = "A library to easily filter and validate input data in Flask applications"
readme = "README.md"
keywords = [
    "flask", "input", "validation", "filter", "condition", "sanitization", "api", "data",
    "schema", "security", "middleware", "request", "serialization", "json-validation", "form"
]
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "Leander Cain Slotosch", email = "slotosch.leander@outlook.de"}
]
dependencies = [
    "flask>=2.1"
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.7",
]

[project.optional-dependencies]
dev = [
    "autoflake",
    "black",
    "build",
    "coverage",
    "coveralls",
    "cython",
    "flake8-pyproject==1.2.3",
    "flake8==5.0.4",
    "isort",
    "pillow>=8.0.0",
    "pytest",
    "requests>=2.22.0",
    "sphinx",
    "sphinx-autobuild",
    "sphinx_design",
    "sphinx_rtd_theme",
    "docformatter",
]
optional = [
    "pillow>=8.0.0",
    "requests>=2.22.0",
    "cython>=3.0; python_version <= '3.12'",
    "cython>=3.0.12; python_version >= '3.13'",
]
compile = [
    "cython>=3.0; python_version <= '3.12'",
    "cython>=3.0.12; python_version >= '3.13'",
]

[project.urls]
Homepage = "https://github.com/LeanderCS/flask-inputfilter"
Documentation = "https://leandercs.github.io/flask-inputfilter"
Source = "https://github.com/LeanderCS/flask-inputfilter"
Issues = "https://github.com/LeanderCS/flask-inputfilter/issues"

[tool.setuptools]
package-data = {flask_inputfilter = ["*.pyx", "*.py"]}
include-package-data = true

[tool.setuptools.packages.find]
include = ["flask_inputfilter"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning"
]
addopts = "--tb=short -q"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311, py312, py313, py314

[testenv]
deps =
    -renv_configs/requirements-{envname}.txt
install_command = {envbindir}/python -I -m pip install {opts} {packages}
commands =
    pytest
"""

[tool.coverage.run]
source = ["flask_inputfilter"]

[tool.coverage.report]
omit = ["__init__.py", "*/tests/*"]

[tool.flake8]
exclude = ["__init__.py", "*.md", ".*"]
max-line-length = 79

[tool.black]
line-length = 79

[tool.isort]
profile = 'black'
line_length = 79
known_first_party = [
    "flask_inputfilter/conditions/base_condition",
    "flask_inputfilter/filters/base_filter",
    "flask_inputfilter/validators/base_validator"
]

[tool.docformatter]
wrap-summaries = 79
wrap-descriptions = 79
recursive = true
in_place = true
pre_summary_newline = true
