name: Build, test and (if release) deploy
on:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:

jobs:
  build:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tests]

#      - name: Run ruff format
#        run: ruff format . --diff

      - name: Run ruff check
        run: ruff check .

      - name: Test with pytest
        run: pytest

      - name: Build a binary wheel and a source tarball
        if: github.event_name == 'release'
        run: |
          pip install build
          export SETUPTOOLS_SCM_PRETEND_VERSION_FOR_FMU_PEM=$GITHUB_REF_NAME
          python -m build

      - name: Upload artifact
        if: github.event_name == 'release' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: Python dist
          path: dist/

      - name: Build configuration file user interface
        working-directory: ./documentation
        run: |
          npm ci
          npm run create-json-schema
          npm run docs:build

      - name: ðŸ“š Update GitHub pages
        # Update on merge to main
        if: github.ref_name == 'main'
        run: |
          # Move the built documentation out of working directory, in order to delete everything else afterwards
          cp -R ./documentation/docs/.vitepress/dist ../dist

          git config --local user.email "fmu-pem-github-action"
          git config --local user.name "fmu-pem-github-action"
          git fetch origin gh-pages
          git checkout -f --track origin/gh-pages
          git clean -f -f -d -x
          git rm -r *

          cp -R ../dist/* .

          git add .

          if git diff-index --quiet HEAD; then
            echo "No changes in documentation. Skip documentation deploy."
          else
            git commit -m "Update Github Pages"
            git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
          fi


  deploy:
    name: Upload release to PyPI
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/fmu-pem
    permissions:
      id-token: write  # required for Trusted Publishing to PyPI

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Python dist
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
