Metadata-Version: 2.4
Name: goblin-cli
Version: 0.1.4
Summary: A CLI tool for automating and managing Java unit tests with enhanced reporting and debugging features (development version)
Author: gpapachr
Project-URL: Homepage, https://github.com/gpapachr/unit-test-goblin
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: javalang==0.13.0
Requires-Dist: rich==14.0.0
Requires-Dist: toml~=0.10.2
Provides-Extra: dev
Requires-Dist: pytest==8.3.5; extra == "dev"
Requires-Dist: ruff==0.11.6; extra == "dev"
Requires-Dist: iniconfig==2.1.0; extra == "dev"
Requires-Dist: packaging==25.0; extra == "dev"
Requires-Dist: pluggy==1.5.0; extra == "dev"
Requires-Dist: six==1.17.0; extra == "dev"
Dynamic: license-file

# Unit Test Goblin 🧪👹

A CLI tool that analyzes your unit tests and codebase to detect weak test coverage, redundant cases, and untested logic paths. Because your tests _aren’t as good as you think_.

![Goblin CLI Output](./assets/goblin-cli-screenshot.png)

## Why?

Most test suites lie. They pass when they shouldn't, cover when they shouldn't, and leave edge cases to die in the cold. Goblin helps you:

- Spot meaningless tests
- Identify missing assertions
- Catch untested edge cases

## MVP Features

- Parse code and test files
- Detect empty or redundant tests

## Next Steps

- Identify missing logical branches
- Suggest better coverage

## Usage

```bash
$ goblin analyze ./path/to/your/code
```

### 📁 Folder Overview

| Folder    | Purpose                                               |
|-----------|-------------------------------------------------------|
| `goblin/` | Core logic: parsing, detecting, and shaming bad tests |
| `tests/`  | Unit tests _for the Goblin itself_                    |
| `docs/`   | Design plans, roadmap, architecture decisions         |

### 📚 Docs

[Roadmap](./docs/roadmap.md) – See what's coming next in the Goblinverse!
[Virtual Environment](./docs/virtual-environment.md) – Lessons learned about dev environment for Goblin development.

---

👋 Created by [gpapachr](https://github.com/gpapachr) – fueled by sarcasm, caffeine, and a deep hatred for fragile test suites.
