Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># hashtray\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/balestek/hashtray/master/media/hashtray-logo.png\">\r\n</p>\r\n\r\n[![PyPI version](https://badge.fury.io/py/hashtray.svg)](https://badge.fury.io/py/hashtray)\r\n![Python minimum version](https://img.shields.io/badge/Python-3.8%2B-brightgreen)\r\n[![Downloads](https://pepy.tech/badge/hashtray)](https://pepy.tech/project/hashtray)\r\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\r\n[![License](https://img.shields.io/github/license/balestek/medor.svg)](https://github.com/<balestek>/medor/blob/master/LICENSE)\r\n\r\n## Intro\r\n_hashtray_ is an OSINT (Open Source Intelligence) tool designed to find a Gravatar account associated with an email address and to locate an email address using a Gravatar account username or hash. A Gravatar account can provide substantial information for pivoting purposes.\r\n\r\n## Versions\r\n- v 0.1.0\r\n  - sha256 hash support\r\n  - Scrap the details no longer available due to the new Gravatar API\r\n  - Simplify some the data keys\r\n  - Add domains found in the links sections to the domains list\r\n  - Add Bluesky support and fix some website handling\r\n  - Refactor some code\r\n- v 0.0.1.\r\n  - First release of _hashtray_.\r\n\r\n## Features\r\n_hashtray_ comes with the following features:\r\n+ [X] Find a Gravatar account using an email address \r\n+ [x] Locate the primary email associated with a Gravatar account using a Gravatar username or hash\r\n+ [x] Display Gravatar account information\r\n\r\nIf the profile is public and the information available, the following can be retrieved:\r\n\r\n- Hash\r\n- Profile URL\r\n- Avatar\r\n- Activity (Last profile edit)\r\n- Location\r\n- Preferred username\r\n- Pronunciation\r\n- Display name\r\n- Given name\r\n- Family name\r\n- Pronouns\r\n- Bio (About)\r\n- Job title\r\n- Company\r\n- Contact information\r\n- Emails\r\n- Phone numbers\r\n- Verified accounts (Instagram, Twitter, Facebook, TikTok,...)\r\n- Payment information (PayPal, Venmo,...)\r\n- Wallets (Bitcoin, Ethereum,...)\r\n- Photos\r\n- Interests (Links)\r\n\r\n## Installation\r\n\r\nPython 3.8+ is required.\r\n\r\n### pipx (recommended)\r\n\r\nInstall with pipx\r\n\r\n```bash\r\npipx install hashtray\r\n```\r\n\r\nRun hashtray with pipx without installing it\r\n\r\n```bash\r\npipx run hashtray [argumens]\r\n```\r\n\r\n### uv (recommended)\r\n\r\nInstall with uv\r\n\r\n```bash\r\n\r\nuv tool install hashtray\r\n```\r\n\r\nRun hashtray with uv without installing it\r\n\r\n```bash\r\nuvx hashtray [arguments]\r\n```\r\n\r\n### pip\r\n```bash\r\npip install hashtray\r\n```\r\n\r\n## Usage\r\n\r\n### Find Gravatar account with an email\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/balestek/hashtray/master/media/hashtray-email.png\">\r\n</p>\r\n\r\nPretty straightforward. The command is `email` .\r\n\r\nIt converts the email address into its MD5 hash. _hashtray_ then checks if a public profile associated with the hash exists on Gravatar. If found, it displays the profile information.\r\n\r\n```bash\r\nhashtray email user@domain.tld\r\n```\r\n\r\nIn some cases, the email hash may not match the one found on the Gravatar profile, yet a profile is still displayed. This is because Gravatar profiles only show the hash of the primary email address. Consequently, the email address used for the search is not the primary one but is registered as a secondary email. This indicates that there is at least one more email address associated with the Gravatar account to be found.\r\n\r\nIn such cases, _hashtray_ alerts you. You can then attempt to find the primary email address using its second command, `account`.\r\n\r\n### Find an email from a Gravatar username or hash\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/balestek/hashtray/master/media/hashtray-account.png\">\r\n</p>\r\n\r\nTo find an email address associated with a Gravatar username or hash, use the account command.\r\n\r\nhashtray creates a list of possible email addresses using data from the Gravatar profile.\r\n\r\nBoth the username and hash can be used with the account command. The username is the last part of the Gravatar profile page URL (e.g., https://gravatar.com/username), while the hash is the MD5 hash of the Gravatar account email.\r\n\r\nIf you come across a Gravatar avatar, you can find its MD5 hash within the avatar's URL, which follows this pattern: https://1.gravatar.com/avatar/437e4dc6d001f2519bc9e7a6b6412923. This hash represents the account hash.\r\n\r\nIt compares each of these email hashes to the account hash to locate the primary Gravatar account email.\r\n\r\nAdditionally, it also checks emails in the public profile to see if they are the primary email.\r\n\r\n```bash\r\nhashtray account username # with username\r\nhashtray account 437e4dc6d001f2519bc9e7a6b6412923 # with the hash\r\n```\r\n\r\n#### Options\r\n\r\n##### --domain_list\r\n\r\n`--domain_list` or `-l` to choose the domain list to use:\r\n- `common` : 455 domains (default)\r\n- `long` : 5334 domains\r\n- `full` : 118062 domains\r\n\r\nThe domains lists need to be refined in the future.\r\n\r\n```bash\r\nhashtray account jondo --domain_list long\r\nhashtray account 437e4dc6d001f2519bc9e7a6b6412923 -l long\r\n```\r\n\r\n##### --elements\r\n\r\n`--elements` or `-e` to manually provide strings for email generation instead of relying on the built-in logic. The more strings you add, the longer the hash generation process will take. Please refer to the notes for more information.\r\n\r\n```bash\r\nhashtray account jondo --elements john doe j d jondo 2001\r\nhashtray account 437e4dc6d001f2519bc9e7a6b6412923 -e john doe j d jondo 2001\r\n```\r\n\r\n##### --domains\r\n\r\n`--domains` or `-d` to use custom email domains instead of the built-in domain lists. This allows you to tailor the search to specific domains relevant to your investigation.\r\n\r\n```bash\r\nhashtray account jondo --custom_domains domain1.com domain2.com\r\nhashtray account 437e4dc6d001f2519bc9e7a6b6412923 -c domain1.com domain2.com\r\n```\r\n\r\n##### --crazy\r\n\r\n`--crazy` or `-c` to go crazy and try EVERY SINGLE combination (with any special character at any place in the combinations). See Notes.\r\n\r\n```bash\r\nhashtray account jondo --custom_domains domain1.com domain2.com\r\nhashtray account 437e4dc6d001f2519bc9e7a6b6412923 -c domain1.com domain2.com\r\n```\r\n\r\n#### Notes\r\n\r\n_hashtray_ retrieves emails in two ways:\r\n- extracting emails from the profile page, if it's available and public, and verifying if they are the emails linked to the account.\r\n- generating potential email addresses from the available information and comparing their MD5 hashes to the account hash.\r\n\r\nFor the latter, it uses several elements if available:\r\n- the username chunk of the profile page URL\r\n- the preferred username\r\n- the given name and the family name, as well as their initials\r\n- the display name\r\n- the verified accounts URL usernames chunks\r\n\r\nThe elements list is then deduplicated, and elements that can be combined from already present elements are discarded.\r\n\r\nAll possible combinations, including a few special characters (._-) and a domain list, are generated, without any repetitive element and with a unique special character per combination.\r\n\r\nThe more elements to combine, the longer the processing time will be. To give you an idea of the scale, here's a table showing the number of combinations for a single domain and 455 domains, based on different numbers of elements, for the normal mode (one unique special character allowed per combination):\r\n\r\n| elements    | 1   | 2    | 3     | 4    | 5      | 6    | 7     | 8      | 9    | 10    |\r\n|-------------|-----|------|-------|------|--------|------|-------|--------|------|-------|\r\n| 1 domain    | 1   | 10   | 51    | 244  | 1.2k   | 7.8k | 54.7k | 438.3k | 3.9M | 39.5M |\r\n| 455 domains | 455 | 4.5k | 23.2k | 111k | 584.6k | 3.5M | 24.9M | 199.4M | 1.7B | 17.9B |\r\n\r\nHere is the same table for the crazy mode `--crazy`, `-c` (any special characters allowed at any place per combination):\r\n\r\n| elements    | 1   | 2    | 3   | 4     | 5     | 6    | 7     | 8    | 9     | 10     |\r\n|-------------|-----|------|-----|-------|-------|------|-------|------|-------|--------|\r\n| 1 domain    | 1   | 10   | 123 | 1.97k | 39.4k | 947k | 26.5M | 848M | 30.5B | 1.22T  |\r\n| 455 domains | 455 | 4.5k | 56k | 897k  | 17.9M | 431M | 12.1B | 386B | 13.9T | 556T   |\r\n\r\n### Next steps for future versions\r\n\r\n- [ ] Improve the domain lists (better ranking by users) and add a \"small\" one.\r\n- [ ] Add an intermediate mode between normal and crazy for \"\" and any special character at any place.\r\n- [ ] Add multi-processing\r\n\r\n### Contributions\r\n\r\nSuggestions and contributions are welcomed, especially for the \"Next steps\" section tasks.\r\n\r\n### Credits\r\n\r\nabout the technique:\r\n\r\n- [BanPangar Twitter/X](https://twitter.com/BanPangar/status/1357805358153150467)\r\n- [cyb_detective medium post](https://publication.osintambition.org/4-easy-tricks-for-using-gravatar-in-osint-99c0910d933)\r\n\r\nemail domain sources:\r\n\r\n- https://github.com/derhuerst/email-providers\r\n- https://github.com/Kikobeats/free-email-domains\r\n- https://github.com/mstfknn/email-providers\r\n\r\n\\+ some personal additions\r\n\r\n## Requirements\r\n\r\n```\r\nhttpx\r\nunidecode\r\ntqdm\r\nrich\r\n```\r\n\r\n## License\r\nGPLv3\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 97a9c0444eeb670272c8046fb5e21253a2836742)
+++ b/README.md	(date 1751488850818)
@@ -14,7 +14,7 @@
 _hashtray_ is an OSINT (Open Source Intelligence) tool designed to find a Gravatar account associated with an email address and to locate an email address using a Gravatar account username or hash. A Gravatar account can provide substantial information for pivoting purposes.
 
 ## Versions
-- v 0.1.0
+- v 0.1.0b
   - sha256 hash support
   - Scrap the details no longer available due to the new Gravatar API
   - Simplify some the data keys
