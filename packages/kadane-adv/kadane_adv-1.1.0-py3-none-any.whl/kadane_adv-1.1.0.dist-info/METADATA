Metadata-Version: 2.4
Name: kadane-adv
Version: 1.1.0
Summary: About An advanced Python library implementing Kadaneâ€™s Algorithm with support for 1D & 2D arrays, visualization, subarray constraints, and test coverage. Perfect for data analysis, time-series problems, and algorithm enthusiasts.
Home-page: https://github.com/7pk5/kadane-adv
Author: Parimal Kalpande , Krunal Wankhade
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-python
Dynamic: summary

# kadane-adv: Advanced Subarray Optimization Library for Python

**kadane-adv** is a Python package that extends the classic Kadaneâ€™s Algorithm to support advanced use cases in 1D and 2D data analysis. Designed for performance and simplicity, it provides efficient tools to identify optimal subarrays and submatrices across diverse datasetsâ€”time series, financial data, sensor logs, or image matrices.

It is an essential utility for **data analysts, researchers, and machine learning developers** seeking meaningful patterns in structured data.

---

##  Table of Contents

- [Main Features](#main-features)  
- [Installation](#installation)  
- [Dependencies](#dependencies)  
- [License](#license)  
- [Documentation](#documentation)  
- [Background](#background)  
- [Getting Help](#getting-help)  
- [Discussion & Development](#discussion--development)  
- [Contributing](#contributing-to-kadane-adv)

---

##  Main Features

- ðŸ”¹ **1D Maximum Subarray Detection**  
  Find the subarray with the maximum sum in linear time.

- ðŸ”¹ **2D Maximum Submatrix Detection**  
  Extend Kadaneâ€™s algorithm to rectangular regions in 2D matrices.

- ðŸ”¹ **Constrained Optimization**  
  Support for constraints such as minimum subarray length.

- ðŸ”¹ **Built-in Visualization**  
  Visual representation of the detected optimal regions.

- ðŸ”¹ **Integration with NumPy & Pandas**  
  Supports direct use of NumPy arrays and Pandas DataFrames.

- ðŸ”¹ **Real-world Applications**  
  Use it in financial trend analysis, signal processing, sensor logs, and image matrix optimization.

---

## Installation

### From PyPI

You can install the library using pip:

```bash
pip install kadane-adv
```

### From Source

1. Download the source code from [PyPI](https://pypi.org/project/kadane-adv/) or GitHub.  
2. Extract the archive and navigate to the folder.

```bash
cd kadane-adv
```

3. Run the setup script:

```bash
python setup.py install
```

---

## Dependencies

### Required:
- `numpy` â€” for matrix and array operations  
- `matplotlib` â€” for visualizations

### Optional:
- `pandas` â€” for seamless DataFrame integration

> Exact versions can be found in the `requirements.txt` file.

---

## License

Licensed under the **MIT License**.  
See the [`LICENSE`](./LICENSE) file for full text.

---

## Documentation

- All functions are documented with Python docstrings  
- Fully commented source code  
- Use the built-in `help()` function or your IDE's documentation viewer

---

## Background

While classic Kadaneâ€™s algorithm finds the maximum sum subarray in 1D, **kadane-adv** extends this by adding:

-  **Multi-dimensional support** (e.g., 2D submatrices)  
-  **Constraint-based searches** (e.g., min length)  
-  **Visual feedback** to verify or interpret the result

### Typical Use Cases:
-  Stock market and financial data analysis  
-  Time series segmentation  
-  Signal and anomaly detection  
-  Image processing and matrix evaluation  
-  Sensor data analysis for IoT applications

---

##  Getting Help

- Use `help(kadane_adv.function_name)` in Python  
- Browse built-in examples (if available)  
- Open an issue on the GitHub repo (link to be added)

---

##  Discussion & Development

The project evolves with real-world needs in:

- Data Science & ML workflows  
- Financial and signal analysis  
- Academic & exploratory research

Your suggestions and use-cases are welcome!

---

##  Contributing to kadane-adv

We welcome contributions in all forms! You can help by:

- Fixing bugs  
- Adding new features  
- Improving documentation  
- Creating real-world usage examples

###  Guidelines:

- Keep changes focused and lightweight  
- Write clear, readable, and commented code  
- Use docstrings for new functions  
- Submit a pull request (PR) with a clear description

Letâ€™s make this tool better â€” **together**!

---

[Back to Top](#kadane-adv-advanced-subarray-optimization-library-for-python)
