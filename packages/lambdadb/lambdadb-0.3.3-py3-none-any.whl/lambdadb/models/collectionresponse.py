"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .indexconfigs_union import IndexConfigsUnion, IndexConfigsUnionTypedDict
from .status import Status
from lambdadb.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CollectionResponseTypedDict(TypedDict):
    project_name: NotRequired[str]
    r"""Project name."""
    collection_name: NotRequired[str]
    r"""Collection name."""
    index_configs: NotRequired[Dict[str, IndexConfigsUnionTypedDict]]
    num_docs: NotRequired[int]
    r"""Total number of documents."""
    source_project_name: NotRequired[str]
    r"""Source project name."""
    source_collection_name: NotRequired[str]
    r"""Source collection name."""
    source_collection_version_id: NotRequired[str]
    r"""Source collection version."""
    collection_status: NotRequired[Status]
    r"""Status"""


class CollectionResponse(BaseModel):
    project_name: Annotated[Optional[str], pydantic.Field(alias="projectName")] = None
    r"""Project name."""

    collection_name: Annotated[
        Optional[str], pydantic.Field(alias="collectionName")
    ] = None
    r"""Collection name."""

    index_configs: Annotated[
        Optional[Dict[str, IndexConfigsUnion]], pydantic.Field(alias="indexConfigs")
    ] = None

    num_docs: Annotated[Optional[int], pydantic.Field(alias="numDocs")] = None
    r"""Total number of documents."""

    source_project_name: Annotated[
        Optional[str], pydantic.Field(alias="sourceProjectName")
    ] = None
    r"""Source project name."""

    source_collection_name: Annotated[
        Optional[str], pydantic.Field(alias="sourceCollectionName")
    ] = None
    r"""Source collection name."""

    source_collection_version_id: Annotated[
        Optional[str], pydantic.Field(alias="sourceCollectionVersionId")
    ] = None
    r"""Source collection version."""

    collection_status: Annotated[
        Optional[Status], pydantic.Field(alias="collectionStatus")
    ] = None
    r"""Status"""
