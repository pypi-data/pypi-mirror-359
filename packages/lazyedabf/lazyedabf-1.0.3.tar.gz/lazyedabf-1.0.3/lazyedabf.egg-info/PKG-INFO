Metadata-Version: 2.4
Name: lazyedabf
Version: 1.0.3
Summary: A package for EDA on CSV, Parquet.
Author: nicolas_conde_brainfood
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: pandas==2.2.2
Requires-Dist: polars==1.10.0
Requires-Dist: XlsxWriter==3.2.0
Requires-Dist: pyarrow==17.0.0
Requires-Dist: tqdm
Dynamic: author
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


# EDA BF - Exploratory Data Analysis Package

Este paquete permite realizar un análisis exploratorio de datos (EDA) sobre archivos (CSV, Parquet), generando informes en formato Excel para facilitar el análisis de calidad y características de los datos.

## Funcionalidades Principales

### 1. `process_single_file`
Procesa un archivo individual (CSV o Parquet) y genera un informe EDA en formato Excel.

- **Función**: `process_single_file(file_path, output=None, limite=None)`
- **Parámetros**:
  - `file_path` (str): Ruta del archivo a procesar.
  - `output` (str): Ruta de salida para el archivo Excel (opcional).
  - `limite` (int): Límite opcional de filas a leer.
- **Descripción**: Lee el archivo especificado, genera un análisis exploratorio de datos y lo guarda en un archivo Excel que contiene métricas y estadísticas de los datos.

### 2. `process_folder`
Procesa múltiples archivos en una carpeta (CSV y Parquet) y genera un informe EDA consolidado en un archivo Excel.

- **Función**: `process_folder(folder_path, output=None, limite=None)`
- **Parámetros**:
  - `folder_path` (str): Ruta de la carpeta que contiene los archivos a procesar.
  - `output` (str): Ruta de salida para el archivo Excel consolidado.
  - `limite` (int): Límite opcional de filas a leer por archivo.
- **Descripción**: Busca archivos CSV y Parquet en la carpeta especificada, procesa cada archivo, y genera un informe combinado en Excel con métricas detalladas de cada archivo.

### 3. `process_dataframe`
Procesa un DataFrame directamente en memoria y genera un informe EDA en formato Excel.

- **Función**: `process_dataframe(df, output=None, table_name="DataFrame", limite=None)`
- **Parámetros**:
  - `df` (DataFrame): El DataFrame que se desea procesar.
  - `output` (str): Ruta de salida para el archivo Excel.
  - `table_name` (str): Nombre que se asignará al DataFrame en el informe Excel (por defecto: `"DataFrame"`).
  - `limite` (int): Límite opcional de filas a procesar.
- **Descripción**: Procesa un DataFrame cargado en memoria, generando un informe en Excel con estadísticas descriptivas y métricas clave. Si se especifica un límite, solo se procesan las primeras `limite` filas.


## Ejemplos de Uso

### Procesar un Archivo Individual
```python
from edabf import process_single_file
process_single_file("ruta/al/archivo.csv", output="salida", limite=1000)
```

### Procesar una Carpeta de Archivos
```python
from edabf import process_folder
process_folder("ruta/a/carpeta", output="salida_masivo")
```

### Procesar Múltiples Tablas de un Esquema de Base de Datos
```python
from edabf import process_dataframe
import pandas as pd

# Crear un DataFrame de ejemplo
data = {"Columna1": [1, 2, 3], "Columna2": ["A", "B", "C"]}
df = pd.DataFrame(data)

# Generar el informe EDA
process_dataframe(df, output="reporte_dataframe", table_name="Ejemplo", limite=10)
```
## Licencia
Este proyecto está bajo la licencia MIT.
