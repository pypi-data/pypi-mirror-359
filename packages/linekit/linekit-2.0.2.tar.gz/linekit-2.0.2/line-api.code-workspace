{
    "folders": [
        {
            "name": "line-api",
            "path": "."
        }
    ],
    "settings": {
        // Python Configuration
        "python.defaultInterpreterPath": "./.venv/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.analysis.autoImportCompletions": true,
        "python.analysis.typeCheckingMode": "strict",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": false,
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": [
            "--line-length=88"
        ],
        "python.sortImports.args": [
            "--profile",
            "black"
        ],
        "python.analysis.extraPaths": [],
        // Ruff Configuration (Modern Python Linter)
        "ruff.enable": true,
        "ruff.lint.enable": true,
        "ruff.format.enable": true,
        // File Associations and Language Settings
        "files.associations": {
            "*.env": "properties",
            "*.env.example": "properties",
            "Dockerfile*": "dockerfile",
            "docker-compose*.yml": "yaml",
            "docker-compose*.yaml": "yaml"
        },
        // Editor Configuration
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.ruff": "explicit"
        },
        "editor.rulers": [
            88,
            120
        ],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "editor.trimAutoWhitespace": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "files.trimFinalNewlines": true,
        // Search and File Explorer
        "search.exclude": {
            "**/__pycache__": true,
            "**/.pytest_cache": true,
            "**/.mypy_cache": true,
            "**/.ruff_cache": true,
            "**/node_modules": true,
            "**/.venv": true,
            "**/venv": true,
            "**/.DS_Store": true,
            "**/logs": true,
            "**/htmlcov": true,
            "**/*.pyc": true,
            "**/uv.lock": false
        },
        "files.exclude": {
            "**/__pycache__": true,
            "**/.pytest_cache": true,
            "**/.mypy_cache": true,
            "**/.ruff_cache": true,
            "**/.DS_Store": true
        },
        "files.watcherExclude": {
            "**/__pycache__/**": true,
            "**/.pytest_cache/**": true,
            "**/.mypy_cache/**": true,
            "**/.ruff_cache/**": true,
            "**/.venv/**": true,
            "**/venv/**": true,
            "**/logs/**": true
        },
        // Testing Configuration
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
            "--verbose",
            "--tb=short",
            "--cov=app",
            "--cov-report=html",
            "--cov-report=term-missing"
        ],
        "python.testing.autoTestDiscoverOnSaveEnabled": true,
        "terminal.integrated.cwd": "${workspaceFolder}",
        // JSON and YAML Configuration
        "json.validate.enable": true,
        "yaml.validate": true,
        "yaml.hover": true,
        "yaml.completion": true,
        // Git Configuration
        "git.ignoreLimitWarning": true,
        "git.autofetch": true,
        // AI Assistant Configuration
        "github.copilot.enable": {
            "*": true,
            "yaml": true,
            "plaintext": false,
            "markdown": true,
            "python": true
        },
        // Unified AI Instructions Configuration
        "github.copilot.chat.instructionFiles": [
            ".ai-instructions.md"
        ],
        "github.copilot.chat.codeGeneration.useInstructionFiles": true,
        // Cursor IDE Configuration
        "cursorpyright.analysis.autoImportCompletions": true,
        "cursorpyright.analysis.extraPaths": [],
        "cursorpyright.analysis.typeCheckingMode": "strict",
        "cursor.instructionFiles": [
            ".ai-instructions.md"
        ]
    },
    "launch": {
        "configurations": [
            {
                "name": "Python: Current File",
                "type": "debugpy",
                "request": "launch",
                "program": "${file}",
                "console": "integratedTerminal",
                "justMyCode": true
            }
        ],
        "compounds": []
    },
}
