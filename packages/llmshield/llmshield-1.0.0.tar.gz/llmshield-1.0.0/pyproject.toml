[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llmshield"
version = "1.0.0"
description = "Shields your confidential data from third party LLM providers."
readme = "README.md"
authors = [
    {name = "Aditya Dedhia", email = "aditya@brainpolo.com"},
    { name = "Sebastian Andres El Khoury Seoane", email = "sebasandres0694@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
license-files = ["LICENSE.txt"]
keywords = ["llm", "ai", "security", "privacy"]
requires-python = ">=3.12"

[project.urls]
Homepage = "https://github.com/brainpolo/llmshield"
Issues = "https://github.com/brainpolo/llmshield/issues"

[tool.setuptools]
packages = [
    "llmshield",
    "llmshield.cache",
    "llmshield.matchers",
    "llmshield.matchers.dicts",
    "llmshield.matchers.dicts.corpus",
    "llmshield.providers",
]

[tool.setuptools.package-data]
"llmshield.matchers" = ["dicts/*.txt", "dicts/corpus/*.txt"]

[tool.setuptools.exclude-package-data]
"*" = [
    "*.pyc",
    "*.pyo",
    "*.pyd",
    "__pycache__",
    "tests/*",
    ".github/*",
    ".coverage",
    "htmlcov/*",
    ".pytest_cache/*",
    ".mypy_cache/*",
    "build/*",
    "dist/*",
    "*.egg-info",
    "Makefile",
]

[tool.ruff]
line-length = 79  # Pep-8 limit

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    "PL", # pylint rules
    "D",  # pydocstyle rules
]
ignore = [
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # Multi-line docstring summary should start at the second line (conflicts with D212)
]

exclude = [
    "venv/*",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20
quote-style = "double"
line-ending = "auto"

[project.optional-dependencies]
dev = [
    "coverage>=7.8.0",        # Test coverage measurement and reporting
    "build>=1.2.2",           # PEP 517 compliant package building
    "packaging>=24.2",        # Core utilities for Python packages
    "pyproject_hooks>=1.2.0", # Build backend hook implementations
    "setuptools>=78.1.1",     # Package building and distribution tools
    "sphinx>=8.2.3",          # Documentation generation system
    "myst-parser>=4.0.1",     # Markdown support for Sphinx docs
    "sphinx_rtd_theme",       # Read the Docs theme for Sphinx
    "pre-commit>=4.2.0",      # Git pre-commit hooks framework
    "ruff>=0.11.13",          # Fast Python linter and formatter
    "parameterized>=0.9.0",   # Parameterized test case generation
    "openai>=1.83.0",         # For testing with OpenAI-compatible providers
    "twine>=6.1.0",           # Package uploading to PyPI
]
