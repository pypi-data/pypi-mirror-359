[build-system]
requires = ["setuptools>=75", "wheel", "plux>=1.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "localstack-extension-event-studio"
description = "LocalStack Extension: eventstudio"
#dynamic = ["version"]
version = "0.1.6"
readme = {file = "README.md", content-type = "text/markdown; charset=UTF-8"}
requires-python = ">=3.11"
license = {text = "UNLICENSED"}
authors = [
    { name = "Maximilian Hoheiser", email = "max.hoheiser@gmail.com" }
]
keywords = ["localstack", "localstack-extension", "extension"]
classifiers = []

dependencies = [
    "rolo",
    "boto3",
    "sqlalchemy",
    "jinja2",
    "pydantic",
    "python-dotenv"
]

[project.optional-dependencies]
test = [
    "localstack-core>=3.3",
    "localstack-ext>=3.3",
    "aws-cdk-lib",
    "ruff",
    "pytest",
    "pytest_httpserver",
    "Events",
    "aws_json_term_matcher",
    "pytest-mock"
]

dev = [
    "localstack-extension-event-studio[test]",
    "airspeed-ext",
    "amazon.ion",
    "amazon_kclpy",
    "apispec",
    "aws-encryption-sdk",
    "aws-sam-translator",
    "awscli",
    "awscrt",
    "avro",
    "crontab",
    "boto3",
    "botocore",
    "cbor2",
    "dirtyjson",
    "dnspython",
    "distro",
    "docker",
    "docker-registry-client",
    "dulwich",
    "graphql-core",
    "hypercorn",
    "janus",
    "JPype1",
    "json5",
    "jsonpatch",
    "jsonpath-ng",
    "jsonpath-rw",
    "Js2Py",
    "kafka-python",
    "kubernetes",
    "libvirt-python",
    "localstack-core",
    "localstack-twisted",
    "localstack_snapshot",
    "moto-ext[all]",
    "mysql-replication",
    "opensearch-py",
    "openapi_core",
    "paho-mqtt",
    "parquet",
    "parse",
    "pg8000",
    "postgres",
    "postgresql-proxy",
    "pproxy-ext",
    "presto-python-client",
    "pycdlib",
    "pyftpdlib",
    "pyhive",
    "pyion2json",
    "PyJWT",
    "pymongo",
    "pymysql",
    "pyopenssl",
    "pyqldb",
    "python-snappy",
    "readerwriterlock",
    "redis",
    "requests-aws4auth",
    "rolo",
    "rsa",
    "service_identity",
    "sqlglot",
    "sql-metadata",
    "srp-ext",
    "testing.common.database",
    "thrift",
    "thrift_sasl",
    "tornado",
    "urllib3",
    "warrant-ext",
    "websockets",
    "Werkzeug",
    "Whoosh",
    "xmltodict",
    "antlr4-python3-runtime",
    "cryptography",
    "localstack-obfuscator>=0.3.0",
    "python_minifier",
    "pyaes",
    "python-dxf"
]

#[tool.setuptools_scm]
#version_file = "backend/eventstudio/version.py"
## pypi does not support local versions:
## https://setuptools-scm.readthedocs.io/en/latest/usage/#default-versioning-scheme
#local_scheme = "no-local-version"
#tag_regex = "^v(?P<version>.*)$"
#search_parent_directories = "true"

[project.urls]
Homepage = "https://github.com/localstack/localstack-extension-event-studio"

[project.entry-points."localstack.extensions"]
eventstudio = "eventstudio.extension:MyExtension"

[tool.setuptools]
package-dir = {"" = "backend"}

[tool.setuptools.packages.find]
where = ["backend", "tests"]

[tool.setuptools.package-data]
"eventstudio" = ["static/*"]

[tool.ruff]
# Always generate Python 3.11-compatible code.
target-version = "py311"
line-length = 100
src = ["backend", "tests"]
exclude = [
    ".venv*",
    "venv*",
    "dist",
    "build",
    "target",
    "*.egg-info",
    ".git",
    ]

[tool.ruff.lint]
ignore = [
    "B007",
    "B017",
    "B019",
    "B022",
    "B023",
    "B024",
    "B027",
    "B904",
    "C408",
    "C416",
    "C901",
    "E402",
    "E501",
    "E721",
    "T201",
    "T203"
]
select = ["B", "C", "E", "F", "I", "W", "T", "B9"]
