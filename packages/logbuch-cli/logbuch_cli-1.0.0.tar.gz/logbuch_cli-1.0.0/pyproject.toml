[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "logbuch-cli"
version = "1.0.0"
authors = [
    {name = "Logbuch Contributors", email = "logbuch@example.com"},
]
description = "The Ultimate AI-Powered CLI Productivity Platform"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Utilities",
    "Environment :: Console",
]
keywords = [
    "productivity", "cli", "task-management", "ai", "gamification",
    "terminal", "productivity-tools", "time-tracking", "journal",
    "mood-tracking", "ascii-art", "commuter", "weather", "coaching"
]
dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "python-dateutil>=2.8.0",
    "pydantic>=1.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
integrations = [
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
]
ai = [
    "openai>=0.27.0",
    "anthropic>=0.3.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/logbuch"
Documentation = "https://github.com/yourusername/logbuch/docs"
Repository = "https://github.com/yourusername/logbuch"
"Bug Tracker" = "https://github.com/yourusername/logbuch/issues"
Changelog = "https://github.com/yourusername/logbuch/blob/main/CHANGELOG.md"

[project.scripts]
logbuch = "logbuch.cli:main"
lb = "logbuch.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["logbuch*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
logbuch = ["data/*.json", "templates/*.txt", "assets/*.png"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["logbuch"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["logbuch"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rich.*",
    "click.*",
    "requests.*",
    "aiohttp.*",
]
ignore_missing_imports = true
