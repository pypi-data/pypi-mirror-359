[build-system]
requires = ['setuptools>=60', 'setuptools_scm>=8.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'mccode-plumber'
dependencies = [
    'p4p',
    'kafka-python>=2.2.11',
    'ess-streaming-data-types>=0.14.0',
    'restage>=0.8.2',
    'mccode-to-kafka>=0.2.2',
    'moreniius>=0.5.1',
    'icecream',
    'ephemeral-port-reserve',
]
readme = "README.md"
authors = [
    { name = "Gregory Tucker", email = "gregory.tucker@ess.eu" },
]
classifiers = [
    "License :: OSI Approved :: BSD License",
]
dynamic = ['version']

[project.scripts]
mp-splitrun = 'mccode_plumber.splitrun:main'
mp-epics = 'mccode_plumber.epics:run'
mp-epics-strings = 'mccode_plumber.epics:run_strings'
mp-epics-update = 'mccode_plumber.epics:update'
mp-forwarder-setup = 'mccode_plumber.forwarder:setup'
mp-forwarder-teardown = 'mccode_plumber.forwarder:teardown'
mp-writer-from = 'mccode_plumber.writer:print_time'
mp-writer-write = 'mccode_plumber.writer:start_writer'
mp-writer-wait = 'mccode_plumber.writer:wait_on_writer'
mp-writer-list = 'mccode_plumber.writer:list_status'
mp-writer-kill = 'mccode_plumber.writer:kill_job'
mp-writer-killall = 'mccode_plumber.writer:kill_all'
mp-register-topics = 'mccode_plumber.kafka:register_topics'
mp-insert-hdf5-instr = 'mccode_plumber.mccode:insert'
mp-nexus-splitrun = 'mccode_plumber.manage.orchestrate:main'
mp-nexus-services = 'mccode_plumber.manage.orchestrate:services'

[tool.setuptools_scm]

