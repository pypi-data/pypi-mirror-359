{% set pd = plugin_data['doc'] %}
# {{ plugin_name }}

!!! note "Collection Note"
    This module is part of the [{{ fqcn }} collection](https://galaxy.ansible.com/{{ fqcn | replace(".", "/") }}). To install the collection, use:

    ```
    ansible-galaxy collection install {{ fqcn }}
    ```
    {% if pd['version_added'] is defined and pd['version_added'] is not none %}
    Added in version `{{ pd['version_added'] }}`.
    {% endif %}

    {% if pd['requirements'] is defined and pd['requirements'] is not none %}
    You need further requirements to be able to use this module, see the [Requirements](#requirements) section for details.
    {% endif %}

## Synopsis
{% set plugin_description = [pd['description']] if pd['description'] is string else pd['description'] %}
{% for desc_item in plugin_description %}
- {{ desc_item}}
{% endfor %}

{% if pd['requirements'] is defined and pd['requirements'] is not none %}
## Requirements

The following Python packages are needed on the host that executes this module:

{% for req in pd['requirements'] %}
- [{{ req }}](https://pypi.org/project/{{ req }}/)
{% endfor %}
{% endif %}

{% if pd['options'] is defined and pd['options'] is not none %}
## Parameters

<table>
  <thead>
  <tr>
  <th>Parameter</th>
  <th>Defaults / Choices</th>
  <th>Comments</th>
  </tr>
  </thead>
<tbody>
{% for param_name, param_values in pd['options'].items() %}
<tr>
<td><strong>{{ param_name }}</strong>
  {%- if param_values['type'] %}<br>{{ param_values['type'] }}
    {%- if param_values['elements'] %} / elements={{ param_values['elements'] }}{% endif %}
  {%- endif %}
  {%- if param_values['required'] %}<br><em>required</em>{% endif %}
</td>
<td>
{%- if param_values['default'] %}<strong>Default</strong>: {{ param_values['default'] }}<br>{% endif %}
  {%- if param_values['choices'] %}<strong>Choices</strong>: {{ param_values['choices'] | join(', ') }}{% endif %}
</td>
<td>
{{- param_values['description'] if param_values['description'] is string else param_values['description'] | join('<br>') }}
  {%- for env_var in param_values['env'] %}<br>Env: {{ env_var['name'] }}{% endfor %}
  {%- if param_values['version_added'] is defined %}<br>{{ 'Version Added: ' ~ param_values['version_added'] }}{% endif %}
</td>
</tr>
{% if param_values['suboptions'] %}
  {% for subopt_name, subopt_values in param_values['suboptions'].items() %}
  <tr>
    <td>
    {{ param_name }}.<strong>{{ subopt_name }}</strong>
    </td>
    <td>
    {%- if subopt_values['default'] %}<strong>Default</strong>: {{ subopt_values['default'] }}<br>{% endif %}
    {%- if subopt_values['choices'] %}<strong>Choices</strong>: {{ subopt_values['choices'] | join(', ') }}{% endif %}
    </td>
    <td>
    {{- subopt_values['description'] if subopt_values['description'] is string else subopt_values['description'] | join('<br>') }}
    </td>
  </tr>
  {% endfor %}
{% endif %}
{% endfor %}
{% endif %}
</tbody>
</table>

{% if pd['notes'] is defined and pd['notes'] is not none %}
## Notes

!!! note "Note"
{% for note in pd['notes'] %}
    - {{ note }}
{% endfor %}
{% endif %}

{% if plugin_data['examples'] is defined and plugin_data['examples'] is not none %}
## Examples

```yaml
{{ plugin_data['examples'] }}
```
{% endif %}

{% if plugin_data['return'] is defined and plugin_data['return'] is not none %}
## Return Values

| Key | Data Type | Description | Returned |
| --- | --------- | ----------- | -------- |
{% for key, values in plugin_data['return'].items() %}
| {{ key }} | {{ values['type'] }} |
{{- values['description'] if values['description'] is string else values['description'] | join(' ') }} |
{{- values['returned'] }} |
{% endfor %}
{% endif %}

{% if pd['author'] is defined and pd['author'] is not none %}
## Authors

{% if pd['author'] is string %}
- {{ pd['author'] | title }}
{% else %}
{% for author in pd['author'] %}
- {{ author | title }}
{% endfor %}
{% endif %}
{% endif %}
