[build-system]
requires = ["setuptools>=77.0.3", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nekoconf"
version = "1.2.1"
description = "NekoConf - A cute configuration manager for your JSON and YAML configuration files"
readme = "README.md"
requires-python = ">=3.10"

license = "MIT"
license-files = ["LICENSE"]

authors = [
    {name = "Nya Foundation Team (k3scat)", email = "k3scat@github.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

# Core dependencies only - minimal install
dependencies = [
    "pyyaml>=6.0",
    "colorlog>=6.0.0",
    "tomli>=2.0.0",
    "tomli-w>=1.0.0",
]

[project.optional-dependencies]
# Server components - web API and UI
server = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "websockets>=10.0",
]

# Remote configuration client
remote = [
    "requests>=2.31.0",
    "websocket-client>=1.8.0",
]

# Schema validation
schema = [
    "jsonschema>=4.0.0",
    "rfc3987>=1.3.8",
]

# All features
all = [
    "nekoconf[server,remote,schema]",
]

# Development tools
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.27.0",
    "nekoconf[all]",
]

lint = [
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
]

[project.urls]
"Homepage" = "https://github.com/nya-foundation/nekoconf"
"Bug Tracker" = "https://github.com/nya-foundation/nekoconf/issues"

[project.scripts]
nekoconf = "nekoconf.cli.main:main_cli"  # Updated script path

[tool.setuptools]
package-dir = {"" = "."}  # Use current directory as source root
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]  # Root directory for discovery
include = ["nekoconf*"] # Include nekoconf and its subpackages

[tool.setuptools.package-data]
"nekoconf" = ["server/html/**/*"] # Updated static files path

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "__pycache__/*"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=nekoconf --cov-report=term-missing"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["nekoconf"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]


[tool.semantic_release]
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["nekoconf/_version.py:__version__"]
build_command = "python -m pip install build && python -m build"
commit_parser = "conventional"
commit_message = "chore(release): bump version to v{version} [skip ci]"
commit_author = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
