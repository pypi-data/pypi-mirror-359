Metadata-Version: 2.4
Name: orion_browser
Version: 0.6.0
Summary: 浏览器代理服务器
Home-page: https://github.com/bantouyan/orion
Author: BTY Team
Author-email: qianhai@bantouyan.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: aiohappyeyeballs==2.4.8
Requires-Dist: aiohttp==3.11.18
Requires-Dist: aiosignal==1.3.2
Requires-Dist: annotated-types==0.7.0
Requires-Dist: anthropic==0.49.0
Requires-Dist: anyio==4.8.0
Requires-Dist: argparse==1.4.0
Requires-Dist: attrs==25.1.0
Requires-Dist: babel==2.17.0
Requires-Dist: backoff==2.2.1
Requires-Dist: bashlex==0.18
Requires-Dist: beautifulsoup4==4.13.3
Requires-Dist: boto3==1.37.6
Requires-Dist: botocore==1.37.6
Requires-Dist: cachetools==5.5.2
Requires-Dist: certifi==2025.1.31
Requires-Dist: charset-normalizer==3.4.1
Requires-Dist: click==8.1.8
Requires-Dist: courlan==1.3.2
Requires-Dist: dateparser==1.2.1
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: defusedxml==0.7.1
Requires-Dist: Deprecated==1.2.18
Requires-Dist: distro==1.9.0
Requires-Dist: fastapi==0.115.11
Requires-Dist: filetype==1.2.0
Requires-Dist: fireworks-ai==0.15.12
Requires-Dist: frozenlist==1.5.0
Requires-Dist: google-ai-generativelanguage==0.6.15
Requires-Dist: google-api-core==2.24.1
Requires-Dist: google-api-python-client==2.162.0
Requires-Dist: googleapis-common-protos==1.69.0
Requires-Dist: google-auth==2.38.0
Requires-Dist: google-auth-httplib2==0.2.0
Requires-Dist: google-generativeai==0.8.4
Requires-Dist: greenlet==3.1.1
Requires-Dist: grpcio==1.67.1
Requires-Dist: grpcio-status==1.67.1
Requires-Dist: h11==0.14.0
Requires-Dist: html2text==2024.2.26
Requires-Dist: htmldate==1.9.3
Requires-Dist: httpcore==1.0.7
Requires-Dist: httplib2==0.22.0
Requires-Dist: httpx==0.28.1
Requires-Dist: httpx-sse==0.4.0
Requires-Dist: httpx-ws==0.7.1
Requires-Dist: idna==3.10
Requires-Dist: importlib-metadata==8.5.0
Requires-Dist: jiter==0.8.2
Requires-Dist: jmespath==1.0.1
Requires-Dist: jsonpatch==1.33
Requires-Dist: jsonpointer==3.0.0
Requires-Dist: justext==3.0.2
Requires-Dist: langchain==0.3.14
Requires-Dist: langchain_anthropic==0.3.3
Requires-Dist: langchain_aws==0.2.15
Requires-Dist: langchain_core==0.3.41
Requires-Dist: langchain_fireworks==0.2.7
Requires-Dist: langchain_google_genai==2.0.8
Requires-Dist: langchain_ollama==0.2.2
Requires-Dist: langchain_openai==0.3.1
Requires-Dist: langchain_text_splitters==0.3.6
Requires-Dist: langsmith==0.2.11
Requires-Dist: lmnr==0.4.62
Requires-Dist: lxml==5.3.1
Requires-Dist: MainContentExtractor==0.0.4
Requires-Dist: markdownify==0.14.1
Requires-Dist: monotonic==1.6
Requires-Dist: multidict==6.1.0
Requires-Dist: numpy==1.26.4
Requires-Dist: ollama==0.4.7
Requires-Dist: openai==1.65.3
Requires-Dist: opentelemetry-api==1.30.0
Requires-Dist: opentelemetry-exporter-otlp-proto-common==1.30.0
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc==1.30.0
Requires-Dist: opentelemetry-exporter-otlp-proto-http==1.30.0
Requires-Dist: opentelemetry-instrumentation==0.51b0
Requires-Dist: opentelemetry-instrumentation-langchain==0.38.10
Requires-Dist: opentelemetry-instrumentation-requests==0.51b0
Requires-Dist: opentelemetry-instrumentation-sqlalchemy==0.51b0
Requires-Dist: opentelemetry-instrumentation-threading==0.51b0
Requires-Dist: opentelemetry-instrumentation-urllib3==0.51b0
Requires-Dist: opentelemetry-proto==1.30.0
Requires-Dist: opentelemetry-sdk==1.30.0
Requires-Dist: opentelemetry-semantic-conventions==0.51b0
Requires-Dist: opentelemetry-semantic-conventions-ai==0.4.3
Requires-Dist: opentelemetry-util-http==0.51b0
Requires-Dist: orjson==3.10.15
Requires-Dist: packaging==24.2
Requires-Dist: pexpect==4.9.0
Requires-Dist: pillow==11.1.0
Requires-Dist: playwright==1.50.0
Requires-Dist: posthog==3.18.1
Requires-Dist: propcache==0.3.0
Requires-Dist: protobuf==5.29.3
Requires-Dist: proto-plus==1.26.0
Requires-Dist: ptyprocess==0.7.0
Requires-Dist: pyasn1==0.6.1
Requires-Dist: pyasn1-modules==0.4.1
Requires-Dist: pydantic==2.10.6
Requires-Dist: pydantic-core==2.27.2
Requires-Dist: pyee==12.1.1
Requires-Dist: pyparsing==3.2.1
Requires-Dist: python-dotenv==1.0.1
Requires-Dist: pytz==2025.1
Requires-Dist: PyYAML==6.0.2
Requires-Dist: regex==2024.11.6
Requires-Dist: requests==2.32.3
Requires-Dist: requests-toolbelt==1.0.0
Requires-Dist: rsa==4.9
Requires-Dist: s3transfer==0.11.4
Requires-Dist: six==1.17.0
Requires-Dist: sniffio==1.3.1
Requires-Dist: soupsieve==2.6
Requires-Dist: SQLAlchemy==2.0.38
Requires-Dist: starlette==0.46.0
Requires-Dist: tenacity==9.0.0
Requires-Dist: tiktoken==0.9.0
Requires-Dist: tld==0.13
Requires-Dist: tqdm==4.67.1
Requires-Dist: trafilatura==2.0.0
Requires-Dist: typing-extensions==4.12.2
Requires-Dist: tzlocal==5.3
Requires-Dist: uritemplate==4.1.1
Requires-Dist: urllib3==2.3.0
Requires-Dist: uvicorn==0.34.0
Requires-Dist: websockets==15.0
Requires-Dist: wrapt==1.17.2
Requires-Dist: wsproto==1.2.0
Requires-Dist: yarl==1.18.3
Requires-Dist: zipp==3.21.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Orion Sandbox

Orion是一个提供终端模拟器和浏览器代理功能的服务器。它可以作为独立服务运行，也可以作为Python包导入使用。

```

## 使用方法

### 作为服务使用

#### 方法1: 使用命令行工具

安装后，可以直接使用命令行工具启动服务：

```bash
# 使用默认配置启动
orion-server

# 指定端口和日志级别
orion-server --port 8888 --log-level debug

# 开发模式（自动重载）
orion-server --reload
```

#### 方法2: 使用Python脚本启动

```bash
python start_server.py --port 8330
```

### 作为库导入使用

可以将Orion作为Python库导入使用，示例代码：

```python
import asyncio
from app import BrowserManager, terminal_manager, text_editor

# 初始化浏览器管理器
async def browser_example():
    browser = BrowserManager(headless=False)
    await browser.initialize()
    # 执行浏览器操作...
    await browser.close()

# 使用终端管理器
async def terminal_example():
    terminal = await terminal_manager.create_or_get_terminal("my_terminal")
    await terminal.execute_command("ls -la")
    history = terminal.get_history(True, True)
    # 处理终端输出...

# 运行示例
asyncio.run(browser_example())
```

更多示例请参考 `examples/use_as_package.py`。

## Docker部署

```bash
# 构建容器
docker build -t orion-server .

# 运行容器
docker run -p 8330:8330 orion-server
```

## API文档

启动服务后，访问 `http://localhost:8330/docs` 查看API文档。

## 许可证

MIT
