[build-system]
requires = [
    "maturin>=1.0,<2.0",
    "patchelf>=0.17.2.2 ; sys_platform == 'linux'",
]
build-backend = "maturin"

[project]
name = "piicleaner"
description = "Fast PII detection and cleaning for text data with Polars integration"
authors = [{name = "Hamed Bastan-Hagh", email = "hamed@bastanhagh.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = []
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Security",
]

[project.urls]
Homepage = "https://github.com/hamedbh/piicleaner"
Repository = "https://github.com/hamedbh/piicleaner"
Issues = "https://github.com/hamedbh/piicleaner/issues"

[project.optional-dependencies]
polars = [
    "polars>=1.0.0",
]
pandas = [
    "pandas>=2.3.0",
]

[dependency-groups]
dev = [
    "furo>=2024.8.6",
    "linkify-it-py>=2.0.3",
    "maturin>=1.8.6",
    "myst-parser>=4.0.1",
    "pandas>=2.3.0",
    "patchelf>=0.17.2.2 ; sys_platform == 'linux'",
    "polars>=1.0.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-benchmark>=5.1.0",
    "ruff>=0.11.12",
    "sphinx>=8.1.3",
]
docs = [
    "furo>=2024.8.6",
    "linkify-it-py>=2.0.3",
    "maturin>=1.8.6",
    "myst-parser>=4.0.1",
    "sphinx>=8.1.3",
]

[tool.maturin]
python-source = "python"
module-name = "piicleaner._internal"

[tool.ruff]
line-length = 80
indent-width = 4

[tool.ruff.lint]
# The default set of rules is "E4", "E7", "E9", "F"
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-single-line = false
combine-as-imports = true

[tool.pytest.ini_options]
markers = [
    "performance: marks tests as performance tests",
]

