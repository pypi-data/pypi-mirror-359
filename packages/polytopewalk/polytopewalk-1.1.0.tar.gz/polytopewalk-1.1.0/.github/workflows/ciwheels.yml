name: Build CI wheels

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Triggers on tag pushes that match the pattern (e.g., v1.0.0, v2.0.1, etc.)
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }} on cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Window 64 bit
          - os: windows-latest
            python: 39
            platform_id: win_amd64
          - os: windows-latest
            python: 310
            platform_id: win_amd64
          - os: windows-latest
            python: 311
            platform_id: win_amd64
          - os: windows-latest
            python: 312
            platform_id: win_amd64
          - os: windows-latest
            python: 313
            platform_id: win_amd64

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 312
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 313
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
  
          # MacOS macos-12 x86_64 is deprecated
          # Macos macos-13 x86_64
          - os: macos-13
            python: 39
            platform_id: macosx_x86_64
            deployment_target: "13"
          - os: macos-13
            python: 310
            platform_id: macosx_x86_64
            deployment_target: "13"
          - os: macos-13
            python: 311
            platform_id: macosx_x86_64
            deployment_target: "13"
          - os: macos-13
            python: 312
            platform_id: macosx_x86_64
            deployment_target: "13"
          - os: macos-13
            python: 313
            platform_id: macosx_x86_64
            deployment_target: "13"
          # MacOS macos-14 arm64
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
            deployment_target: "14"
          - os: macos-latest
            python: 310
            platform_id: macosx_arm64
            deployment_target: "14"
          - os: macos-latest
            python: 311
            platform_id: macosx_arm64
            deployment_target: "14"
          - os: macos-latest
            python: 312
            platform_id: macosx_arm64
            deployment_target: "14"
          - os: macos-latest
            python: 313
            platform_id: macosx_arm64
            deployment_target: "14"
       
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install packages (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          curl -owinglpk-4.65.zip -L --insecure https://jaist.dl.sourceforge.net/project/winglpk/winglpk/GLPK-4.65/winglpk-4.65.zip
          7z x winglpk-4.65.zip
          cp glpk-4.65/w64/glpk_4_65.lib glpk-4.65/w64/glpk.lib
          mkdir lib
          cp glpk-4.65/w64/glpk_4_65.dll lib/glpk_4_65.dll
          echo GLPK_LIB_DIR=${GITHUB_WORKSPACE}\\glpk-4.65\\w64 >> $GITHUB_ENV
          echo GLPK_INCLUDE_DIR=${GITHUB_WORKSPACE}\\glpk-4.65\\src >> $GITHUB_ENV
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          # Skip 32-bit builds and musllinux
          CIBW_SKIP: "*-win32 *-manylinux_i686 *musllinux*"
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          BUILD_DOCS: "OFF"
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.deployment_target }}
          CIBW_BEFORE_ALL_MACOS: |
            brew install eigen glpk
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y epel-release eigen3-devel glpk-devel
          CIBW_BEFORE_ALL_WINDOWS: >
            echo "OK starts Windows build" &&
            choco install eigen -y
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path \"glpk-4.65/w64/\" -w {dest_dir} {wheel}"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: '{package}/pyproject.toml'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-cp${{ matrix.python }}-${{ matrix.platform_id }}
          path: ./wheelhouse/*.whl

  publish-to-pypi:
    name: >- 
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish on tag pushes
    needs:
    - build_wheels
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/polytopewalk

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the wheels
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: >- 
      Publish Python 🐍 distribution 📦 to TestPyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish on tag pushes
    needs:
    - build_wheels
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/polytopewalk

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the wheels
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
