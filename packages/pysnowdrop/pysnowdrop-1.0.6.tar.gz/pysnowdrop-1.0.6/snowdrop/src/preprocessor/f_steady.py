from numba import njit
    
@njit
def f_steady(x,p,exog=[0]):
    
    ### This code was generated by Python.
    ### Monetary policy model example
    
    from sympy import DiracDelta
    from snowdrop.src.preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif
    from snowdrop.src.preprocessor.functions import Heaviside

    import numpy as np
    from numpy import log,exp,sin,cos,tan,sqrt,sign
    from numpy import maximum as Max, minimum as Min, abs as Abs
    
    # Initialize variables
    PDOT__ = x[0]
    RR__ = x[1]
    RS__ = x[2]
    Y__ = x[3]
    ey__ = x[4]
    err__ = x[5]
    ers__ = x[6]
    epdot__ = x[7]


    # Set parameters
    g = p[0]
    p_pdot1 = p[1]
    p_pdot2 = p[2]
    p_pdot3 = p[3]
    p_rs1 = p[4]
    p_y1 = p[5]
    p_y2 = p[6]
    p_y3 = p[7]

    # Set exogenous variables
    exo__ = exog[0]

    # Function:

    function = list()
    function.append(PDOT__ - (epdot__ + PDOT__*p_pdot1 + PDOT__*(1 - p_pdot1) + (-g + g**2/(-Y__ + g))*p_pdot2 + (-g + g**2/(-Y__ + g))*p_pdot3))
    function.append(RR__ - (RS__ + err__ - PDOT__*p_pdot1 - PDOT__*(1 - p_pdot1)))
    function.append(RS__ - (Y__ + ers__ + exo__ + p_rs1*PDOT__))
    function.append(Y__ - (ey__ + Y__*p_y1 - p_y2*RR__ - p_y3*RR__))

    return np.array(function)
