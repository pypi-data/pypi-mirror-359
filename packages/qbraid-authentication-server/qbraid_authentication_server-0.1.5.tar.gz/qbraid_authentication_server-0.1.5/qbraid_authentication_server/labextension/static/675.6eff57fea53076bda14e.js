"use strict";(self.webpackChunk_qbraid_authentication_server=self.webpackChunk_qbraid_authentication_server||[]).push([[675],{675:(e,t,r)=>{r.r(t),r.d(t,{default:()=>c});var o=r(237),n=r.n(o),i=r(708),a=r(955);const s=new(n()),c={id:"@qbraid/authentication-server:plugin",description:"A JupyterLab extension. used to get the user credentials from qbraidrc file, with the support of qbraid-core module.",autoStart:!0,activate:async e=>{console.log("JupyterLab extension @qbraid/authentication-server is activated!");try{const e=s.get("EMAIL"),t=s.get("REFRESH");e&&t?(await async function(e="",t={}){const r=a.ServerConnection.makeSettings(),o=i.URLExt.join(r.baseUrl,"qbraid-authentication-server",e);let n;try{n=await a.ServerConnection.makeRequest(o,t,r)}catch(e){throw new a.ServerConnection.NetworkError(e)}let s=await n.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",n)}if(!n.ok)throw new a.ServerConnection.ResponseError(n,s.message||s);return s}("qbraid-config",{method:"POST",body:JSON.stringify({email:e,refreshToken:t})}),console.log("qBraid configuration successfully set from cookies.")):console.warn("qBraid configuration not set: EMAIL or REFRESH token not found in cookies.")}catch(e){console.error("Error activating @qbraid/authentication-server extension:",e)}}}}}]);