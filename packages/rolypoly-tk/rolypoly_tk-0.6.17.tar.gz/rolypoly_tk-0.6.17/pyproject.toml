[project]
name = "rolypoly_tk"
dynamic = ["version"]
authors = [
    { name = "Uri Neri", email = "uneri@lbl.gov" },
    { name = "Simon Roux", email = "sroux@lbl.gov" },
    { name = "Brian Bushnell", email = "bbushnell@lbl.gov" },
    { name = "Antonio Camargo", email = "antoniop.camargo@lbl.gov" },
    { name = "Andrei Stecca Steindorff", email = "andreiss@jgi.doe.gov" },
    { name = "Clement Coclet", email = "cclement@jgi.doe.gov" },
    { name = "David Parker", email = "dparker@carnegiescience.edu" },
    { name = "Dimitris Karapliafis", email = "dimitris.karapliafis@atwur.nl" },
]
description = "RNA virus analysis toolkit"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
# License-File = "license"
dependencies = [
     "bbmapy>=0.0.46,<0.0.47",
     "genomicranges>=0.6.3,<0.7", "iranges>=0.5.1,<0.6", "lightmotif>=0.10.0,<0.11", "mappy>=2.30,<3", "needletail>=0.7.0,<0.8", "polars>=1.31.0,<2", "psutil>=7.0.0,<8", "pyfastx>=2.2.0,<3", "pyhmmer>=0.11.1,<0.12", "pyrodigal-gv>=0.3.2,<0.4", "requests>=2.32.4,<3", "rich-click>=1.8.9,<2", "rich>=14.0.0,<15", "viennarna>=2.7.0,<3", "intervaltree>=3.1.0,<4",
]

[project.urls]
Source = "https://code.jgi.doe.gov/rolypoly/rolypoly"
Documentation = "https://pages.jgi.doe.gov/rolypoly/docs/"
pypi = "https://pypi.org/project/rolypoly-bio/"

[project.scripts]
rolypoly = "rolypoly.rolypoly:rolypoly"

[dependency-groups]
build = ["hatch >=1.14.0,<2", "pip >=25.0.1,<26"]
format = ["ruff >=0.11.3,<0.12"]
publish = ["twine >=6.1.0,<7"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.version]
path = "src/rolypoly/__init__.py"

[tool.hatch.build]
packages = ["src/rolypoly"]

[tool.hatch.build.targets.wheel]
packages = ["src/rolypoly"]
package-dir = {rolypoly_tk = "src/rolypoly"}

[tool.pixi.workspace]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"] 

[tool.pixi.pypi-dependencies]
rolypoly_tk = { path = ".", editable = true }

[tool.pixi.dependencies]
aragorn = ">=1.2.41,<2"
aria2 = ">=1.37.0,<2"
bowtie = ">=1.3.1,<2"
diamond = ">=2.1.12,<3"
linearfold = ">=1.0.1.dev20220829,<2"
megahit = ">=1.2.9,<2"
mmseqs2 = ">=17.b804f,<18"
ncbi-datasets-cli = ">=18.3.1,<19"
pigz = ">=2.8,<3"
plass = ">=5.cf8933,<6"
seqkit = ">=2.10.0,<3"
spades = ">=4.2.0,<5"
trnascan-se = ">=2.0.12,<3"
falco = ">=1.2.5,<2"
pip = ">=25.1.1,<26"
uv = ">=0.7.13,<0.8"
freebayes = ">=1.3.10,<2"

[tool.pixi.tasks]
gh-push = "src/setup/on_gh.sh push"
gh-pull = "src/setup/on_gh.sh pull"

[tool.pixi.feature.py39.dependencies]
python = "~=3.9.0"

[tool.pixi.environments]
default = { features = ["py39"] }
dev = { features = ["build", "format", "publish","test"] }

[tool.pixi.feature.format.tasks]
format = "ruff check --select I --fix src && ruff format src"

[tool.pixi.feature.publish.tasks]
publish-pypi = "twine upload dist/* --verbose" 

[tool.pixi.feature.build.tasks]
build-pypi = "hatch version micro && hatch build --clean"

[tool.pixi.feature.test.tasks]
test-import = "python -c 'import rolypoly; print(rolypoly.__version__)'"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
ignore = ["E501", "E402", "E401","PLC0415"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
line-ending = "auto"


[tool.basedpyright]
include = ["src", "src/rolypoly"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    ".pixi",
    "**/.*/",
]
ignore = ["src/rolypoly/tests",]
defineConstant = { DEBUG = false }
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportMissingParameterType = "none"
typeCheckingMode = "basic"
reportArgumentType = "none"
reportOptionalMemberAccess = "none"
reportReturnType = "none"