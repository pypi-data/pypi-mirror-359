name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write  # For trusted publishing

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # Configuration is in release-please-config.json
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          
      # Output the release info for debugging
      - name: Release Info
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "Release created: ${{ steps.release.outputs.release_created }}"
          echo "Tag name: ${{ steps.release.outputs.tag_name }}"
          echo "Version: ${{ steps.release.outputs.version }}"
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"

  publish:
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Build package
        run: uv build
      
      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          if [ -n "$UV_PUBLISH_TOKEN" ]; then
            uv publish --token $UV_PUBLISH_TOKEN
            echo "✅ Published to PyPI: https://pypi.org/project/rust-minidump-mcp/"
          else
            echo "⚠️  No PyPI token configured, skipping PyPI publish"
          fi
