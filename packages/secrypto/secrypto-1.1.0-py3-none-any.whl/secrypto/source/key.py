class Key:

    def __init__(self, alterations: int=3, seed: int=None) -> None:
        import random
        self.random = random.Random()
        self.seed = seed if seed else random.randint(0, 459922447758524356182925764587827621141488840828118402656326161300092550814154169410974551151741342344127012866971685861569595974258231770341461580733108476599183294829765249938892584810534737088865661242776026257499024746623501990701475686532591213816507116638257415067490833048892511487438018462822612226031207223486691239618719240627962833176749553105880797007673090769950644282266010558827324359739061868337774780664998803820496086793746446790416139656857790517179354882587563230448301576931681807946837454087273822384100046281757923576878974402809990538991955149303112724632964067174923170858605452280648238843045014075953316851794855420797216585372331492741614580466419054737493490833569210739066705209720832000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)

        self.random.seed(self.seed)

        self.number = alterations
        self.alterations = [
            '!', '"', '#', '$', '%', '&', "'", '(', 
            ')', '*', '+', ',', '-', '.', '/', '0', 
            '1', '2', '3', '4', '5', '6', '7', '8', 
            '9', ':', ';', '<', '=', '>', '?', '@', 
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 
            'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 
            'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 
            'Y', 'Z', '[', '\\', ']', '^', '_', '`', 
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 
            'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 
            'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 
            'y', 'z', '{', '|', '}', '~', 'À', 'Á', 
            'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 
            'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 
            'Ò', 'Ó', 'Ô', 'Õ', 'Ö', 'Ø', 'Ù', 'Ú', 
            'Û', 'Ü', 'Ý', 'Þ', 'ß', 'à', 'á', 'â', 
            'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 
            'ë', 'ì', 'í', 'î', 'ï', 'ð', 'ñ', 'ò', 
            'ó', 'ô', 'õ', 'ö', 'ø', 'ù', 'ú', 'û', 
            'ü', 'ý', 'þ', 'ÿ', 'Ā', 'ā', 'Ă', 'ă', 
            'Ą', 'ą', 'Ć', 'ć', 'Ĉ', 'ĉ', 'Ċ', 'ċ', 
            'Č', 'č', 'Ď', 'ď', 'Đ', 'đ', 'Ē', 'ē', 
            'Ĕ', 'ĕ', 'Ė', 'ė', 'Ę', 'ę', 'Ě', 'ě', 
            'Ĝ', 'ĝ', 'Ğ', 'ğ', 'Ġ', 'ġ', 'Ģ', 'ģ', 
            'Ĥ', 'ĥ', 'Ħ', 'ħ', 'Ĩ', 'ĩ', 'Ī', 'ī', 
            'Ĭ', 'ĭ', 'Į', 'į', 'İ', 'Ĳ', 'ĳ', 'Ĵ', 
            'ĵ', 'Ķ', 'ķ', 'ĸ', 'Ĺ', 'ĺ', 'Ļ', 'ļ', 
            'Ľ', 'ľ', 'Ŀ', 'ŀ', 'Ł', 'ł', 'Ń', 'ń', 
            'Ņ', 'ņ', 'Ň', 'ň', 'ŉ', 'Ŋ', 'ŋ', 'Ō', 
            'ō', 'Ŏ', 'ŏ', 'Ő', 'ő', 'Œ', 'œ', 'Ŕ', 
            'ŕ', 'Ŗ', 'ŗ', 'Ř', 'ř', 'Ś', 'ś', 'Ŝ', 
            'ŝ', 'Ş', 'ş', 'Š', 'š', 'Ţ', 'ţ', 'Ŧ', 
            'ŧ', 'Ũ', 'ũ', 'Ū', 'ū', 'Ŭ', 'ŭ', 'Ů', 
            'ů', 'Ű', 'ű', 'Ų', 'ų', 'Ŵ', 'ŵ', 'Ŷ', 
            'ŷ', 'Ÿ', 'Ź', 'ź', 'Ż', 'ż', 'Ž', 'ž', 
            'Ǎ', 'ǎ', 'Ǐ', 'ǐ', 'Ǒ', 'ǒ', 'Ǔ', 'ǔ', 
            'Ǖ', 'ǖ', 'Ǘ', 'ǘ', 'Ǚ', 'ǚ', 'Ǜ', 'ǜ', 
            'ɐ', 'ɒ', 'ɓ', 'ɔ', 'ɖ', 'ɗ', 'ɘ', 'ə', 
            'ɚ', 'ɛ', 'ɜ', 'ɝ', 'ɞ', 'ɟ', 'ɠ', 'ɤ', 
            'ɥ', 'ɦ', 'ɧ', 'ɨ', 'ɫ', 'ɬ', 'ɭ', 'ɮ', 
            'ɰ', 'ɱ', 'ɲ', 'ɳ', 'ɴ', 'ɵ', 'ɶ', 'ɷ', 
            'ɸ', 'ɹ', 'ɺ', 'ɻ', 'ɼ', 'ɽ', 'ɾ', 'ɿ', 
            'ʀ', 'ʁ', 'ʂ', 'ʃ', 'ʅ', 'ʈ', 'ʉ', 'ʊ', 
            'ʌ', 'ʍ', 'ʎ', 'ʐ', 'ʑ', 'ʒ', 'ʓ', 'ʕ', 
            'ʖ', 'ʘ', 'ʙ', 'ʚ', 'ʜ', 'ʝ', 'ʞ', 'ʟ', 
            'ʠ', 'ʡ', 'ʢ', 'ʣ', 'ʤ', 'ʦ', 'ʧ', 'ʨ', 
            'ʩ', 'ʪ', 'ʫ', 'ʬ', 'ʭ', 'ʯ', 'ṅ', 'Ṇ'
        ]
        self.random.shuffle(self.alterations)

        self.key = self.regenerate()

    def regenerate(self):

        key = {}

        characters = [
            '0', '1', '2', '3', '4', '5', '6', '7',    
            '8', '9', 'a', 'b', 'c', 'd', 'e', 'f',    
            'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',    
            'A', 'B', 'C', 'D', 'E', 'F', 'G', '¹',    
            '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹',  
            "o"
        ]
        temporary = self.alterations.copy()

        for char in characters:
            key[char] = []
            for _ in range(self.number):
                choice = self.random.choice(temporary)
                temporary.remove(choice)
                key[char].append(choice)

        self.key = key
        return key
    
    def __repr__(self) -> str:
        from pprint import pformat

        pretty = pformat(self.key, 4)
        return "{\n "+pretty[1:-1]+"\n}"
    
    def __str__(self) -> str:
        from pprint import pformat

        pretty = pformat(self.key, 4)
        return "{\n "+pretty[1:-1]+"\n}"