[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sensory_detector"
version = "0.2.4" 
description = "Async ML service and client for sensory detection"
authors = [{name = "m.chui, v.mitui, n.buchtui", email = "sensory@sensory.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT License" }
keywords = ["computer-vision", "machine-learning", "yolo", "ocr", "embeddings", "fastapi", "async"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]

dependencies = [
    "pydantic>=2.0.0",
    "numpy"
]

[project.optional-dependencies]
client = [
    "httpx>=0.25.0"
]
server = [
    "fastapi>=0.100.0",
    "flask",
    "uvicorn[standard]",
    "ultralytics",
    "opencv-python-headless", 
    "psutil",
    "av", 
    "torch", 
    "python-dotenv", 
    "python-multipart", 
    "cachetools",
    "open-clip-torch==2.29.0", 
    "pydantic-settings",
    "easyocr", 
    "gunicorn"
]
all = [
    "sensory_detector[client]",
    "sensory_detector[server]"
]
[project.scripts]
sensory-detector-server = "sensory_detector.yolo_server.main:app"
sensory-detector-server-gunicorn = "sensory_detector.yolo_server.main:run_gunicorn_server"

[tool.setuptools.packages.find]
where = ["src"] 