"""Diagnostic templates for pack2 command."""


def get_checked_template(
    timestamp: str,
    user: str,
    hostname: str,
    pwd: str,
    python_version: str,
    environment: str,
    os_system: str,
    os_release: str,
    os_version: str,
    machine: str,
    processor: str,
    cpu_cores: int | str,
    memory: dict,
    gpu: str
) -> str:
    """Generate content for checked.md diagnostic file.
    
    Args:
        timestamp: Current timestamp
        user: Username
        hostname: System hostname
        pwd: Current working directory
        python_version: Python version
        environment: Environment type (WSL2, macOS, etc.)
        os_system: Operating system
        os_release: OS release
        os_version: OS version (will be truncated)
        machine: Machine architecture
        processor: Processor info
        cpu_cores: Number of CPU cores
        memory: Memory information dict
        gpu: GPU information
        
    Returns:
        str: Content for checked.md file
    """
    # Truncate os_version for readability
    os_version_short = os_version[:80] + "..." if len(os_version) > 80 else os_version
    
    content = f"""# 系統診斷報告 - System Diagnostic Report

Generated by `soldcli pack2` at {timestamp}

## 基本資訊 Basic Information

- **使用者 User**: {user}
- **主機名稱 Hostname**: {hostname}
- **當前目錄 Current Directory**: {pwd}
- **Python 版本**: {python_version}

## 作業系統 Operating System

- **環境類型 Environment**: {environment}
- **系統 System**: {os_system}
- **版本 Release**: {os_release}
- **詳細版本 Version**: {os_version_short}

## 硬體資訊 Hardware Information

### CPU
- **架構 Architecture**: {machine}
- **處理器 Processor**: {processor}
- **核心數 Cores**: {cpu_cores}

### 記憶體 Memory
"""
    
    if 'total_gb' in memory:
        content += f"- **總容量 Total**: {memory['total_gb']} GB\n"
        if 'available_gb' in memory:
            content += f"- **可用容量 Available**: {memory['available_gb']} GB\n"
    else:
        content += f"- **狀態 Status**: {memory.get('status', 'Unknown')}\n"
    
    # Get Docker platform
    docker_platform = get_docker_platform(machine)
    
    content += f"""
### GPU
- **狀態 Status**: {gpu}

## Docker 相容性 Docker Compatibility

- **CPU 架構 Architecture**: {'✓ Compatible' if machine in ['x86_64', 'amd64', 'arm64', 'aarch64'] else '⚠ May need special handling'}
- **建議 Docker Platform**: `{docker_platform}`

## 注意事項 Notes

1. 此診斷報告用於快速了解系統環境
2. 某些資訊可能因權限限制無法取得
3. GPU 偵測依賴於系統工具 (nvidia-smi, lspci)

---
*Generated by [soldcli](https://pypi.org/project/soldcli/)*
"""
    
    return content


def get_diagnostic_readme_template() -> str:
    """Generate content for diagnostic project README.md file.
    
    Returns:
        str: Content for README.md file
    """
    return """# Diagnostic Project

This directory contains system diagnostic information generated by soldcli pack2.

## Files

- `checked.md` - Main system diagnostic report
- `README.md` - This file

## Usage

Review the diagnostic information to understand the system environment.
This is particularly useful for:
- Setting up development environments
- Troubleshooting system-specific issues
- Preparing for Docker deployments
- CI/CD environment validation

For more information, visit: https://pypi.org/project/soldcli/
"""


def get_docker_platform(machine: str) -> str:
    """Get Docker platform string based on machine architecture.
    
    Args:
        machine: Machine architecture string
        
    Returns:
        str: Docker platform string
    """
    platform_map = {
        'x86_64': 'linux/amd64',
        'amd64': 'linux/amd64',
        'arm64': 'linux/arm64',
        'aarch64': 'linux/arm64',
        'armv7l': 'linux/arm/v7',
        'armv6l': 'linux/arm/v6',
    }
    return platform_map.get(machine, 'unknown')