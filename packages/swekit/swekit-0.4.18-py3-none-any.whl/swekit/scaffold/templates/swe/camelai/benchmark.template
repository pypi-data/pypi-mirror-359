import argparse

from agent import composio_toolset, graph, agent

from swekit.benchmark.run_evaluation import evaluate
from swekit.config.store import IssueConfig

from composio_camel import Action
from prompts import DESCRIPTION
from camel.messages import BaseMessage
from camel.utils import print_text_animated
from colorama import Fore

def bench(workspace_id: str, issue_config: IssueConfig) -> str:
    """Run benchmark on the agent."""

    # Set the workspace for the tools to run.
    composio_toolset.set_workspace_id(workspace_id)
    
    # get the git tree
    git_tree_response = composio_toolset.execute_action(
        action=Action.FILETOOL_GIT_REPO_TREE,
        params={},
    )
    print("Result of git tree", git_tree_response)

    # kick off the crew on the issue.
    try:
        user_msg = BaseMessage.make_user_message(role_name="User", content=DESCRIPTION)
        final_state = agent.step(user_msg)
        for msg in final_state.msgs:
            print_text_animated(Fore.GREEN + f"Agent response:\n{msg.content}\n")
        return final_state
    except Exception as e:
        print(e)
        return "Error found"


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Run benchmark on the agent.",
    )
    group = parser.add_mutually_exclusive_group()
    group.add_argument(
        "--test-split",
        type=str,
        default="1:2",
        help="Test split ratio (e.g. 1:2, 1:300) Maximum 300 tests per project.",
    )
    group.add_argument(
        "--test-instance-ids",
        type=str,
        default="",
        help="Test instance ids (comma-separated)",
    )
    args = parser.parse_args()

    if args.test_instance_ids:
        test_instance_ids_list = [
            id.strip() for id in args.test_instance_ids.split(",")
        ]
        test_range = "1:300"
    else:
        test_instance_ids_list = []
        test_range = args.test_split

    evaluate(
        bench,
        dry_run=False,
        test_range=test_range,
        test_instance_ids=test_instance_ids_list,
        #image_name="composio/composio:latest", # if you are doing local dev
    )
