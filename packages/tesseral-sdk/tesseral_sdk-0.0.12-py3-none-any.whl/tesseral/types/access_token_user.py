# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AccessTokenUser(UniversalBaseModel):
    """
    Information in an Access Token about the logged-in User.
    """

    id: str = pydantic.Field()
    """
    The User's ID.
    """

    email: str = pydantic.Field()
    """
    The User's email.
    """

    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = (
        pydantic.Field(default=None)
    )
    """
    The User's full name.
    """

    profile_picture_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="profilePictureUrl")] = (
        pydantic.Field(default=None)
    )
    """
    A URL of the User's profile picture.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
