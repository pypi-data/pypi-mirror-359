# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .user_invite import UserInvite
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ListUserInvitesResponse(UniversalBaseModel):
    user_invites: typing_extensions.Annotated[
        typing.Optional[typing.List[UserInvite]], FieldMetadata(alias="userInvites")
    ] = pydantic.Field(default=None)
    """
    A list of User Invites.
    """

    next_page_token: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="nextPageToken")] = (
        pydantic.Field(default=None)
    )
    """
    The pagination token for the next page of results. Empty if there is no next page.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
