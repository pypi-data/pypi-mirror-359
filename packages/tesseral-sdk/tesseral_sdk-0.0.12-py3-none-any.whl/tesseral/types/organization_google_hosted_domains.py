# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class OrganizationGoogleHostedDomains(UniversalBaseModel):
    """
    OrganizationGoogleHostedDomains represents the Google Hosted Domains ("HDs")
     associated with an Organization.
    """

    organization_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="organizationId")] = (
        pydantic.Field(default=None)
    )
    """
    The ID of the Organization.
    """

    google_hosted_domains: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="googleHostedDomains")
    ] = pydantic.Field(default=None)
    """
    A list of Google-hosted domains associated with the organization.
    
     These values correspond to Google OAuth `hd` claims:
    
     https://developers.google.com/identity/openid-connect/openid-connect#obtainuserinfo
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
