# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UserRoleAssignment(UniversalBaseModel):
    """
    UserRoleAssignment represents a User being assigned to a Role.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The User Role Assignment ID. Starts with `user_role_assignment_...`.
    """

    user_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="userId")] = pydantic.Field(
        default=None
    )
    """
    The User ID.
    """

    role_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="roleId")] = pydantic.Field(
        default=None
    )
    """
    The Role ID.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
