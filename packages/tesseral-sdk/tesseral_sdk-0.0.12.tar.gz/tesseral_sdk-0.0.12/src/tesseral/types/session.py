# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Session(UniversalBaseModel):
    """
    Represents a Session for a logged-in User.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Session ID. Starts with `session_...`.
    """

    user_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="userId")] = pydantic.Field(
        default=None
    )
    """
    The User this Session belongs to.
    """

    revoked: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the Session is revoked.
    """

    create_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createTime")] = (
        pydantic.Field(default=None)
    )
    """
    When the Session was created.
    """

    last_active_time: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="lastActiveTime")
    ] = pydantic.Field(default=None)
    """
    When the Session was last active.
    """

    expire_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="expireTime")] = (
        pydantic.Field(default=None)
    )
    """
    When the Session expires.
    """

    primary_auth_factor: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="primaryAuthFactor")] = (
        pydantic.Field(default=None)
    )
    """
    The primary authentication factor the end user used to log in.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
