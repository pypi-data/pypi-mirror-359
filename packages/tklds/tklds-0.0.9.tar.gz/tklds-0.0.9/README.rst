tklds
=================

In this repository, we present the 'tkrg-a-ap5' direction numbers for generating Sobol sequences satisfying properties
A and A' as well as a comprehensive set of benchmark test functions from literature that can be used for evaluating low
discrepancy sequence quality. The repository accompanies the paper:

`On the generation of direction numbers for Sobol Sequences and the application to Quasi Monte Carlo Methods
<https://papers.ssrn.com/sol3/papers.cfm?abstract_id=5283131>`_

The set of direction numbers :code:`tkrg-a-ap5` satisfying property A for all 50,000 dimensions and A' for five adjacent
dimensions can be found in :code:`tklds/direction_numbers/tkrgsobol_a_ap5_50000`

Quasi Monte Carlo Methods
==========================

Monte Carlo methods lie at the heart of many numeric computing tasks ranging from modelling how high velocity ions
impinge on an atomic lattice to the pricing of a financial instruments such as stocks and options. While being generic
and scaling independently of problem dimension, practical applications of Monte-Carlo suffers from the slow convergence
rate imposed by the O(N-1/2) for N samples, thus requiring large numbers of simulations to achieve a desired level of
accuracy. Quasi-Monte Carlo integration replaces the pseudo-random sequences with deterministic 'low discrepancy'
sequences having greater uniformity and produce error convergence rates of order O(N-1) to O(N-3/2) on suitable problem
types. While the asymptotically faster convergence rates of QMC methods may at first be appealing, the use of QMC and
low discrepancy sequences carry with them a set of caveats and pathologies that if not addressed are likely to lead to
incorrect results when applied in practice.

Installing
==========

Install the project from pypi using :code:`pip install tklds`

or by cloning this repository and them:

Install the requirements using :code:`python -m pip install -r requirements.txt`

Install the project by calling :code:`python -m pip install tklds` from the current folder.

Quickstart
===========

To generate uniform floating point values in the range [0,1] use the following snippet:

>>> from tklds.interface.generators import generate_lds_rvs
>>> from tklds.constant import SequenceNum
>>> u = generate_lds_rvs(sequence=SequenceNum.TKRG_A_AP5, n=1024, d=5, skip=0)

Here we generate a total of :code:`n=1024` points with each point having :code:`d=5` dimensions using the
sequence generated by the :code:`sequence_name=tkrg-a-ap5` direction numbers, without skipping the first point
(:code:`skip=0`).

