[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tool-detector"
version = "0.1.0"
description = "A lightweight tool detection system for parsing user intents into structured tool calls"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    { name = "Ameen Alam", email = "ameen@doblier.io" }
]
maintainers = [
    { name = "Ameen Alam", email = "ameen@doblier.io" }
]
keywords = ["nlp", "tool-detection", "intent-parsing", "ai", "natural-language-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "pydantic>=2.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "mypy>=1.0",
    "flake8>=6.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=1.0",
]

[project.urls]
Homepage = "https://github.com/ameenalam/tool-detector"
Documentation = "https://tool-detector.readthedocs.io/"
Repository = "https://github.com/ameenalam/tool-detector.git"
"Bug Tracker" = "https://github.com/ameenalam/tool-detector/issues"
"Changelog" = "https://github.com/ameenalam/tool-detector/blob/main/CHANGELOG.md"

[project.scripts]
tool-detector = "tool_detector.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["tool_detector"]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tool_detector",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["tool_detector"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 