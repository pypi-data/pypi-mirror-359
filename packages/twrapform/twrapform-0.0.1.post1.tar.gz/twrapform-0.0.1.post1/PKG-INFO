Metadata-Version: 2.4
Name: twrapform
Version: 0.0.1.post1
Summary: Running Terraform commands from Python
License: MIT License
        
        Copyright (c) 2025 minthem
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: infrastructure,python,terraform
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# twrapform

A Python library for running Terraform commands from Python with async support.

## Features

- Execute Terraform commands from Python code
- Asynchronous execution support
- Task management with unique IDs
- Customizable task options
- Error handling for Terraform operations

## Requirements

- Python 3.10 or higher
- Terraform installed on your system

## Installation

Using pip:
```shell
pip install twrapform
```

## Usage Example

```python
import asyncio

from twrapform import Twrapform
from twrapform.exception import TwrapformError
from twrapform.task import ApplyTaskOptions, InitTaskOptions, OutputTaskOptions, PlanTaskOptions


async def main():
    # Create an instance of Twrapform
    twrap = Twrapform(work_dir="/terraform_rootpath")

    # Add Terraform tasks one by one
    twrap = twrap.add_task(InitTaskOptions())

    # Chain multiple tasks
    twrap = (
        twrap
        .add_task(PlanTaskOptions(var={"var1": 1}))
        .add_task(ApplyTaskOptions(var={"var1": 1}))
        .add_task(OutputTaskOptions(json=True))
    )

    # Execute all tasks
    results = await twrap.run_await()

    try:
        # Raise errors if any task fails
        results.raise_on_error()
    except TwrapformError as e:
        print(f"Error occurred: {e.message}")

    # Output results for successful tasks
    for success_task in results.get_success_tasks():
        print(success_task.stdout)


if __name__ == "__main__":
    asyncio.run(main())

```

## Supported Commands
twrapform currently supports the following Terraform commands:
* `terraform init`
* `terraform plan`
* `terraform apply`
* `terraform output`
* `terraform workspace select`