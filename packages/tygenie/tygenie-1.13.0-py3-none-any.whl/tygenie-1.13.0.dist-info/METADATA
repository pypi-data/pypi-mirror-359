Metadata-Version: 2.4
Name: tygenie
Version: 1.13.0
Summary: Tygenie is an Opsgenie TUI application
Project-URL: Homepage, https://github.com/ovh/tygenie
Author-email: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>
License:    Copyright 2024 OVHcloud
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
        
           A copy of the license terms follows:
        
                                         Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
License-File: AUTHORS
License-File: LICENSE
Requires-Python: >=3.11
Requires-Dist: attrs==24.2.0
Requires-Dist: desktop-notifier==5.0.1
Requires-Dist: httpx==0.27.2
Requires-Dist: markdownify==0.14.1
Requires-Dist: pendulum==3.0.0
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: rich==13.9.4
Requires-Dist: semver==3.0.1
Requires-Dist: textual[syntax]==3.5.0
Requires-Dist: udatetime==0.0.17
Requires-Dist: urllib3==2.5.0
Description-Content-Type: text/markdown

# Tygenie: Opsgenie Terminal UI

Tygenie is a terminal user interface used to handle Opsgenie alerts

Initially created to test [textual python framework](https://www.textualize.io/) it became day after day a complete and powerful tool to handle alerts on a daily basis at [OVH](https://github.com/ovh)

# Table of Contents

- [Features](#features)
- [Screenshots](#screenshots)
- [Requirements](#requirements)
- [Compatibility](#compatibility)
- [Limitations](#limitations)
- [Installation](#installation)
  - [pipx](#pipx)
  - [uv](#uv)
  - [pip](#pip)
- [Start the application](#start-the-application)
- [Configuration](#configuration)
- [Sample config](#sample-config)
- [Plugin](#plugin)
  - [Add your own plugin](#add-your-own-plugin)
    - [Customise alert list](#customise-alert-list)
    - [Customise alert description](#customise-alert-description)
  - [Enable the plugin](#enable-the-plugin)
- [Opsgenie API / OpenAPI / python-client](#opsgenie-api--openapi--python-client)
- [Related links](#related-links)
- [License](#license)

<a name="features"></a>

## Features

- list alerts by pages
- display details / description / tags / notes
- display current on-call user
- create your own display filter with your own key bindings to display specific alerts
- ack / unack alert
- tag / untag alert / custom tag
- add note
- automatic and manual refresh
- open alert in web browser
- In-app settings editor
- Alerts list might be customized by a plugin
- Alert details / description might be customised by a plugin

<a name="screenshots"></a>

## Screenshots

**Overview:**

> <img src="./assets/screenshots/overview.png" alt="overview" width="80%"/>

**In-app settings editor:**

> <img src="./assets/screenshots/settings.png" alt="settings" width="80%"/>

<a name="requirements"></a>

## Requirements

- python >= 3.11

<a name="compatibility"></a>

## Compatibility

- Tested/used on GNU/Linux and MacOS

<a name="limitations"></a>

## Limitations

- Desktop notification might not work on MacOS as [the application needs to be signed](https://github.com/samschott/desktop-notifier?tab=readme-ov-file#notes-on-macos) it depends how you installed python (eg using homebrew won't work)

- To select/past text in the application depending the terminal you are using use the following key:

  - iTerm Hold the OPTION key.
  - Gnome Terminal Hold the SHIFT key.
  - Windows Terminal Hold the SHIFT key.

Please refer to [textual FAQ](https://textual.textualize.io/FAQ/#how-can-i-select-and-copy-text-in-a-textual-app)

## Installation

<a name="pip"></a>

### pip

Each release of Tygenie is published on [pypi](https://pypi.org/project/tygenie/) so simply do a pip install

```bash
pip install tygenie
```

Or by using directly code from Github repository with pipx/uv

<a name="pipx"></a>

### pipx

```bash
pipx install git+https://github.com/ovh/tygenie.git
```

<a name="uv"></a>

### uv

```bash
uv tool install git+https://github.com/ovh/tygenie.git
```

<a name="start-the-application"></a>

## Start the application

```bash
tygenie
```

Or you might specify a custom configuration file

```bash
$ tygenie --help
usage: tygenie [-h] [--config CONFIG]

options:
  -h, --help            show this help message and exit
  --config CONFIG, -c CONFIG

```

<a name="configuration"></a>

## Configuration

```json5
{
  // Opsgenie configuration part
  opsgenie: {
    api_key: "", //                                                     Your Opsgenie integration API key
    username: "", //                                                    Your Opsgenie username
    host: "https://api.eu.opsgenie.com", //                             Opsgenie API endpoint
    webapp_url: "https://app.eu.opsgenie.com", //                       The Web URL to access Opsgenie from your web browser
    on_call_schedule_ids: [],
  },
  // Tygenie configuration part
  tygenie: {
    refresh_period: 60, //                                              Number of seconds between 2 automatic refresh (min 60s)
    open_detail_alert_on_enter: false, //                               If you don't want tygenie to automatically load alert details set it to true and press enter to get the details
    log: {
      enable: false, //                                                 Will enable API logging
      file: "/tmp/tygenie.log", //                                      Path where the log will be written
    },
    desktop_notification: {
      enable: true, //                                                  To enable desktop notification when new alerts are detected set it to true
      urgency: "Critical", //                                           Urgency level: can be Critical, Normal, Low
      when_on_call_only: false, //                                      When enable is true will send notification only when you are on call
    },
    alert_details: {
      default_tab: "description", //                                    Default tab displayed when loading alert details, values might be: RAW, tags, details, description
    },
    alerts: {
      date_format: "%d/%m %H:%M", //                                    Date format
      sort: "updatedAt", //                                             Field used to sort alerts when doing API call
      limit: 20, //                                                     Number of alerts to display
      display_page_by_priority: false, //                               To sort by priority set it to true
    },
    note_on_ack: {
      enable: false, //                                                 To automatically add a note when acking an alert set it to true
      message: "Alert has been acknowledged using Tygenie", //          Note to be added
    },
    note_on_unack: {
      enable: false, //                                                 To automatically add a note when unacking an alert set it to true
      message: "Alert has been unacknowledged using Tygenie", //        Note to be added
    },
    note_on_close: {
      enable: false, //                                                 To automatically add a note when closing an alert set it to true
      message: "Alert has been closed using Tygenie", //                Note to be added
    },
    note_on_tag: {
      enable: false, //                                                 To automatically add a note when adding a tag on alert set it to true
      message: "Tag '{tag}' has been added using Tygenie", //           Note to be added, you might use '{tag}' notation to add the value of the tag in the note
    },
    note_on_untag: {
      enable: false, //                                                 To automatically add a note when removing a tag on alert set it to true
      message: "Tag '{tag}' has been removed using Tygenie", //         Note to be added, you might use '{tag}' notation to add the value of the tag in the note
    },
    keybindings: {
      //                                                                Keybindings for each actions
      ack: "a", //                                                      to ack an alert
      unack: "U", //                                                    to unack an alert
      close: "c", //                                                    to close an alert
      tag: "t", //                                                      to tag an alert
      untag: "T", //                                                    to untag an alert
      refresh: "r", //                                                  to manually refresh alert list
      next_page: "right", //                                            load next page (will also work with page down, G, down key on last alert)
      previous_page: "left", //                                         load previous page (will also work with page up, g, up key on first alert)
      open_in_webbrowser: "ctrl+w", //                                  to open the selected alert in your default web browser
      focus_on_alerts_list: "f5", // to get focus on alert list
    },
    plugins: {
      alert_formatter: null, //                                         plugin name to use to display alert list (you might customize columns, messages, ... check plugin part)
      content_transformer: null, //                                     plugin name to use to that allow you to parse alert detail and customize the rendered markdown
    },
    default_tag: "XXXXX", //                                            default tag to apply to an alert
    default_filter: "opened", //                                        default defined filter to use hen starting the application
    filters: {
      //                                                                define your query filters here
      mine: {
        //                                                              mine filter will display the alert you are the owner of when using 'm' key
        key: "m",
        filter: "owner:<your username>",
        description: "Mine",
      },
      opened: {
        key: "o", //                                                    opened filter will display opened alerts only when using key 'o'
        filter: "status:open",
        description: "Opened",
      },
      all: {
        key: "A", //                                                    All filter, will display all the alerts
        filter: "",
        description: "All",
      },
    },
  },
}
```

When starting the application for the first time you will be bring on the
Settings screen which allow you to set your Opsgenie API key, username
and other related information.

<a name="sample-config"></a>

## Sample config

A sample config file is available [here](https://github.com/ovh/tygenie/blob/master/assets/tygenie.json)

<a name="plugin"></a>

## Plugin

Tygenie supports two type of customisation:

- Columns displayed in alerts (add/remove/rename) and content of each row (content is passed to a parser you might override)

- Content of alert description is also passed to parser and you might parse the content to change it before being displayed in Markdown

<a name="add-your-own-plugin"></a>

### Add your own plugin

1. In plugin directory add a directory with the name of your plugin, let's say 'Bob'
2. Depending what you want to customise:

- the alert list: add a file in Bob directory called 'alerts_list_formatter.py'
- content of alert description: add a file in Bob directory called 'alert_description_formatter.py'

<a name="customise-alert-list"></a>

#### Customise alert list

In file 'Bob/alerts_list_formatter.py'

```python

from rich.text import Text
from tygenie.alerts_list.formatter import BaseFormatter

# The class name must be the same as the plugin name
class Bob(BaseFormatter):
    # map method of the class with a column name
    # the dict is ordered so it will be displayed as it is declared
    # all the fields returned by the API are available by default
    displayed_fields = {
        "created_at": "Created",
        "status": "Status",
        "priority": "Priority",
        "region": "Region", # Custom field
        "message": "Message",
        "owner": "Owner",
        "closed_by": "Closed by",
    }

    # Let's add a custom field that we compute from the message
    # And return a rich Text object which allow us to customise the style
    def region(self, value) -> Text:
        m = re.match(r"^\[([^\[]+)\].*$", self.to_format["message"])
        region = ""
        if m and m.groups():
            region = m.group(1)
        return Text(region, style="#ffcf56")

    # Remove the region from the message as region is now a new column
    # And limit the length to 100 characters
    # And return a rich Text object with default style
    def message(self, value) -> Text:
        value = re.sub(r"^\[([^\[]+)\]\s*\:?\s*", "", value)
        if len(value) > 100:
            value = value[0:100] + "..."
        return Text(str(value))
```

Now the alert list has a new column called Region and the message does not contain any more the region string.

**Alert list with plugin**

> <img src="./assets/screenshots/overview_with_plugin.png" alt="Alert list with plugin" width="80%"/>

<a name="customise-alert-description"></a>

#### Customise alert description

In file 'Bob/description_alert_formatter.py'

The alert description content might be customised in 2 steps:

- before the content has been passed to Markdown processor, useful to sanitize content
- after the content has been passed to Markdown processor, useful to customize output (create clickable links)

The plugin should inherit from **tygenie.alert_details.description_formatter.BaseContentFormatter**

This class expose an **_execution_order_** dictionary **{"pre": [], "post": []}** which allow you to pass a list of methods that will be called respecting the order you list them

The only thing you have to to is implement your custom method and list them in the execution_order dictionary

```python
import re
from tygenie.alert_details.description_formatter import BaseContentFormatter

class Bob(BaseContentFormatter):

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.execution_order["pre"] = [
            "pre_substitute_cariage_return_to_htmlttag",
        ]
        self.execution_order["post"] = [
            "post_custom_generate_url_by_id",
        ]

    # pre_substitute_* is a special form of method name that does the substitute for you
    # Just return a dict {"regexp": r"your regexp to match", "sub": r"the substitution"}
    def pre_substitute_cariage_return_to_htmlttag(self):
        return {"regexp": r"\r?\n", "sub": "<br>"}

    # Let's say your description return a list of ids you can easily find "#12345 #6789"
    # You would like to be able to click on that id to open a custom web interface that gives details on that id
    # And we want to do it after markdown processing
    def post_custom_generate_url_by_id(self):
        ids = re.findall( r"#(\d+)", self.content)
        url_base = 'https://www.corporate.com/mytool/details?id={id}'
        for id in set(ids):
            url = url_base.format(id=id)
            self.content = re.sub(
                f'#{id}', f"[#{id}]({url})", self.content
            )
```

<a name="enable-the-plugin"></a>

### Enable the plugin

Edit the settings file then go to the plugins json key:

```json
{
  "tygenie": {
    "plugins": {
      "alerts_list_formatter": "Bob",
      "alert_description_formatter": "Bob"
    }
  }
}
```

<a name="opsgenie-api--openapi--python-client"></a>

## Opsgenie API / OpenAPI / python-client

The current Opsgenie API python SDK does not implement the full API and the available [swagger.json](https://github.com/opsgenie/opsgenie-oas/blob/master/swagger.json) file is not a Swagger 2.0 compliant file.

A fork of opsgenie-oas repository had been done by Github user [bougar](https://github.com/bougar/opsgenie-oas) which contains a compliant Swagger 2.0 files. This file has been used to generate the Opsgenie client API consumer used in Tygenie.

The swagger file has been converted to openapi 3.0 and consumed by [openapi-python-client](https://github.com/openapi-generators/openapi-python-client)

<a name="related-links"></a>

## Related links

- Contribute: <https://github.com/ovh/tygenie/blob/master/CONTRIBUTING.md>
- Report bugs: <https://github.com/ovh/tygenie/issues>

<a name="license"></a>

## License

See <https://github.com/ovh/tygenie/blob/master/LICENSE>
