from enum import Enum


class ActionMappingMappedAction(str, Enum):
    ACKNOWLEDGE = "acknowledge"
    ACKNOWLEDGESENSOR = "acknowledgeSensor"
    ACKNOWLEDGE_ALERT = "acknowledge-alert"
    ACKNOWLEDGE_NOTIFICATION = "acknowledge-notification"
    ACK_ALERT = "ack-alert"
    ADD_COMMENT_TO_ISSUE = "add-comment-to-issue"
    ADD_DISCUSSION_NOTE_TO_TICKET = "add-discussion-note-to-ticket"
    ADD_INTERNAL_NOTE = "add-internal-note"
    ADD_INTERNAL_NOTE_TO_TICKET = "add-internal-note-to-ticket"
    ADD_JOURNAL = "add-journal"
    ADD_NOTE = "add-note"
    ADD_NOTE_TO_INCIDENT = "add-note-to-incident"
    ADD_PRIVATE_NOTE = "add-private-note"
    ADD_PUBLIC_NOTE = "add-public-note"
    ADD_RESOLUTION_NOTE_TO_TICKET = "add-resolution-note-to-ticket"
    ADD_TAG = "add-tag"
    ADD_WORK_INFO = "add-work-info"
    ASSIGN_TO_GROUP = "assign-to-group"
    ASSIGN_TO_OWNER = "assign-to-owner"
    ASSIGN_TO_USER = "assign-to-user"
    CLOSE = "close"
    CLOSE_ALERT = "close-alert"
    CLOSE_INCIDENT = "close-incident"
    CLOSE_ISSUE = "close-issue"
    CLOSE_SERVICE_TICKET = "close-service-ticket"
    CONFIRM_INCIDENT = "confirm-incident"
    CREATE = "create"
    CREATECOMMENT = "createComment"
    CREATEEVENT = "createEvent"
    CREATETAG = "createTag"
    CREATE_ALERT = "create-alert"
    CREATE_CASE = "create-case"
    CREATE_CONVERSATION = "create-conversation"
    CREATE_INCIDENT = "create-incident"
    CREATE_INCIDENT_AND_UPDATE_COMPONENT_STATUSES = "create-incident-and-update-component-statuses"
    CREATE_ISSUE = "create-issue"
    CREATE_PROBLEM = "create-problem"
    CREATE_SERVICE_TICKET = "create-service-ticket"
    CREATE_TICKET = "create-ticket"
    CUSTOM_STATUS = "custom-status"
    IN_PROGRESS_INCIDENT = "in-progress-incident"
    IN_PROGRESS_ISSUE = "in-progress-issue"
    IN_PROGRESS_TICKET = "in-progress-ticket"
    ISSUE_DONE = "issue-done"
    POSTTOURL = "postToUrl"
    POST_ACTION_TO_OEC = "post-action-to-oec"
    PUBLIC_REPLY = "public-reply"
    PUBLISH = "publish"
    RESOLVE = "resolve"
    RESOLVE_INCIDENT = "resolve-incident"
    RESOLVE_INCIDENT_AND_UPDATE_COMPONENT_STATUSES_BACK_TO_OPERATIONAL = (
        "resolve-incident-and-update-component-statuses-back-to-operational"
    )
    RESOLVE_ISSUE = "resolve-issue"
    RESOLVE_TICKET = "resolve-ticket"
    SENDDATA = "sendData"
    SEND_TO_CHANNEL = "send-to-channel"
    SEND_TO_CUSTOM_ENDPOINT = "send-to-custom-endpoint"
    SETSTATUSTOCLOSED = "setStatusToClosed"
    SET_CASE_STATUS_TO_ACTIVE = "set-case-status-to-active"
    SET_CASE_STATUS_TO_CLOSE = "set-case-status-to-close"
    SET_CASE_STATUS_TO_CLOSE_AS_DUPLICATE = "set-case-status-to-close-as-duplicate"
    SET_CASE_STATUS_TO_WORKING = "set-case-status-to-working"
    SET_STATUS_TO_CLOSED = "set-status-to-closed"
    SET_STATUS_TO_COMPLETED = "set-status-to-completed"
    SET_STATUS_TO_OPEN = "set-status-to-open"
    SET_STATUS_TO_PENDING = "set-status-to-pending"
    SET_STATUS_TO_RESOLVED = "set-status-to-resolved"
    SET_STATUS_TO_SOLVED = "set-status-to-solved"
    UNACKNOWLEDGE = "unacknowledge"
    UNACKNOWLEDGE_ALERT = "unacknowledge-alert"
    UNMUTE_ALERT = "unmute-alert"
    UPDATESEVERITY = "updateSeverity"
    UPDATESTATUSTOCLOSED = "updateStatusToClosed"
    UPDATESTATUSTOINPROGRESS = "updateStatusToInProgress"
    UPDATE_COMPONENT_STATUSES = "update-component-statuses"
    UPDATE_DESCRIPTION = "update-description"
    UPDATE_PRIORITY = "update-priority"

    def __str__(self) -> str:
        return str(self.value)
