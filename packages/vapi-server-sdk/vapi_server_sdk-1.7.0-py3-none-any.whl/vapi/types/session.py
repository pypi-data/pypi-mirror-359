# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .create_assistant_dto import CreateAssistantDto
from .create_customer_dto import CreateCustomerDto
from .import_twilio_phone_number_dto import ImportTwilioPhoneNumberDto
from .session_messages_item import SessionMessagesItem
from .session_status import SessionStatus


class Session(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    This is the unique identifier for the session.
    """

    org_id: typing_extensions.Annotated[str, FieldMetadata(alias="orgId")] = pydantic.Field()
    """
    This is the unique identifier for the organization that owns this session.
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")] = pydantic.Field()
    """
    This is the ISO 8601 timestamp indicating when the session was created.
    """

    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")] = pydantic.Field()
    """
    This is the ISO 8601 timestamp indicating when the session was last updated.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is a user-defined name for the session. Maximum length is 40 characters.
    """

    status: typing.Optional[SessionStatus] = pydantic.Field(default=None)
    """
    This is the current status of the session. Can be either 'active' or 'completed'.
    """

    expiration_seconds: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="expirationSeconds")
    ] = pydantic.Field(default=None)
    """
    Session expiration time in seconds. Defaults to 24 hours (86400 seconds) if not set.
    """

    assistant_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assistantId")] = (
        pydantic.Field(default=None)
    )
    """
    This is the ID of the assistant associated with this session. Use this when referencing an existing assistant.
    """

    assistant: typing.Optional[CreateAssistantDto] = pydantic.Field(default=None)
    """
    This is the assistant configuration for this session. Use this when creating a new assistant configuration.
    If assistantId is provided, this will be ignored.
    """

    messages: typing.Optional[typing.List[SessionMessagesItem]] = pydantic.Field(default=None)
    """
    This is an array of chat messages in the session.
    """

    customer: typing.Optional[CreateCustomerDto] = pydantic.Field(default=None)
    """
    This is the customer information associated with this session.
    """

    phone_number_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="phoneNumberId")] = (
        pydantic.Field(default=None)
    )
    """
    This is the ID of the phone number associated with this session.
    """

    phone_number: typing_extensions.Annotated[
        typing.Optional[ImportTwilioPhoneNumberDto], FieldMetadata(alias="phoneNumber")
    ] = pydantic.Field(default=None)
    """
    This is the phone number configuration for this session.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
