[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "verily"
version = "0.1.1"
description = "Simple stability testing test for stochastic systems"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiostream>=0.6.4",
    "fsspec>=2025.5.1",
    "numpy>=2.3.1",
    "pydantic>=2.11.7",
    "rich>=14.0.0",
    "scipy>=1.16.0",
    "typer>=0.16.0",
]

[project.scripts]
verily = "verily.main:app"

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.13",
]

[tool.poe.tasks]
lint = "ruff check ."
format = "ruff format ."
test = "uv run pytest"
build = "uv run pyproject-build"

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.ruff.lint]
extend-select = [
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "UP",       # Warn if certain things can changed due to newer Python versions
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "RET",      # Good return practices
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TC",       # Enforce importing certain types in a TYPE_CHECKING block
    "PTH",      # Use pathlib instead of os.path
    "TD",       # Be diligent with TODO comments
    "NPY",      # Some numpy-specific things
]

[tool.ruff.lint.flake8-tidy-imports.banned-api."pytest.mark.asyncio"]
msg = "The @pytest.mark.asyncio decorator is not needed as `asyncio_mode` is set to `auto` for the project."

[tool.hatch.build.targets.sdist]
include = ["/src", "/pyproject.toml", "/README.md", "/LICENSE"]

[tool.hatch.build.targets.wheel]
packages = ["src/verily"]

