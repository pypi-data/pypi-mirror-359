[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "webgraze"
version = "1.1.3"
description = "WebScraping library that scrapes & gathers data from multiple sources on the internet"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "shivendra", email = "shivharsh44@gmail.com"}]
maintainers = [{name = "shivendra", email = "shivharsh44@gmail.com"}]
keywords = [ "webscraping", "scraping",  "webscraping library", "web scraping", "python webscraping", "beautifulsoup", "selenium", "data collection", "web automation"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet :: WWW/HTTP :: Browsers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup :: HTML",
  "Operating System :: OS Independent"
]
requires-python = ">=3.8"
dependencies = ["beautifulsoup4>=4.11.0", "tqdm>=4.64.0", "google-api-python-client>=2.70.0", "requests>=2.28.0", "youtube-transcript-api>=0.6.0", "selenium>=4.15.0", "webdriver-manager>=4.0.0", "lxml>=4.9.0"]
[project.optional-dependencies]
dev = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "black>=22.0.0", "flake8>=5.0.0", "mypy>=1.0.0", "pre-commit>=2.20.0"]
docs = ["sphinx>=5.0.0", "sphinx-rtd-theme>=1.2.0", "myst-parser>=0.18.0"]
testing = ["pytest>=7.0.0", "pytest-mock>=3.10.0", "responses>=0.22.0", "pytest-asyncio>=0.21.0"]

[project.urls]
Homepage = "https://github.com/shivendrra/web-graze"
Repository = "https://github.com/shivendrra/web-graze"
Documentation = "https://github.com/shivendrra/web-graze/tree/main/docs"
Issues = "https://github.com/shivendra/webg-raze/issues"

[tool.setuptools]
packages = ["graze"]

[tool.setuptools.package-dir]
graze = "graze"

[tool.setuptools.package-data]
graze = ["*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["graze"]
omit = ["*/tests/*", "*/test_*", "setup.py"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "if self.debug:", "if settings.DEBUG", "raise AssertionError", "raise NotImplementedError", "if 0:", "if __name__ == .__main__.:"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", ".tox"]