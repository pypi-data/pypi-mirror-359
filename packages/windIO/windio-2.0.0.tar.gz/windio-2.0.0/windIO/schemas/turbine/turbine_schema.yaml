$schema: "http://json-schema.org/draft-07/schema#"
$id: "windIO/turbine/turbine_schema"
title: "windIO: Turbine"
description: Ontology definition for wind turbines
type: object
required:
    - name
    - windIO_version
    - components
    - assembly
optional:
    - comments
    - airfoils
    - materials
    - control
    - outputs
additionalProperties: False
properties:
    comments:
        description: Text field to describe the wind turbine, the changes to previous versions, etc,
        type: string
    name:
        description: Unique identifier of the wind turbine model
        type: string
    windIO_version:
        description: Version of windIO used
        type: string
    assembly:
        type: object
        default: {}
        description: The field assembly includes nine entries that aim at describing the overall configuration of the wind turbine
        optional:
            - turbine_class
            - turbulence_class
            - drivetrain
            - rotor_orientation
            - number_of_blades
            - rotor_diameter
            - hub_height
            - rated_power
            - lifetime
        properties:
            turbine_class:
                type: string
                default: I
                description: IEC wind class. The entry should be `I`, `II`, `III`, or `IV`.
                enum: [I, II, III, IV, i, ii, iii, iv, 1, 2, 3, 4]
            turbulence_class:
                type: string
                default: B
                description: IEC turbulence class of the wind turbine. The options are `A`, `B`, `C`, and `D`.
                enum: [A, B, C, D, a, b, c, d]
            drivetrain:
                type: string
                default: geared
                description: Drivetrain configuration. This is intended to inform an automated interpreter of the yaml about the data specified in the field drivetrain
            rotor_orientation:
                type: string
                default: Upwind
                description: Switch between `upwind` and `downwind` rotor configurations.
                enum: [Upwind, upwind, UPWIND, downwind, Downwind, DOWNWIND]
            number_of_blades:
                type: integer
                default: 3
                description: Number of blades of the rotor
                units: dimensionless
                minimum: 0
                maximum: 10
            rotor_diameter:
                type: number
                default: 0
                description: Diameter of the wind turbine rotor. It is defined as two times the sum of hub radius and blade length along the z direction times the cosine of the rotor precone. In formula, this is 2 x (Rhub + blade length along z) * cos(precone). This definition is consistent with commercial aeroelastic solvers. It is not consistent with OpenFAST, which takes into account the instantaneous blade deflection.
                units: m
                minimum: 0
                maximum: 1000
            hub_height:
                type: number
                default: 0
                description: Height of the hub center over the ground (land-based) or the mean sea level (offshore)
                units: m
                minimum: 0
                maximum: 1000
            rated_power:
                type: number
                description: Nameplate power of the turbine, i.e. the rated electrical output of the generator.
                units: W
                minimum: 0
            lifetime:
                type: number
                description: Turbine design lifetime in years.
                units: yr
                minimum: 0
                default: 25.0
    components:
        type: object
        description: Nested dictionary structure of components describing the wind turbine assembly
        default: {}
        optional:
            - blade
            - hub
            - drivetrain
            - tower
            - monopile
            - floating_platform
            - mooring
        properties:
            blade:
                type: object
                description: The component `blade` includes three subcomponents, namely `reference_axis`, `outer_shape`, and `structure`. All distributed quantities, such as blade chord or the thickness of a structural component, are expressed in terms of pair arrays `grid` and `values`, which must have a minimum length of two elements and the same size. `grid` is defined nondimensional between 0 (root) and 1 (tip) along the, usually curved, `reference_axis`.
                required:
                    - reference_axis
                    - outer_shape
                optional:
                    - structure
                    - elastic_properties
                properties:
                    reference_axis:
                        type: object
                        description: The aerodynamic, structural, and elastic characteristics of the wind turbine blade are defined at a common reference axis. The axis is defined with sets of `x`, `y`, and `z` points. The reference system for `x`, `y`, and `z` is located at blade root, with z aligned with the pitch axis, x pointing towards the suction sides of the airfoils (standard prebend will be negative) and y pointing to the trailing edge (standard sweep will be positive). The blade main direction is expressed along z, and total blade length must be computed integrating the fields x, y, and z three-dimensionally.
                        required:
                            - x
                            - y
                            - z
                        additionalProperties: False
                        properties:
                            x:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            y:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            z:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                    outer_shape:
                        type: object
                        description: The field `outer_shape` consists of a dictionary containing the data describing the outer shape of the blade.
                        required:
                            - twist
                            - chord
                            - rthick
                            - section_offset_y
                            - airfoils
                        properties:
                            chord:
                                type: object
                                description: Chord in meters along blade span.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            twist:
                                type: object
                                description: Aerodynamic twist along blade span in degrees. Twist is generally positive toward blade root, and may become negative toward blade tip.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/angle"
                            rthick:
                                type: object
                                description: Relative thickness, expressed between 0 (flat plate) and 1 (cylinder), along blade span.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                            section_offset_y:
                                type: object
                                description: The field `section_offset_y` controls the airfoil position relative to the reference axis, by specifying the distance in meters along the chordline from the reference axis to the leading edge. 0 means that the airfoil is pinned at the leading edge, a positive offset means that the leading edge is upstream of the reference axis in local chordline coordinates, and a negative offset that the leading edge aft of the reference axis.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            section_offset_x:
                                type: object
                                description: The field `section_offset_x` controls the airfoil position relative to the reference axis, by specifying the chordline normal distance in meters from the reference axis. 0 means that the reference axis lies on the airfoil chordline, a positive offset means that the chordline is shifted in the direction of the suction side relative to the reference axis, and a negative offset that the section is shifted in the direction of the pressure side of the airfoil.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            airfoils:
                                type: array
                                description: List of airfoils and corresponding polars adopted along blade span. The airfoil positions must correspond to the `rthick` field. For each airfoil, their spanwise position can be defined (if not defined `rthick` will be used, if both are defined `rthick` should dominate). Also, for each airfoil different sets of polars can be defined with an associated weight. The array of weights must sum up to 1. The weights help blend different polar sets, for example a 70% free transition / 30% fully turbulent.
                                items:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: Name of the airfoil, must be available in the airfoil database
                                        spanwise_position:
                                            type: number
                                            description: Spanwise position defined between 0 (root) and 1 (tip) along the curved reference axis.
                                            minimum: 0.
                                            maximum: 1.
                                        configuration:
                                            type: array
                                            description: Tags corresponding to polar sets defined for this airfoil
                                            items:
                                                type: string
                                        weight:
                                            type: array
                                            description: Weights, defined between 0 and 1 and summing up to 1, defining the blending of the different sets of polars
                                            items:
                                                type: number
                                                minimum: 0.
                                                maximum: 1.
                            surface:
                                type: object
                                description: Outer aerodynamic surface of the blade formatted as block structured arrays with x, y, z coordinates mapped onto the curvilinear grid used for the reference axis. The following steps must be followed in the right order. 1) From the outer_shape field, use rthick or use PCHIP based on the master airfoils and the outer_shape.airfoils.spanwise_position grid to interpolate airfoil cross-sections in between defined airfoils. Note that using airfoil_position in the windIO file requires the resolution of this grid to be quite fine, and airfoils with relative thickness above the typical 36% to be defined. Otherwise it is quite difficult to control the shape transition from the cylindrical root to the max chord. Also note that airfoils in the airfoils section should be interpolated onto a common grid based on normalized surface curve fraction using PCHIP, allowing point-wise interpolation between airfoils. Interpolating based on a common chord-wise discretization will result in very different airfoil shapes particularly for thick airfoils. 2) Scale airfoils by chord. 3) In the blade root coordinate system, apply section_offset_y from the leading edge along the chord. 4) In the blade root coordinate system, apply section_offset_x from the chord line normal to chord. 5) Compute and apply rotation matrix M to place airfoils orthonormal to local reference axis tangent. 6) Apply x, y and z translations from the curved reference axis. The transformation matrix M for a cross-section is constructed as 1) compute reference axis curve tangent unit vectors (tx, ty, tz) (preferably analytically using pchip derivatives) 1) compute rotation matrices for x- and y-rotations Mx and My from axis and angle, see https://en.wikipedia.org/wiki/Rotation_matrix "Rotation matrix from axis and angle" 3) Mxy = matmul (My, Mx) 4) Compute twist correction rz = atan2(Mxy(0,1), Mxy(0,0)) 5) rz = twist + rz 6) Compute z-rotation matrix Mz as for step 2 from tz and rz 7) M = matmul (Mx, My). The above definition of the transformation from local to blade reference frame is described better here https://iopscience.iop.org/article/10.1088/1742-6596/2767/2/022033/pdf. Also see https://wes.copernicus.org/articles/7/1341/2022/wes-7-1341-2022.pdf.
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    x:
                                        type: array
                                        items:
                                            type: array
                                            items:
                                                type: number
                                    y:
                                        type: array
                                        items:
                                            type: array
                                            items:
                                                type: number
                                    z:
                                        type: array
                                        items:
                                            type: array
                                            items:
                                                type: number
                                required:
                                    - grid
                                    - x
                                    - y
                                    - z
                    structure:
                        type: object
                        default: {}
                        description: The field `structure` contains the data to describe the internal structure of standard wind turbine blades. This is a fairly sophisticated process and the ontology proposed in this work supports different definitions. On the top level, the field `structure` has two sub-components, namely the `webs`, where the positions of the shear webs are defined, and the `layers`, which describe all internal layers in terms of `name`, `material`, `thickness`, number of plies `n_plies`, `fiber_orientation` (for composites), and position in the two-dimensional sections. Recently, the fields `joint` and `root` were added to support blades that are segmented spanwise and details about the blade root bolting.
                        required:
                            - anchors
                            - layers
                        properties:
                            anchors:
                                type: array
                                description: The field `anchors` defines non-dimensional arc positions along the surface of the blade that are used to position shear webs and layers. The anchors are defined in terms of `name`, `start_nd_arc`, and optionally `end_nd_arc`. In addition to the required arc positions, anchors can also be defined parametrically using the `offset_arc`, `offset_nd_arc` or `plane_intersection`.
                                items:
                                    type: object
                                    required:
                                        - name
                                        - start_nd_arc
                                    properties:
                                        name:
                                            type: string
                                            description: String that identifies the anchor.
                                        start_nd_arc:
                                            description: Non-dimensional arc position of the anchor which can be defined using grid/values or as a reference to another anchor.
                                            oneOf:
                                                - $ref: "#/definitions/anchor_ref"
                                                - $ref: "#/definitions/distributed_data/nd_arc_position"
                                        end_nd_arc:
                                            description: Optional additional non-dimensional arc position of the anchor which can be defined using grid/values or as a reference to another anchor.
                                            oneOf:
                                                - $ref: "#/definitions/anchor_ref"
                                                - $ref: "#/definitions/distributed_data/nd_arc_position"
                                        midpoint_nd_arc:
                                            description: Optional midpoint non-dimensional arc position of the anchor which can be defined using grid/values or as a reference to another anchor.
                                            oneOf:
                                                - $ref: "#/definitions/anchor_ref"
                                                - $ref: "#/definitions/distributed_data/nd_arc_position"
                                        offset_arc:
                                            type: object
                                            description: Defines an offset arc relative to another anchor.
                                            properties:
                                                defines:
                                                    type: string
                                                    description: Specifies the arc type being defined (e.g., `start_nd_arc` or `end_nd_arc`).
                                                    enum: ["start_nd_arc", "end_nd_arc"]
                                                anchor:
                                                    type: object
                                                    description: Reference to another anchor for the offset.
                                                    properties:
                                                        name:
                                                            type: string
                                                            description: The name of the referenced anchor.
                                                        handle:
                                                            type: string
                                                            description: The handle of the referenced anchor (e.g., `start_nd_arc` or `end_nd_arc`).
                                                            enum: ["start_nd_arc", "end_nd_arc", "midpoint_nd_arc"]
                                                    required: [name, handle]
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                                            required: [defines, anchor, grid, values]
                                        offset_nd_arc:
                                            type: object
                                            description: Defines a normalized offset arc relative to another anchor.
                                            properties:
                                                defines:
                                                    type: string
                                                    description: Specifies the arc type being defined (e.g., `start_nd_arc` or `end_nd_arc`).
                                                    enum: ["start_nd_arc", "end_nd_arc"]
                                                anchor:
                                                    type: object
                                                    description: Reference to another anchor for the offset.
                                                    properties:
                                                        name:
                                                            type: string
                                                            description: The name of the referenced anchor.
                                                        handle:
                                                            type: string
                                                            description: The handle of the referenced anchor (e.g., `start_nd_arc` or `end_nd_arc`).
                                                            enum: ["start_nd_arc", "end_nd_arc", "midpoint_nd_arc"]
                                                    required: [name, handle]
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/nd_arc_position"
                                            required: [defines, anchor, grid, values]
                                        width:
                                            type: object
                                            description: width of the anchor in meters used when both start_nd_arc and end_nd_arc are defined.
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                                                defines:
                                                    type: array
                                                    items:
                                                        type: string
                                                        enum: ["start_nd_arc", "end_nd_arc"]
                                            required: [grid, values, defines]
                                        plane_intersection:
                                            type: object
                                            description: Defines a plane intersection for computing the arc position(s) of the anchor.
                                            properties: 
                                                side:
                                                    type: string
                                                    description: The field `side` is a string that defines the side where the intesection should be performed. It can be either `suction`, `pressure`, or `both`.
                                                    enum: ['suction', 'pressure', 'both']
                                                defines:
                                                    type: array
                                                    description: The field `defines` is a list of strings that defines the anchors the intersection computes.
                                                    items:
                                                        type: string
                                                        enum: ['start_nd_arc', 'end_nd_arc', 'midpoint_nd_arc']
                                                plane_type1:
                                                    type: object
                                                    description: The field `plane_type1` is a dictionary that defines a plane intersection for computing the arc position(s) of the anchor. It is constructed as follows, 1. Starting from the blade root coordinate system, rotate the lofted blade by the amount defined in `rotation` around the blade `z`-axis using a right-handed rule. 2. Interpolate the `x`, `y`, `z` coordinates of the `anchor_curve` curve at the `anchors_nd_grid` non-dimensional arc positions, resulting in two points in space. 3. Construct a plane spanning the two points, and with a normal vector in the y-z plane perpendicular to the line connecting the two points. 4. Offset the plane along the plane normal vector by the amount defined in `offset`. If the offset is not linear, the plane effectively becomes a ruled surface. 5. Intersect the plane with the blade surface and compute the `position_nd_arc` of the intersection curve along the span.
                                                    properties:
                                                        anchor_curve:
                                                            type: string
                                                            description: The field `anchor_curve` is a string that identifies the reference anchor curve from which the plane is generated.
                                                        anchors_nd_grid:
                                                            type: array
                                                            description: Grid positions for computing the two plane points between which the intersection plane is generated.
                                                            items:
                                                                type: number
                                                            minItems: 2
                                                            maxItems: 2
                                                            uniqueItems: false
                                                        rotation:
                                                            type: number
                                                            description: The field `rotation` defines the rotation of the plane in degrees.
                                                            units: deg
                                                plane_type2:
                                                    type: object
                                                    properties:
                                                        anchor_curve:
                                                            type: string
                                                            description: The field `plane_type2` is a dictionary that defines a ruled surface intersection for computing the arc position(s) of the anchor. 1. Starting from the blade root coordinate system, rotate the lofted blade by the amount defined in `rotation` around the blade root `z`-axis using a right-handed rule. 2. In the y-z plane construct an offset curve normal to the anchor curve. 3. Construct the ruled surface by extrapolating the offset curve along the `x`-axis. 4. Intersect the ruled surface with the blade surface and compute the `position_nd_arc` of the intersection curve.
                                                        rotation:
                                                            type: number
                                                            description: The field `rotation` is a number that defines the rotation of the plane in degrees.
                                                            units: deg
                                                offset:
                                                    type: object
                                                    properties:                                                         
                                                        grid:
                                                            $ref: "#/definitions/distributed_data/grid_nd"
                                                        values:
                                                            $ref: "#/definitions/distributed_data/length"
                            webs:
                                type: array
                                description: The field `webs` consists of a list of entries, each representing a shear web defined in terms of `name` and position. Shear webs are assumed to be planar surfaces connecting the suction and pressure sides of the blade.
                                items:
                                    type: object
                                    required:
                                        - name
                                        - start_nd_arc
                                        - end_nd_arc
                                    properties:
                                        name:
                                            type: string
                                            description: String that identifies the web.
                                        start_nd_arc:
                                            $ref: "#/definitions/anchor_ref"
                                        end_nd_arc:
                                            $ref: "#/definitions/anchor_ref"
                                        anchors:
                                            type: array
                                            description: The field `anchors` in a web defines positions along the web surface for placing web layers.
                                            items:
                                                type: object
                                                required:
                                                    - name
                                                    - start_nd_arc
                                                properties:
                                                    name:
                                                        type: string
                                                        description: String that identifies the anchor.
                                                    start_nd_arc:
                                                        $ref: "#/definitions/distributed_data/nd_arc_position"
                                                    end_nd_arc:
                                                        $ref: "#/definitions/distributed_data/nd_arc_position"
                                        flanges:
                                            type: array
                                            description: The field `flanges` defines the geometry and bondline thickness of the flanges of a shear web. The flanges are defined in terms of `type`, `side`, `bondline`, `start_nd_arc`, and `end_nd_arc`.
                                            items:
                                                type: object
                                                properties:
                                                    type:
                                                        type: string
                                                        enum: [L, T]
                                                        description: The field `type` is a string that defines the shape of the flange, either L-shaped or T-shaped.
                                                    side:
                                                        type: string
                                                        enum: [suction, pressure, both]
                                                    bondline:
                                                        type: object
                                                        description: The field `bondline` is a dictionary that defines the bondline material and thickness.
                                                        properties:
                                                            material:
                                                                type: string
                                                                description: material name identifier, which needs to be defined in the `materials` section.
                                                            thickness:
                                                                type: object
                                                                description: thickness of the bondline in meters described as function of spanwise grid
                                                                properties: 
                                                                    grid:
                                                                        $ref: "#/definitions/distributed_data/grid_nd"
                                                                    values:
                                                                        $ref: "#/definitions/distributed_data/length"
                                                        required: [material, thickness]
                                                    start_nd_arc:
                                                        description: The field `start_nd_arc` is a reference to the anchor that defines the start of the flange attachment on the shell. The anchor refers to an anchor on the shell surface and must be defined in the `anchors` section.
                                                        $ref: "#/definitions/anchor_ref"
                                                    end_nd_arc:
                                                        description: The field `end_nd_arc` is a reference to the anchor that defines the end of the flange attachment on the shell. The anchor refers to an anchor on the shell surface and must be defined in the `anchors` section.
                                                        $ref: "#/definitions/anchor_ref"
                                                required: [type, side, bondline, start_nd_arc, end_nd_arc]
                            layers:
                                type: array
                                description: The sub-field `layers` defines the material layers of the wind turbine blade. In most cases, these are layers of composite materials. The thickness is defined in meters and optionally with the number of plines using the field `n_plines`.
                                items:
                                    # additionalProperties: True
                                    type: object
                                    required:
                                        - name
                                        - material
                                        - thickness
                                        - start_nd_arc
                                        - end_nd_arc
                                    properties:
                                        name:
                                            type: string
                                            description: String that identifies the layer.
                                        material:
                                            type: string
                                            description: String that identifies the material of the layer. The material and its properties must be defined in the top-level `materials`.
                                        web:
                                            type: string
                                            description: web to which the layer is associated to, only to be defined for web layers
                                        thickness:
                                            type: object
                                            description: Dimensional thickness of the laminate, expressed in meters. This value is most commonly modeled constant along the section but can also be defined as a 2D grid in the spanwise and chordwise direction allowing to define tapering of a layer, relevant for core material in the trailing edge.
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    oneOf:
                                                        - $ref: "#/definitions/distributed_data/grid_nd"
                                                        - $ref: "#/definitions/distributed_data/grid_2d"
                                                values:
                                                    oneOf:
                                                        - $ref: "#/definitions/distributed_data/length"
                                                        - $ref: "#/definitions/distributed_data/length2d"
                                        n_plies:
                                            type: object
                                            description: In addition or in alternative to the dimensional thickness, the discrete number of plies of a composite laminate can be defined by the user. Notably, the ply thickness is a material property (not a layer property) and it is defined in the top-level field `materials`.
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/nd"
                                        fiber_orientation:
                                            type: object
                                            description: For composite laminates, the orientation of the fibers in degrees can be specified. Looking from blade root, positive angles represent a rotation of the fibers towards the leading edge of the blade. Note that the angles are with respect to the cross section local reference system, not the reference system at blade root.
                                            default: 
                                                grid: [0.0, 1.0]
                                                values: [0.0, 0.0]
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/angle"
                                        start_nd_arc:
                                            $ref: "#/definitions/anchor_ref"
                                            description: The field `start_nd_arc` is a reference to the anchor that defines the start of the layer. The anchor is defined in terms of `name`, `start_nd_arc`, and `end_nd_arc`.
                                        end_nd_arc:
                                            $ref: "#/definitions/anchor_ref"
                                            description: The field `end_nd_arc` is a reference to the anchor that defines the end of the layer. The anchor is defined in terms of `name`, `start_nd_arc`, and `end_nd_arc`.
                            trailing_edge_adhesive:
                                type: object
                                description: The trailing edge adhesive fills the void on the inside of the shell at the trailing edge, and its location is defined by four corners, two on the suction sice and two on the pressure side. 
                                properties:
                                    material:
                                        type: string
                                        description: Material name identifier, which needs to be defined in the :code:`materials` section.
                                    anchor_ss_start:
                                        description: defines the start of the trailing edge adhesive on the suction side closest to the trailing edge.
                                        $ref: "#/definitions/anchor_ref"
                                    anchor_ss_end:
                                        description: defines the end of the trailing edge adhesive on the suction side.
                                        $ref: "#/definitions/anchor_ref"
                                    anchor_ps_start:
                                        description: defines the start of the trailing edge adhesive on the pressure side closest to the trailing edge.
                                        $ref: "#/definitions/anchor_ref"
                                    anchor_ps_end:
                                        description: defines the end of the trailing edge adhesive on the pressure side.
                                        $ref: "#/definitions/anchor_ref"
                            joint:
                                type: object
                                default: {}
                                description: This is a spanwise joint along the blade, usually adopted to ease transportation constraints
                                properties:
                                    position:
                                        type: number
                                        description: Spanwise position of the segmentation joint.
                                        units: dimensionless
                                        default: 0.0
                                        minimum: 0.0
                                        maximum: 1.0
                                    mass:
                                        type: number
                                        description: Mass of the joint.
                                        units: kg
                                        default: 0.0
                                        minimum: 0.0
                                        maximum: 1.e+6
                                    cost:
                                        type: number
                                        description: Cost of the joint.
                                        units: USD
                                        default: 0.0
                                        minimum: 0.0
                                        maximum: 1.e+6
                            root:
                                type: object
                                default: {}
                                properties:
                                    d_f:
                                        type: number
                                        default: 0.03
                                        minimum: 0.01
                                        maximum: 0.2
                                        units: m
                                        description: Diameter of the fastener, default is M30, so 0.03 meters
                                    sigma_max:
                                        type: number
                                        default: 675.e+6
                                        minimum: 1.e+5
                                        maximum: 1.e+10
                                        units: Pa
                                        description: Max stress on bolt
                            elastic_properties:
                                $ref: "#/definitions/beam"
            hub:
                type: object
                additionalProperties: True
                required:
                    - diameter
                    - cone_angle
                    - cd
                properties:
                    diameter:
                        type: number
                        description: This is the outer diameter of the hub. It is also the diameter of the circle centered at the rotor apex and connecting the blade root centers.
                        units: m
                        minimum: 0.
                        maximum: 30.
                    cone_angle:
                        type: number
                        description: Rotor precone angle, defined positive for both upwind and downwind rotors.
                        units: deg
                        minimum: 0
                        maximum: 50
                    cd:
                        type: number
                        description: Equivalent drag coefficient to compute the aerodynamic forces generated on the hub.
                        units: dimensionless
                        minimum: 0
                        maximum: 2.
                    elastic_properties:
                        $ref: "#/definitions/rigid_body"
                        description: Rigid body modeling the full hub system, which includes the hub, the spinner, the blade bearings, the pitch actuators, the cabling. The properties are defined in the hub-aligned coordinate system, which is centered at the rotor apex and has x aligned along the (possibly tilted) shaft, y parallel to the ground, and z pointing upwards (including the rotor tilt). The rotational inertia of the hub system is around x, so the first term of the inertia vector.
            drivetrain:
                type: object
                properties:
                    outer_shape:
                        type: object
                        description: Geometrical metrics describing the drivetrain. Currently, these are inputs to WISDEM specific drivetrain sizing tool, DrivetrainSE
                        properties:
                            uptilt:
                                type: number
                                description: Tilt angle of the nacelle, always defined positive.
                                units: deg
                                minimum: 0.
                                maximum: 20.
                                default: 5.
                            distance_tt_hub:
                                type: number
                                description: Vertical distance between the tower top and the hub center.
                                units: m
                                minimum: 0.
                                maximum: 20.
                                default: 2.0
                            distance_hub_mb:
                                type: number
                                description: Distance from hub flange to first main bearing along shaft.
                                units: m
                                minimum: 0.
                                maximum: 20.
                                default: 2.0
                            distance_mb_mb:
                                type: number
                                description: Distance from first to second main bearing along shaft.
                                units: m
                                minimum: 0.
                                maximum: 20.
                                default: 1.0
                            overhang:
                                type: number
                                description: Horizontal distance between the tower axis and the rotor apex.
                                units: m
                                minimum: 0.
                                maximum: 20.
                                default: 5.0
                            cd:
                                type: number
                                description: Equivalent drag coefficient to compute the aerodynamic forces generated on the hub.
                                units: dimensionless
                                minimum: 0
                                maximum: 2.
                    gearbox:
                        type: object
                        description: Inputs describing the gearbox, when present
                        properties: 
                            gear_ratio:
                                type: number
                                description: Gear ratio of the drivetrain. Set it to 1 for direct drive machines.
                                units: dimensionless
                                minimum: 1
                                maximum: 1000
                                default: 1.0
                            length:
                                type: number
                                description: User input override of gearbox length along shaft, only used when using gearbox_mass_user is > 0
                                units: m
                                minimum: 0.
                                maximum: 20.
                                default: 0.0
                            radius:
                                type: number
                                description: User input override of gearbox radius, only used when using gearbox_mass_user is > 0
                                units: m
                                minimum: 0.
                                maximum: 20.0
                                default: 0.0
                            mass:
                                type: number
                                description: User input override of gearbox mass
                                units: kg
                                minimum: 0.
                                maximum: 1.e+9
                                default: 0.0
                            efficiency:
                                type: number
                                description: Efficiency of the gearbox system.
                                units: dimensionless
                                minimum: 0.8
                                maximum: 1.
                                default: 1.0
                            damping_ratio:
                                type: number
                                description: Damping ratio for the drivetrain system
                                units: dimensionless
                                minimum: 0.0
                                maximum: 1.
                                default: 0.005
                            gear_configuration:
                                type: string
                                description: 3-letter string of Es or Ps to denote epicyclic or parallel gear configuration
                                default: EEP
                            planet_numbers:
                                type: array
                                default: [3, 3, 0]
                                description: Number of planets for epicyclic stages (use 0 for parallel)
                                items:
                                    type: integer
                                    units: dimensionless
                                    minItems: 3
                                    maxItems: 3
                                    uniqueItems: false
                                    minimum: 0
                                    maximum: 6
                            elastic_properties:
                                type: object
                                required:
                                    - torsional_stiffness
                                    - torsional_damping
                                properties:
                                    torsional_stiffness:
                                        type: number
                                        description: Equivalent torsional stiffness of the gearbox. This parameter is often required by aeroelastic solvers
                                        units: N*m/rad
                                        minimum: 0
                                        default: 1.E+10
                                    torsional_damping:
                                        type: number
                                        description: Equivalent torsional damping of the gearbox. This parameter is often required by aeroelastic solvers
                                        units: N*m/(rad/s)
                                        minimum: 0
                                        default: 1.E+7
                                    mass:
                                        type: number
                                        description: Mass of the component modeled as a point
                                        units: kg
                                        minimum: 0
                                    inertia:
                                        type: array
                                        description: Mass moment of inertia of the component modeled as a point. The inertia is defined at the center of mass.
                                        items:
                                            type: number
                                            units: kg*m^2
                                            minItems: 6
                                            maxItems: 6
                                            uniqueItems: false
                                    location:
                                        type: array
                                        description: Location of the rigid body with respect to the coordinate system
                                        items:
                                            type: number
                                            units: m
                                            minItems: 3
                                            maxItems: 3
                                            uniqueItems: false
                    lss:
                        type: object
                        description: Inputs describing the low speed shaft
                        properties:         
                            length:
                                type: number
                                description: Length of the low speed shaft
                                units: m
                                minimum: 0.
                                maximum: 10.
                                default: 1.5
                            diameter:
                                type: array
                                description: Diameter of the low speed shaft at beginning (generator/gearbox) and end (hub) points
                                default: [0.3, 0.3]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.3
                            wall_thickness:
                                type: array
                                description: Thickness of the low speed shaft at beginning (generator/gearbox) and end (hub) points
                                default: [0.1, 0.1]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.1
                            material:
                                type: string
                                description: Material name identifier
                                default: steel
                            elastic_properties:
                                $ref: "#/definitions/beam"
                                description: Beam modelling the low speed shaft
                    hss:
                        type: object
                        description: Inputs describing the high speed shaft, when present
                        properties:          
                            length:
                                type: number
                                description: Length of the high speed shaft
                                units: m
                                minimum: 0.
                                maximum: 10.
                                default: 1.5
                            diameter:
                                type: array
                                description: Diameter of the high speed shaft at beginning (generator) and end (generator) points
                                default: [0.3, 0.3]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.3
                            wall_thickness:
                                type: array
                                description: Thickness of the high speed shaft at beginning (generator) and end (generator) points
                                default: [0.1, 0.1]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.1
                            material:
                                type: string
                                description: Material name identifier
                                default: steel
                            elastic_properties:
                                $ref: "#/definitions/beam"
                                description: Beam modelling the high speed shaft
                    nose:
                        type: object
                        description: Inputs describing the nose/turret at beginning (bedplate) and end (main bearing) points
                        properties:
                            diameter:
                                type: array
                                description: Diameter of the nose/turret at beginning (bedplate) and end (main bearing) points
                                default: [0.3, 0.3]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.3
                            wall_thickness:
                                type: array
                                description: Thickness of the nose/turret at beginning (bedplate) and end (main bearing) points
                                default: [0.1, 0.1]
                                items:
                                    type: number
                                    units: m
                                    minItems: 2
                                    maxItems: 2
                                    default: 0.1
                            elastic_properties:
                                $ref: "#/definitions/beam"
                                description: Beam modelling the nose
                    bedplate:
                        type: object
                        description: Inputs describing the hollow elliptical bedplate used in direct drive configurations
                        properties:
                            wall_thickness:
                                type: object
                                description: Thickness of the hollow elliptical bedplate used in direct drive configurations
                                default: 
                                    grid: [0.0, 1.0] 
                                    values: [0.05, 0.05]
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            flange_width:
                                type: number
                                description: Bedplate I-beam flange width used in geared configurations
                                units: m
                                minimum: 0.
                                maximum: 3.
                                default: 1.0
                            flange_thickness:
                                type: number
                                description: Bedplate I-beam flange thickness used in geared configurations
                                units: m
                                minimum: 0.
                                maximum: 1.
                                default: 0.05
                            web_thickness:
                                type: number
                                description: Bedplate I-beam web thickness used in geared configurations
                                units: m
                                minimum: 0.
                                maximum: 1.
                                default: 0.05
                            material:
                                type: string
                                description: Material name identifier
                                default: steel
                    other_components:
                        type: object
                        description: Inputs describing all other drivetrain components, the assembly of brake, hvac, converter, transformer, and main bearings
                        properties:
                            brake_mass:
                                type: number
                                default: 0.0
                                units: kg
                                description: Override regular regression-based calculation of brake mass with this value
                                minimum: 0.0
                            hvac_mass_coefficient:
                                type: number
                                default: 0.025
                                units: kg/kW
                                description: Regression-based scaling coefficient on machine rating to get HVAC system mass
                                minimum: 0.0
                            converter_mass:
                                type: number
                                default: 0.0
                                units: kg
                                description: Override regular regression-based calculation of converter mass with this value
                                minimum: 0.0
                            transformer_mass:
                                type: number
                                default: 0.0
                                units: kg
                                description: Override regular regression-based calculation of transformer mass with this value
                                minimum: 0.0                     
                            mb1Type:
                                type: string
                                description: Type of bearing for first main bearing
                                default: CARB
                                enum: [CARB, CRB, SRB, TRB]
                            mb2Type:
                                type: string
                                description: Type of bearing for second main bearing
                                default: SRB
                                enum: [CARB, CRB, SRB, TRB]
                            uptower:
                                type: boolean
                                description: If power electronics are located uptower (True) or at tower base (False)
                                default: True                  
                            elastic_properties:
                                $ref: "#/definitions/rigid_body"
                                description: Rigid body modeling the assembly of brake, hvac, converter, transformer, and main bearings. Their inertia is defined with respect to the tower top coordinate system.
                    generator:
                      properties:
                        length:
                            type: number
                            description: Length of generator along the shaft
                            units: m
                            minimum: 0.
                            maximum: 20.
                            default: 2.0
                        radius:
                            type: number
                            description: User input override of generator radius, only used when using simple generator scaling
                            units: m
                            minimum: 0.
                            maximum: 20.0
                            default: 0.0
                        mass:
                            type: number
                            description: User input override of generator mass, only used when using simple generator mass scaling
                            units: kg
                            minimum: 0.
                            maximum: 1.e+9
                            default: 0.0                            
                        rpm_efficiency:
                            type: object
                            description: User input override of generator rpm-efficiency values, with rpm as grid input and eff as values input
                            default: 
                                grid: [0.0]
                                values: [0.0]
                            required:
                                - grid
                                - values
                            properties:
                                grid:
                                    $ref: "#/definitions/distributed_data/length"
                                values:
                                    $ref: "#/definitions/distributed_data/length"
                        elastic_properties:
                            $ref: "#/definitions/rigid_body"
                            description: Rigid body modeling the generator. The properties are defined in the generator coordinate system, which is centered at the center of the generator, and has x aligned along the shaft pointing downwind, y parallel to the ground, and z pointing upwards (tilted, if tilt is present). The rotational inertia of the generator is around the x axis.

                    elastic_properties:
                        $ref: "#/definitions/rigid_body"
                        description: Rigid body modeling the overall drivetrain, excluding hub and yaw systems. The properties are defined in the tower-top coordinate system, which is centered at the center of the tower top, and has x aligned along the prevailing wind direction, y parallel to the ground, and z pointing upwards.
            yaw:
                type: object
                description: Data describing the yaw system located at tower top.
                properties:
                    elastic_properties:
                        $ref: "#/definitions/rigid_body"
                        description: Rigid body modeling the yaw system. The properties are defined in the tower-top coordinate system, which is centered at the center of the tower top, and has x aligned along the prevailing wind direction, y parallel to the ground, and z pointing upwards.
            tower:
                type: object
                description: Data describing the wind turbine tower.
                required:
                    - reference_axis
                    - outer_shape
                properties:
                    reference_axis:
                        type: object
                        description: The aerodynamic, structural, and elastic characteristics of the wind turbine tower are defined at a common reference axis. The axis is defined with sets of `x`, `y`, and `z` points. The reference system for `x`, `y`, and `z` is located at tower base for land-based turbines and at the mean sea level for offshore turbines. `x` is parallel to the ground pointing downwind, `y` is parallel to the ground and to the rotor plane, and `z` is perpendicular to the ground pointing upwards. Standard towers are only defined along `z`. Total tower length is computed by integrating the fields x, y, and z three-dimensionally.
                        required:
                            - x
                            - y
                            - z
                        additionalProperties: False
                        properties:
                            x:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            y:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            z:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                    outer_shape:
                        type: object
                        required:
                            - outer_diameter
                            - cd
                        properties:
                            outer_diameter: 
                                type: object
                                description: Outer diameters of the tower defined from base (grid = 0) to top (grid = 1).
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            cd:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                    structure:
                        type: object
                        optional:
                            - layers
                            - outfitting_factor
                            - elastic_properties
                        properties:
                            outfitting_factor:
                                type: number
                                description: Multiplier of tower mass to account for the mass of the auxiliary systems, such as stairs, elevator, paint, or extra structural elements. This can be used to convert the mass of the steel cylinders to the total mass of the monopile.
                                units: dimensionless
                                minimum: 1.0
                                maximum: 2.0
                                default: 1.0
                            layers:
                                type: array
                                description: ...
                                items:
                                    type: object
                                    required:
                                        - name
                                        - material
                                        - thickness
                                    properties:
                                        name:
                                            type: string
                                            description: structural component identifier
                                        material:
                                            type: string
                                            description: material identifier
                                        thickness:
                                            type: object
                                            description: thickness of the laminate
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                            elastic_properties:
                                $ref: "#/definitions/beam"
            monopile:
                type: object
                required:
                    - reference_axis
                    - outer_shape
                optional:
                    - transition_piece_mass
                    - transition_piece_cost
                    - gravity_foundation_mass
                properties:
                    transition_piece_mass: &m_tp
                        type: number
                        description: Total mass of transition piece
                        units: kg
                        minimum: 0.0
                        default: 0.0
                    transition_piece_cost: &c_tp
                        type: number
                        description: Total cost of transition piece
                        units: USD
                        minimum: 0.0
                        default: 0.0
                    gravity_foundation_mass: &g_fm
                        type: number
                        description: Total mass of gravity foundation addition onto monopile
                        units: kg
                        minimum: 0.0
                        default: 0.0
                    reference_axis:
                        type: object
                        description: The hydrodynamic, structural, and elastic characteristics of the wind turbine monopile are defined at a common reference axis. The axis is defined with sets of `x`, `y`, and `z` points. The reference system for `x`, `y`, and `z` is located at the mean sea level. `x` is parallel to the sea level pointing downwind, `y` is parallel to the sea level and to the rotor plane, and `z` is perpendicular to the sea level pointing upwards. Standard monopiles are only defined along `z`. Total monopile length is computed by integrating the fields x, y, and z three-dimensionally.
                        required:
                            - x
                            - y
                            - z
                        additionalProperties: False
                        properties:
                            x:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            y:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            z:
                                type: object
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                    outer_shape:
                        type: object
                        required:
                            - outer_diameter
                            - cd
                        properties:
                            outer_diameter:
                                type: object
                                description: Outer diameters of the monopile defined from base (grid = 0) to top (grid = 1).
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/length"
                            ca:
                                type: object
                                description: Added mass coefficient for the monopile defined in terms of grid and values that default to 1.
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        type: array
                                        default: [1.0, 1.0]
                                        items:
                                            type: number
                                            units: dimensionless
                                            minItems: 2
                                            uniqueItems: false
                            cd:
                                type: object
                                description: Drag coefficient for the monopile
                                required:
                                    - grid
                                    - values
                                properties:
                                    grid:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                                    values:
                                        $ref: "#/definitions/distributed_data/grid_nd"
                    structure:
                        type: object
                        optional:
                            - layers
                            - outfitting_factor
                            - elastic_properties
                        properties:
                            outfitting_factor:
                                type: number
                                description: Multiplier of monopile mass to account for the mass of the auxiliary systems, such as paint or extra structural elements. This can be used to convert the mass of the steel cylinders to the total mass of the monopile.
                                units: dimensionless
                                minimum: 1.0
                                maximum: 2.0
                                default: 1.0
                            layers:
                                type: array
                                description: ...
                                items:
                                    type: object
                                    required:
                                        - name
                                        - material
                                        - thickness
                                    properties:
                                        name:
                                            type: string
                                            description: structural component identifier
                                        material:
                                            type: string
                                            description: material identifier
                                        thickness:
                                            type: object
                                            description: thickness of the laminate
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                            elastic_properties:
                                $ref: "#/definitions/beam"
            jacket:
                type: object
                required:
                    - n_bays
                    - n_legs
                    - r_foot
                    - r_head
                    - height
                    - leg_diameter
                    - leg_thickness
                    - brace_diameters
                    - brace_thicknesses
                optional:
                    - material
                    - transition_piece_mass
                    - transition_piece_cost
                    - gravity_foundation_mass
                properties:
                    transition_piece_mass: *m_tp
                    transition_piece_cost: *c_tp
                    gravity_foundation_mass: *g_fm
                    material:
                        type: string
                        description: Material of jacket members
                        default: steel
                    n_bays:
                        type: integer
                        description: Number of bays (x-joints) in the vertical direction for jackets.
                    n_legs:
                        type: integer
                        description: Number of legs for jacket.
                    r_foot:
                        type: number
                        description: Radius of foot (bottom) of jacket, in meters.
                    r_head:
                        type: number
                        description: Radius of head (top) of jacket, in meters.
                    height:
                        type: number
                        description: Overall jacket height, meters.
                    leg_thickness:
                        type: number
                        description: Leg thickness, meters. Constant throughout each leg.
                    brace_diameters:
                        $ref: "#/definitions/distributed_data/length"
                    brace_thicknesses:
                        $ref: "#/definitions/distributed_data/length"
                    bay_spacing:
                        $ref: "#/definitions/distributed_data/grid_nd"
                    leg_spacing:
                        $ref: "#/definitions/distributed_data/grid_nd"
                    x_mb:
                        type: boolean
                        description: Mud brace included if true.
                    leg_diameter:
                        type: number
                        description: Leg diameter, meters. Constant throughout each leg.
            floating_platform:
                description: The floating platform ontology uses a *graph*-like representation of the geometry with Joints and Members.  Additional rigid body point masses can be defined at the joints as well.
                type: object
                required:
                    - joints
                    - members
                optional:
                    - rigid_bodies
                    - transition_piece_mass
                    - transition_piece_cost
                properties:
                    joints:
                        type: array
                        description: Joints are the *nodes* of the graph representation of the floating platform.  They must be assigned a unique name for later reference by the members.
                        items:
                            type: object
                            required:
                                - name
                                - location
                            optional:
                                - reactions
                                - transition
                                - cylindrical
                            properties:
                                name:
                                    description: Unique name of the joint (node)
                                    type: string
                                location:
                                    description: Coordinates (x,y,z or r,θ,z) of the joint in the global coordinate system.
                                    type: array
                                    items:
                                        type: number
                                        minItems: 3
                                        maxItems: 3
                                        units: m
                                transition:
                                    description: Whether the transition piece and turbine tower attach at this node
                                    type: boolean
                                    default: False
                                cylindrical:
                                    description: Whether to use cylindrical coordinates (r,θ,z), with (r,θ) lying in the x/y-plane, instead of Cartesian coordinates.
                                    type: boolean
                                    default: False
                                reactions:
                                    # TODO: How to do carabiner type joints that only support tension and not compression?
                                    type: object
                                    description: If this joint is compliant is certain DOFs, then specify which are compliant (True) in the member/element coordinate system).  If not specified, default is all entries are False (completely rigid).  For instance, a ball joint would be Rx=Ry=Rz=False, Rxx=Ryy=Rzz=True
                                    required:
                                        - Rx
                                        - Ry
                                        - Rz
                                        - Rxx
                                        - Ryy
                                        - Rzz
                                    optional:
                                        - Euler
                                    properties:
                                        Rx: &rxn_loc
                                            type: boolean
                                            default: False
                                        Ry: *rxn_loc
                                        Rz: *rxn_loc
                                        Rxx: *rxn_loc
                                        Ryy: *rxn_loc
                                        Rzz: *rxn_loc
                                        Euler:
                                            description: Euler angles [alpha, beta, gamma] that describe the rotation of the Reaction coordinate system relative to the global coordinate system α is a rotation around the z axis, β is a rotation around the x' axis, γ is a rotation around the z" axis.
                                            type: array
                                            items:
                                                type: number
                                                minItems: 3
                                                maxItems: 3
                    members:
                        type: array
                        items:
                            type: object
                            required:
                                - name
                                - joint1
                                - joint2
                                - outer_shape
                                - structure
                            optional:
                                # TODO: Move these to the modeling file?
                                - ca
                                - cp
                                - cd
                            properties:
                                name:
                                    description: Name of the member
                                    type: string
                                joint1: &jointid
                                    type: string
                                    description: Name of joint/node connection
                                joint2: *jointid
                                outer_shape:
                                    type: object
                                    required:
                                        - shape
                                    if:
                                        # If shape == circular, then we need to specify the outer diameter
                                        properties:
                                            shape:
                                                const: circular
                                    then:
                                        required:
                                            - outer_diameter
                                    else:
                                        if:
                                            # If shape == rectangular, then we need to specify the side lengths
                                            properties:
                                                shape:
                                                    const: rectangular
                                        then:
                                            required:
                                                - side_lengths_a
                                                - side_lengths_b
                                            # TODO: Might add rotation in the future, ignore for now
                                        else:
                                            if:
                                                # If shape == polygonal, then we need to specify the side lengths
                                                properties:
                                                    shape:
                                                        const: polygonal
                                            then:
                                                required:
                                                    - side_lengths1
                                                    - side_lengths2
                                                optional:
                                                    - rotation
                                                    - angles
                                    properties:
                                        shape:
                                            type: string
                                            description: Specifies cross-sectional shape of the member.  If circular, then the outer_diameter field is required.  If polygonal, then the side_lengths, angles, and rotation fields are required
                                            enum:
                                                - circular
                                                - rectangular
                                                - polygonal
                                        outer_diameter:
                                            description: Gridded values describing diameter at non-dimensional axis from joint1 to joint2
                                            type: object
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                                        side_length_a:
                                            description: Gridded values describing side length a for rectangular members at non-dimensional axis from joint1 to joint2
                                            type: object
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                                        side_length_b:
                                            description: Gridded values describing side length b for rectangular members at non-dimensional axis from joint1 to joint2
                                            type: object
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_nd"
                                                values:
                                                    $ref: "#/definitions/distributed_data/length"
                                        side_lengths1: &sl
                                            description: Polygon side lengths at joint1
                                            type: array
                                            items:
                                                type: number
                                                minItems: 3
                                                units: m
                                                minimum: 0
                                        side_lengths2: *sl
                                            # description: Polygon side lengths at joint2
                                        angles:
                                            description: Polygon angles with the ordering such that angle[i] is between side_length[i] and side_length[i+1]
                                            type: array
                                            items:
                                                type: number
                                                minItems: 3
                                                units: deg
                                                minimum: 0
                                        rotation:
                                            type: number
                                            description: Angle between principle axes of the cross-section and the member coordinate system.  Essentially the rotation of the member if both joints were placed on the global x-y axis with the first side length along the z-axis
                                            units: deg
                                structure:
                                    # additionalProperties: True
                                    type: object
                                    required:
                                        - layers
                                    optional:
                                        - outfitting_factor
                                        - ring_stiffeners
                                        - longitudinal_stiffeners
                                        - bulkhead
                                        - ballast
                                        - flooded
                                    properties:
                                        outfitting_factor:
                                            type: number
                                            description: Scaling factor for the member mass to account for auxiliary structures, such as elevator, ladders, cables, platforms, fasteners, etc
                                            units: dimensionless
                                            minimum: 1.0
                                            default: 1.0
                                        layers:
                                            type: array
                                            description: Material layer properties
                                            items:
                                                type: object
                                                required:
                                                    - name
                                                    - material
                                                    - thickness
                                                properties:
                                                    name:
                                                        type: string
                                                        description: structural component identifier
                                                    material: &material
                                                        type: string
                                                        description: material identifier
                                                    thickness:
                                                        description: Gridded values describing thickness along non-dimensional axis from joint1 to joint2
                                                        type: object
                                                        required:
                                                            - grid
                                                            - values
                                                        properties:
                                                            grid:
                                                                $ref: "#/definitions/distributed_data/grid_nd"
                                                            values:
                                                                $ref: "#/definitions/distributed_data/length"
                                        ring_stiffeners:
                                            type: object
                                            required:
                                                - material
                                                - flange_thickness
                                                - flange_width
                                                - web_height
                                                - web_thickness
                                                - spacing
                                            properties:
                                                material: *material
                                                flange_thickness: &stiff_ft
                                                    type: number
                                                    units: m
                                                    minimum: 0
                                                flange_width: &stiff_fw
                                                    type: number
                                                    units: m
                                                    minimum: 0
                                                web_height: &stiff_wh
                                                    type: number
                                                    units: m
                                                    minimum: 0
                                                web_thickness: &stiff_wt
                                                    type: number
                                                    units: m
                                                    minimum: 0
                                                spacing:
                                                    type: number
                                                    description: Spacing between stiffeners in non-dimensional grid coordinates. Value of 0.0 means no stiffeners
                                                    units: dimensionless
                                                    minimum: 0.0
                                                    maximum: 1.0
                                                    default: 0.0
                                        longitudinal_stiffeners:
                                            type: object
                                            required:
                                                - material
                                                - flange_thickness
                                                - flange_width
                                                - web_height
                                                - web_thickness
                                                - spacing
                                            properties:
                                                material: *material
                                                flange_thickness: *stiff_ft
                                                flange_width: *stiff_fw
                                                web_height: *stiff_wh
                                                web_thickness: *stiff_wt
                                                spacing:
                                                    type: number
                                                    description: Spacing between stiffeners in angle (deg). Value of 0.0 means no stiffeners
                                                    units: deg
                                                    default: 90
                                                    minimum: 0.0
                                                    maximum: 360
                                        bulkhead:
                                            type: object
                                            required:
                                                - material
                                                - thickness
                                            properties:
                                                material: *material
                                                thickness:
                                                    type: object
                                                    description: thickness of the bulkhead at non-dimensional locations of the member [0..1]
                                                    required:
                                                        - grid
                                                        - values
                                                    properties:
                                                        grid:
                                                            $ref: "#/definitions/distributed_data/grid_nd"
                                                        values:
                                                            $ref: "#/definitions/distributed_data/length"
                                        ballast:
                                            type: array
                                            description: Different types of permanent and/or variable ballast
                                            items:
                                                type: object
                                                required:
                                                    - variable_flag
                                                    - grid
                                                if:
                                                    # If permanent ballast, then need to specify total volume
                                                    properties:
                                                        variable_flag:
                                                            const: False
                                                then:
                                                    required:
                                                        - material
                                                        - volume
                                                properties:
                                                    variable_flag:
                                                        type: boolean
                                                        description: If true, then this ballast is variable and adjusted by control system.  If false, then considered permanent
                                                    material: *material
                                                    grid:
                                                        $ref: "#/definitions/distributed_data/grid_nd"
                                                    volume:
                                                        type: number
                                                        description: Total volume of ballast (permanent ballast only)
                                                        units: m^3
                                                        minimum: 0
                                        flooded:
                                            type: boolean
                                            default: False
                                            description: Flag that defines whether a floater member is flooded or not.
                                axial_joints:
                                    description: Additional joints that are defined along the non-dimensional member axis can be defined here.  Unlike the joints defined in the global coordinate system in the `joints` section of the ontology, these joints will change their absolute (x,y,z) location if the member diameter is altered the or `joint1` or `joint2` locations are changed during an optimization.  This is especially useful when designing a truss-like structure with pontoons attaching to primary members or columns in a semisubmersible. Like the joints above, these must be given a unique name.
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - grid
                                            - name
                                        properties:
                                            name:
                                                type: string
                                                description: Unique name of joint
                                            grid:
                                                type: number
                                                minimum: 0.0
                                                maximum: 1.0
                                                description: Non-dimensional value along member axis
                                Ca: &ca
                                    description: User-defined added mass coefficient if axi-symmetric or user-defined added mass coefficient in x-direction
                                    oneOf:
                                        - type: number
                                          default: -1.0
                                          minimum: 0
                                        - type: array
                                          default: [-1.0] # default -1.0 so it will be deactivated when defaulting to -1.0
                                          items:
                                            type: number
                                            minimum: -1.0
                                    default: [-1.0]
                                Cay:
                                    <<: *ca
                                    description: User-defined added mass coefficient in y-direction
                                Cp: &cp
                                    description: User-defined pressure coefficient
                                    type: number
                                    default: 0.0
                                Cd: &cd
                                    <<: *ca
                                    description: User-defined drag coefficient if axi-symmetric or user-defined drag coefficient in x-direction
                                Cdy:
                                    <<: *cd
                                    description: User-defined drag coefficient in y-direction                
                    rigid_bodies:
                        type: array
                        description: Additional point masses at joints with user-customized properties
                        default: []
                        items:
                            type: object
                            required:
                                - joint1
                                - mass
                                - cost
                                - cm_offset
                                - moments_of_inertia
                            optional:
                                - ca
                                - cp
                                - cd
                            properties:
                                joint1: *jointid
                                mass:
                                    description: Mass of this rigid body
                                    units: kg
                                    type: number
                                    minimum: 0
                                cost:
                                    description: Cost of this rigid body
                                    units: USD
                                    type: number
                                    minimum: 0
                                cm_offset:
                                    description: Offset from joint location to center of mass (CM) of body in dx, dy, dz
                                    type: array
                                    items:
                                        type: number
                                        units: m
                                        maxItems: 3
                                        minItems: 3
                                moments_of_inertia:
                                    description: Moments of inertia around body CM in Ixx, Iyy, Izz
                                    type: array
                                    items:
                                        type: number
                                        units: kg*m^2
                                        maxItems: 3
                                        minItems: 3
                                        minimum: 0
                                ca: *ca
                                cp: *cp
                                cd: *cd
                    transition_piece_mass: *m_tp
                    transition_piece_cost: *c_tp
            mooring:
                description: The mooring system ontology follows closely the input file format for MoorDyn or MAP++.  Additional information can be found in the `MoorDyn user guide <http://www.matt-hall.ca/files/MoorDyn-Users-Guide-2017-08-16.pdf>`_ .
                type: object
                required:
                    - nodes
                    - lines
                    - line_types
                    - anchor_types
                properties:
                    nodes:
                        type: array
                        description: List of nodes in the mooring system
                        items:
                            type: object
                            required:
                                - name
                                - node_type
                            optional:
                                - node_mass
                                - node_volume
                                - drag_area
                                - added_mass
                            if:
                                # If node_type == fixed, then we need to specify the anchor_type
                                properties:
                                    node_type:
                                        const: fixed
                            then:
                                required:
                                    - anchor_type
                                    - joint
                            else:
                                if:
                                    # If node_type == vessel, then we need to specify the fairlead_type
                                    properties:
                                        node_type:
                                            const: vessel
                                then:
                                    required:
                                        - fairlead_type
                                        - joint
                                else:
                                    required:
                                        - location
                            properties:
                                name:
                                    type: string
                                    description: Name or ID of this node for use in line segment
                                node_type:
                                    type: string
                                    enum:
                                        - fixed
                                        - fix
                                        - connection
                                        - connect
                                        - free
                                        - vessel
                                location:
                                    type: array
                                    description: – Coordinates x, y, and z of the connection (relative to inertial reference frame if Fixed or Connect, relative to platform reference frame if Vessel). In the case of Connect nodes, it is simply an initial guess for position before MoorDyn calculates the equilibrium initial position.
                                    items:
                                        type: number
                                        units: m
                                        minItems: 3
                                        maxItems: 3
                                joint:
                                    type: string
                                    description: For anchor positions and fairlead attachments, reference a joint name from the "joints" section or an "axial_joint" on a member
                                    default: none
                                anchor_type:
                                    type: string
                                    description: Name of anchor type from anchor_type list
                                    default: none
                                fairlead_type:
                                    type: string
                                    enum:
                                        - rigid
                                        - actuated
                                        - ball
                                    default: rigid
                                node_mass:
                                    type: number
                                    units: kg
                                    description: Clump weight mass
                                    minimum: 0.0
                                    default: 0.0
                                node_volume:
                                    type: number
                                    units: m^3
                                    description: Floater volume
                                    minimum: 0.0
                                    default: 0.0
                                drag_area:
                                    type: number
                                    units: m^2
                                    description: Product of drag coefficient and projected area (assumed constant in all directions) to calculate a drag force for the node
                                    minimum: 0.0
                                    default: 0.0
                                added_mass:
                                    type: number
                                    description: Added mass coefficient used along with node volume to calculate added mass on node
                                    default: 0.0
                    lines:
                        type: array
                        description: List of all mooring line properties in the mooring system
                        items:
                            type: object
                            required:
                                - name
                                - line_type
                                - unstretched_length
                                - node1
                                - node2
                            properties:
                                name:
                                    type: string
                                    description: ID of this line
                                line_type:
                                    type: string
                                    description: Reference to line type database # PB: is this a material? if so I'd call it simply material #GB: I tried to get the group to just add mooring line types to the materials database, but they pushed back.  Mooring line properties from manufacturers and for analysis are usually reported per unit length.  Both Matt Hall and Jason really like the current MoorDyn/MAP input file and don't want to change that on the users.
                                unstretched_length:
                                    type: number
                                    units: m
                                    description: length of line segment prior to tensioning
                                    minimum: 0.0
                                node1:
                                    type: string
                                    description: node id of first line connection
                                node2:
                                    type: string
                                    description: node id of second line connection
                    line_types:
                        type: array
                        description: List of mooring line properties used in the system
                        items:
                            type: object
                            required:
                                - name
                                - diameter
                                - type
                            optional:
                                - damping
                                - transverse_added_mass
                                - tangential_added_mass
                                - transverse_drag
                                - tangential_drag
                            if:
                                # If type == custom, then we need all of the details
                                properties:
                                    type:
                                        const: custom
                            then:
                                required:
                                    - mass_density
                                    - stiffness
                                    - breaking_load
                                    - cost
                            properties:
                                name:
                                    type: string
                                    description: Name of material or line type to be referenced by line segments
                                diameter:
                                    type: number
                                    units: m
                                    description: the volume-equivalent diameter of the line – the diameter of a cylinder having the same displacement per unit length
                                    minimum: 0.0
                                type:
                                    type: string
                                    enum: [chain, chain_stud, nylon, polyester, polypropylene, wire_fiber, fiber, wire, wire_wire, iwrc, Chain, Chain_Stud, Nylon, Polyester, Polypropylene, Wire, Wire_Fiber, Fiber, Wire_Wire, IWRC, CHAIN, CHAIN_STUD, NYLON, POLYESTER, POLYPROPYLENE, WIRE, WIRE_FIBER, FIBER, IRE_WIRE, custom, Custom, CUSTOM]
                                    description: Type of material for property lookup
                                mass_density:
                                    type: number
                                    units: kg/m
                                    description: mass per unit length (in air)
                                    minimum: 0.0
                                stiffness:
                                    type: number
                                    units: N
                                    description: axial line stiffness, product of elasticity modulus and cross-sectional area
                                    minimum: 0.0
                                cost:
                                    type: number
                                    units: USD/m
                                    description: cost per unit length
                                    minimum: 0.0
                                breaking_load:
                                    type: number
                                    units: N
                                    description: line break tension
                                    minimum: 0.0
                                damping:
                                    type: number
                                    units: N*s
                                    description: internal damping (BA)
                                    default: 0.0
                                transverse_added_mass:
                                    type: number
                                    description: transverse added mass coefficient (with respect to line displacement)
                                    minimum: 0.0
                                    default: 0.0
                                tangential_added_mass:
                                    type: number
                                    description: tangential added mass coefficient (with respect to line displacement)
                                    minimum: 0.0
                                    default: 0.0
                                transverse_drag:
                                    type: number
                                    description: transverse drag coefficient (with respect to frontal area, d*l)
                                    minimum: 0.0
                                    default: 0.0
                                tangential_drag:
                                    type: number
                                    description: tangential drag coefficient (with respect to surface area, π*d*l)
                                    minimum: 0.0
                                    default: 0.0
                    anchor_types:
                        type: array
                        description: List of anchor properties used in the system
                        items:
                            type: object
                            required:
                                - name
                                - type
                            if:
                                # If type == custom, then we need all of the details
                                properties:
                                    type:
                                        const: custom
                            then:
                                required:
                                    - mass
                                    - cost
                                    - max_lateral_load
                                    - max_vertical_load
                            properties:
                                name:
                                    type: string
                                    description: Name of anchor to be referenced by anchor_id in Nodes section
                                type:
                                    type: string
                                    enum: [drag_embedment, suction, plate, micropile, sepla, Drag_Embedment, Suction, Plate, Micropile, Sepla, DRAG_EMBEDMENT, SUCTION, PLATE, MICROPILE, SEPLA, custom, Custom, CUSTOM]
                                    description: Type of anchor for property lookup
                                mass:
                                    type: number
                                    units: kg
                                    description: mass of the anchor
                                    minimum: 0.0
                                cost:
                                    type: number
                                    units: USD
                                    description: cost of the anchor
                                    minimum: 0.0
                                max_lateral_load:
                                    type: number
                                    units: N
                                    description: Maximum lateral load (parallel to the sea floor) that the anchor can support
                                    minimum: 0.0
                                max_vertical_load:
                                    type: number
                                    units: N
                                    description: Maximum vertical load (perpendicular to the sea floor) that the anchor can support
                                    minimum: 0.0
    airfoils:
        type: array
        description: Database of airfoils. windIO describes the airfoils in terms of coordinates, polars, and unsteady aerodynamic coefficients. The yaml entry airfoils consists of a list of elements. For each set of coordinates, multiple sets of polars and parameters can co-exist. Note that the airfoils listed in this database are not all necessarily used in the blade. Only the ones called in `airfoils' within `outer_shape` of the `component` `blade` will actually be loaded to model the blade.
        items:
            # additionalProperties: True
            type: object
            properties:
                name:
                    type: string
                    description: Name of the airfoil
                description: 
                    type: string
                    description: Text documenting airfoil data
                coordinates:
                    type: object
                    description: The airfoil `coordinates` are specified here in the sub-fields `x` and `y`. `x` and `y` must have the same length. `x` must be defined between 0, which corresponds to the leading edge, and 1, which corresponds to the trailing edge. Airfoil coordinates should be defined from trailing edge (`x=1`) towards the suction side (mostly positive `y` values), to leading edge (`x=0`, `y=0`), to the pressure side (mostly negative `y`), and conclude at the trailing edge pressure side (`x=1`). Flatback airfoils can be defined either open (`x=1`, `y!=0`) or closed (`x=1`, `y=0`).
                    required:
                        - x
                        - y
                    properties:
                        x:
                            type: array
                            items:
                                type: number
                                units: dimensionless
                                minItems: 3
                                minimum: 0.0
                                maximum: 1.0
                                uniqueItems: false
                        y:
                            type: array
                            items:
                                type: number
                                units: dimensionless
                                minItems: 3
                                minimum: -1.0
                                maximum: 1.0
                                uniqueItems: false
                rthick:
                    type: number
                    units: dimensionless
                    minimum: 0
                    maximum: 1
                    description: Float defined between 0 (plate) and 1 (cylinder) to specify the relative thickness of the airfoil. This generates a small redundancy (airfoil thickness could be determined from the field coordinates), but it simplifies the converters.
                aerodynamic_center:
                    type: number
                    units: dimensionless
                    minimum: 0
                    maximum: 1
                    description: Float defined between 0 (leading edge) and 1 (trailing edge) to specify the chordwise coordinate of the aerodynamic center used to define the polars.
                polars:
                    type: array
                    description: Different sets of polars at varying conditions. 
                    items:
                        type: object
                        properties:
                            configuration:
                                type: string
                                description: Tag to identify the set polars that can be called in `blade`
                            description:
                                type: string
                                description: Text to identify the setup for the definition of the polars
                            re_sets:
                                type: array
                                description: Sets of polars at varying Reynolds. For each set, Reynolds number, lift, drag, and moment coefficients must be provided. Optionally, unsteady aerodynamic coefficients can be listed.
                                items:
                                    type: object
                                    required:
                                        - re
                                        - cl
                                        - cd
                                        - cm
                                    properties:
                                        re:
                                            type: number
                                            description: Reynolds number of the polars
                                            minimum: 0
                                        cl:
                                            type: object
                                            description: Lift coefficient as a function of angle of attack (deg)
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_aoa"
                                                values:
                                                    $ref: "#/definitions/distributed_data/polar_coeff"
                                        cd:
                                            type: object
                                            description: Drag coefficient as a function of angle of attack (deg)
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_aoa"
                                                values:
                                                    $ref: "#/definitions/distributed_data/polar_coeff"
                                        cm:
                                            type: object
                                            description: Moment coefficient as a function of angle of attack (deg)
                                            required:
                                                - grid
                                                - values
                                            properties:
                                                grid:
                                                    $ref: "#/definitions/distributed_data/grid_aoa"
                                                values:
                                                    $ref: "#/definitions/distributed_data/polar_coeff"
                                        aoa0:
                                            type: number
                                            description: 0-lift angle of attack
                                            units: deg
                                        aoa1:
                                            type: number
                                            description: Angle of attack at f=0.7, (approximately the stall angle) for AOA>alpha0
                                            units: deg
                                        aoa2:
                                            type: number
                                            description: Angle of attack at f=0.7, (approximately the stall angle) for AOA<alpha0
                                            units: deg
                                        eta_e:
                                            type: number
                                            description: Recovery factor in the range [0.85 - 0.95]
                                            default: 1.
                                        c_nalpha:
                                            type: number
                                            description: Slope of the 2D normal force coefficient curve
                                            units: 1/rad
                                            minimum: 0.
                                        T_f0:
                                            type: number
                                            description: Initial value of the time constant associated with Df in the expression of Df and f. [default = 3]
                                            default: 3.
                                            minimum: 0.
                                        T_V0:
                                            type: number
                                            description: Initial value of the time constant associated with the vortex lift decay process; it is used in the expression of Cvn. It depends on Re,M, and airfoil class. [default = 6]
                                            default: 6.
                                            minimum: 0.
                                        T_p:
                                            type: number
                                            description: Boundary-layer,leading edge pressure gradient time constant in the expression of Dp. It should be tuned based on airfoil experimental data. [default = 1.7]
                                            default: 1.7
                                            minimum: 0.
                                        T_VL:
                                            type: number
                                            description: Initial value of the time constant associated with the vortex advection process; it represents the non-dimensional time in semi-chords, needed for a vortex to travel from LE to trailing edge (TE); it is used in the expression of Cvn. It depends on Re, M (weakly), and airfoil. [valid range = 6 - 13, default = 11]
                                            default: 11
                                            minimum: 6.
                                            maximum: 13.
                                        b1:
                                            type: number
                                            description: Constant in the expression of phi_alpha^c and phi_q^c.  This value is relatively insensitive for thin airfoils, but may be different for turbine airfoils. [from experimental results, defaults to 0.14]
                                            default: 0.14
                                        b2:
                                            type: number
                                            description: Constant in the expression of phi_alpha^c and phi_q^c.  This value is relatively insensitive for thin airfoils, but may be different for turbine airfoils. [from experimental results, defaults to 0.53]
                                            default: 0.53
                                        # b5:
                                        #     type: number
                                        #     description: Constant in the expression of K'''_q,cm_q^nc, and k_m,q.  [from  experimental results, defaults to 5]
                                        #     default: 5.
                                        A1:
                                            type: number
                                            description: Constant in the expression of phi_alpha^c and phi_q^c.  This value is relatively insensitive for thin airfoils, but may be different for turbine airfoils. [from experimental results, defaults to 0.3]
                                            default: 0.3
                                        A2:
                                            type: number
                                            description: Constant in the expression of phi_alpha^c and phi_q^c.  This value is relatively insensitive for thin airfoils, but may be different for turbine airfoils. [from experimental results, defaults to 0.7]
                                            default: 0.7
                                        A5:
                                            type: number
                                            description: Constant in the expression of K'''_q,cm_q^nc, and k_m,q. [from experimental results, defaults to 1]
                                            default: 1.
                                        S1:
                                            type: number
                                            description: Constant in the f curve best-fit for alpha0<=AOA<=alpha1; by definition it depends on the airfoil.
                                            default: 0.
                                        S2:
                                            type: number
                                            description: Constant in the f curve best-fit for AOA> alpha1; by definition it depends on the airfoil.
                                            default: 0.
                                        S3:
                                            type: number
                                            description: Constant in the f curve best-fit for alpha2<=AOA< alpha0; by definition it depends on the airfoil.
                                            default: 0.
                                        S4:
                                            type: number
                                            description: Constant in the f curve best-fit for AOA< alpha2; by definition it depends on the airfoil.
                                            default: 0.
                                        cn1:
                                            type: number
                                            description: Critical value of C0n at leading edge separation. It should be extracted from airfoil data at a given Mach and Reynolds number. It can be calculated from the static value of Cn at either the break in the pitching moment or the loss of chord force at the onset of stall. It is close to the condition of maximum lift of the airfoil at low Mach numbers.
                                        cn2:
                                            type: number
                                            description: As Cn1 for negative AOAs
                                        St_sh:
                                            type: number
                                            description: Strouhal's shedding frequency constant. [default = 0.19]
                                            default: 0.19
                                        cd0:
                                            type: number
                                            description: 2D drag coefficient value at 0-lift.
                                        cm0:
                                            type: number
                                            description: 2D pitching moment coefficient about 1/4-chord location, at 0-lift, positive if nose up.
                                            default: 0.
                                        k0:
                                            type: number
                                            description: Constant in the \hat(x)_cp curve best-fit; = (\hat(x)_AC-0.25).
                                            default: 0.
                                        k1:
                                            type: number
                                            description: Constant in the \hat(x)_cp curve best-fit.
                                            default: 0.
                                        k2:
                                            type: number
                                            description: Constant in the \hat(x)_cp curve best-fit.
                                            default: 0.
                                        k3:
                                            type: number
                                            description: Constant in the \hat(x)_cp curve best-fit.
                                            default: 0.
                                        k1_hat:
                                            type: number
                                            description: Constant in the expression of Cc due to leading edge vortex effects.
                                            default: 0.
                                        x_cp_bar:
                                            type: number
                                            description: Constant in the expression of \hat(x)_cp^v. [default = 0.2]
                                            default: 0.2
                                        UACutout:
                                            type: number
                                            description: Angle of attack above which unsteady aerodynamics are disabled (deg). [Specifying the string "Default" sets UACutout to 45 degrees]
                                            units: deg
                                            default: 45
                                        filtCutOff:
                                            type: number
                                            description: Cut-off frequency (-3 dB corner frequency) for low-pass filtering the AoA input to UA, as well as the 1st and 2nd derivatives (Hz) [default = 20]
                                            units: Hz
                                            default: 20
    materials:
        type: array
        description: Database of the materials. The schema enforces that the fields `name`, `orth`, `rho`, `E`, and `nu` are specified. For composites, direction 1 is aligned with the main fiber direction, direction 2 is in the plane transverse to the fibers, and direction 3 is perspendicular to the laminate plane. Note that fiber angles are specified in `structure` of the `component` `blade`.
        items:
            type: object
            required:
                - name
                - orth
                - rho
                - E
                - nu
            properties:
                name:
                    type: string
                    description: Name of the material
                description:
                    type: string
                    description: Optional string to describe the origin of the material, for example referencing a report or a paper
                source:
                    type: string
                    description: Optional field describing where the data come from
                orth:
                    type: integer
                    description: Flag specifying whether a material is isotropic (0) or orthotropic (1). This determines whether some of the fields below are specified as a float or an array of floats.
                rho:
                    description: Density of the material. For composites, this is the density of the laminate once cured.
                    type: number
                    units: kg/m^3
                    minimum: 0
                    maximum: 20000
                E:
                    description: Stiffness modulus. For orthotropic materials, it consists of an array with E11, E22, and E33.
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                G:
                    description: Shear stiffness modulus. For orthotropic materials, it consists of an array with G12, G13, and G23.
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                nu:
                    description: Poisson ratio. For orthotropic materials, it consists of an array with nu12, nu13 and nu23. For isotropic materials, a minimum of -1 and a maximum of 0.5 are imposed. No limits are imposed to anisotropic materials.
                    oneOf:
                        - type: number
                          units: dimensionless
                          minimum: -1.
                          maximum: 0.5
                        - type: array
                          items:
                            type: number
                            units: dimensionless
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                alpha:
                    description: Thermal coefficient of expansion. For orthotropic materials, it consists of an array with alpha11, alpha22, and alpha33.
                    oneOf:
                        - type: number
                          units: 1/K
                        - type: array
                          items:
                            type: number
                            units: 1/K
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                Xt:
                    description: Ultimate tensile strength. For orthotropic materials, it consists of an array with Xt11, Xt22, and Xt33.
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                Xc:
                    description: Ultimate compressive strength. For orthotropic materials, it consists of an array with Xc11, Xc22, and Xc33. Values are defined positive.
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                Xy:
                    description: Ultimate yield strength for metals. For orthotropic materials, it consists of an array with the strength in directions 12, 13 and 23
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                S:
                    description: Ultimate shear strength. For orthotropic materials, it consists of an array with the strength in directions 12, 13 and 23. Values are defined positive.
                    oneOf:
                        - type: number
                          units: Pa
                          minimum: 0
                        - type: array
                          items:
                            type: number
                            units: Pa
                            minItems: 3
                            maxItems: 3
                            uniqueItems: false
                            minimum: 0
                ply_t:
                    type: number
                    description: Ply thickness of a composite material. The unit of measure is m. The actual laminate thickness is defined in the fields `components`.
                    units: m
                    minimum : 0
                    maximum: 0.1
                unit_cost:
                    type: number
                    description: Unit cost of the material. For composites, this is the unit cost of the dry fabric.
                    units: USD/kg
                    minimum : 0
                    maximum: 1000
                fvf:
                    type: number
                    description: Fiber volume fraction of a composite material. The minimum values is 0 (only matrix), the maximum value is 1 (only fibers).
                    units: dimensionless
                    minimum : 0
                    maximum: 1
                fwf:
                    type: number
                    description: Fiber weight fraction of a composite material. The minimum values is 0 (only matrix), the maximum value is 1 (only fibers).
                    units: dimensionless
                    minimum : 0
                    maximum: 1
                fiber_density:
                    type: number
                    description: Density of the fibers of a composite material. Standard glass fiber has a fiber density of approximately 2600 kg/m3, while standard carbon fiber has a fiber density of approximately 1800 kg/m3.
                    units: kg/m^3
                    minimum : 0
                    maximum: 10000
                area_density_dry:
                    type: number
                    description: Aerial density of a fabric of a composite material.
                    units: kg/m^2
                    minimum : 0
                    maximum: 10000
                manufacturing_id:
                    type: integer
                    description: Flag to define the manufacturing process behind the laminate, for example 0 - coating, 1 - sandwich filler , 2 - shell skin, 3 - shear webs, 4 - spar caps, 5 - TE reinf.
                    units: dimensionless
                    enum: [0,1,2,3,4,5]
                waste:
                    type: number
                    description: Fraction of material that ends up wasted during manufacturing.
                    units: dimensionless
                    minimum : 0
                    maximum: 1
                roll_mass:
                    type: number
                    description: Mass of a fabric roll.
                    units: kg
                    minimum : 0
                    maximum: 10000
                GIc:
                    type: number
                    description: Mode 1 critical energy-release rate.
                    units: J/m^2
                GIIc:
                    type: number
                    description: Mode 2 critical energy-release rate.
                    units: J/m^2
                alp0:
                    type: number
                    description: Fracture angle under pure transverse compression.
                    units: deg
                A:
                    description: Fatigue S/N curve fitting parameter S=A*N^(-1/m). An array can be defined as a function of R (for composites) or as a function of number of cycles N (for multi-segment S-N curves, such as for metals).
                    oneOf:
                        - type: number
                          units: dimensionless
                          minimum: 0
                          default: 0.0
                        - type: array
                          items:
                            type: number
                            units: dimensionless
                            uniqueItems: false
                            minimum: 0
                            default: 0.0
                m:
                    description: Fatigue S/N curve fitting parameter S=A*N^(-1/m). An array can be defined as a function of R (for composites) or as a function of number of cycles N (for multi-segment S-N curves, such as for metals).
                    oneOf:
                        - type: number
                          units: dimensionless
                          minimum: 0
                          default: 1.0
                        - type: array
                          items:
                            type: number
                            units: dimensionless
                            uniqueItems: false
                            minimum: 0
                            maximum: 1000
                            default: 1.0
                R:
                    description: Fatigue stress ratio. An array can be defined to build Goodman-correction diagrams. 
                    oneOf:
                        - type: number
                          units: dimensionless
                          default: -1.0
                        - type: array
                          items:
                            type: number
                            units: dimensionless
                            uniqueItems: false
                            minimum: -100
                            maximum: 100
                            default: -1.0
                N:
                    description: Number of cycles for fatigue failure. An array can be defined to support multi-segment S-N curves such as for metals. 
                    oneOf:
                        - type: integer
                          units: dimensionless
                          default: 1
                        - type: array
                          items:
                            type: integer
                            units: dimensionless
                            uniqueItems: false
                            minimum: 1
                            maximum: 1e+10
                            default: 1
    control:
        # additionalProperties: True
        type: object
        description: Dictionary reporting the data describing the wind turbine controller
        required:
            - supervisory
            - torque
            - pitch
        properties:
            supervisory:
                type: object
                required:
                    - Vin
                    - Vout
                    - maxTS
                properties:
                    Vin:
                        type: number
                        description: Cut-in wind speed of the wind turbine.
                        units: m/s
                        minimum: 0
                        maximum: 10
                    Vout:
                        type: number
                        description: Cut-out wind speed of the wind turbine.
                        units: m/s
                        minimum: 0
                        maximum: 50
                    maxTS:
                        type: number
                        description: Maximum allowable blade tip speed.
                        units: m/s
                        minimum: 60
                        maximum: 120
            pitch:
                # additionalProperties: True
                type: object
                required:
                    - max_pitch_rate
                properties:
                    min_pitch:
                        type: number
                        description: Minimum pitch angle, where the default is 0 deg
                        units: deg
                        minimum: -10.0
                        maximum: 90.
                        default: 0.0
                    max_pitch:
                        type: number
                        description: Maximum pitch angle, where the default is 90 deg
                        units: deg
                        minimum: 10.
                        maximum: 120.
                        default: 90.
                    max_pitch_rate:
                        type: number
                        description: Maximum pitch rate of the rotor blades.
                        units: deg/s
                        minimum: 0
                        maximum: 30.
                    ps_percent:
                        type: number
                        description: Nondimensional factor shaving peak thrust. 1 means no peak thrust shaving
                        minimum: 0
                        default: 0.8
                        maximum: 1.
            torque:
                # additionalProperties: True
                type: object
                required:
                    - tsr
                    - VS_minspd
                properties:
                    max_torque_rate:
                        type: number
                        description: Maximum torque rate of the wind turbine generator.
                        units: N*m/s
                        minimum: 1000
                        maximum: 100000000
                    tsr:
                        type: number
                        description: Rated tip speed ratio of the wind turbine. As default, it is maintained constant in region II.
                        units: dimensionless
                        minimum: 0
                        maximum: 15
                    VS_minspd:
                        type: number
                        description: Minimum rotor speed.
                        units: rpm
                        minimum: 0
                        maximum: 20.
                    VS_maxspd:
                        type: number
                        description: Maximum rotor speed.
                        units: rpm
                        minimum: 0
                        default: 100.
            yaw:
                type: object
                description: Yaw system data.
                required:
                    - yaw_rate
                properties:
                    yaw_rate:
                        type: number
                        description: Maximum yaw rate of the wind turbine.
                        units: deg/s
                        minimum: 0
                        maximum: 30.
                        default: 1.
    outputs:
        type: object
        description: Modal response and loads and performance metrics describing the turbine
        properties:
            solver:
                type: string
                description: Name and version of the numerical solver used to generate the outputs
            cases:
                type: array
                description: Data points where outputs are computed at varying wind speed, rotor speed, etc.
                items:
                    type: object
                    properties:
                        configuration:
                            type: object
                            properties:
                                wind_speed:
                                    type: number
                                    description: Average wind speed measured at hub height corresponding to the outputs
                                    units: m/s
                                    minimum: 0.
                                    maximum: 200.
                                rotor_speed:
                                    type: number
                                    description: Rotor speed corresponding to the outputs
                                    units: rpm
                                    minimum: 0.
                                    maximum: 200.
                                blade_pitch:
                                    type: number
                                    description: Collective blade pitch angle corresponding to the outputs
                                    units: deg
                                    minimum: 0.
                                    maximum: 90.
                                tip_speed_ratio:
                                    type: number
                                    description: Rotor tip speed ratio corresponding to the outputs
                                    minimum: 0.
                                    maximum: 50.
                        integrated:
                            type: object
                            description: Outputs integrated along blade span
                            properties:
                                mechanical_power:
                                    type: number
                                    description: Mechanical power of the rotor measured at the high speed shaft
                                    units: W
                                electrical_power:
                                    type: number
                                    description: Eelectrical power of the rotor measured at the output of the generator
                                    units: W
                                generator_torque:
                                    type: number
                                    description: Electrical torque of the generator
                                    units: N*m
                                rotor_thrust:
                                    type: number
                                    description: Aerodynamic thrust of the rotor measured at the hub
                                    units: N
                                rotor_torque:
                                    type: number
                                    description: Mechanical torque of the rotor measured at the hub
                                    units: N*m
                        distributed:
                            type: object
                            description: Outputs distributed along blade span
                            properties:
                                aero_force_axial:
                                    type: object
                                    description: Aerodynamic loading along the axial rotor direction
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/force"
                                aero_force_tangential:
                                    type: object
                                    description: Aerodynamic loading along the tangential rotor direction
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/force"
                                blade_translation_deflection_x_pitching:
                                    type: object
                                    description: Blade deflection with respect to the undeflected configuration along the x axis for the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/length"
                                blade_translation_deflection_y_pitching:
                                    type: object
                                    description: Blade deflection with respect to the undeflected configuration along the y axis for the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/length"
                                blade_translation_deflection_z_pitching:
                                    type: object
                                    description: Blade deflection with respect to the undeflected configuration along the z axis for the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/angle"
                                blade_rotation_deflection_z_pitching:
                                    type: object
                                    description: Blade rotation with respect to the undeflected configuration along the z axis for the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/length"
                                blade_fx_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction force along the x axis (edgewise shear). The force follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/force"
                                blade_fy_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction force along the y axis (flapwise shear). The force follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/force"
                                blade_fz_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction force along the z axis (axial). The force follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/force"
                                blade_mx_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction moment along the x axis (flapwise moment). The moment follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/moment"
                                blade_my_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction moment along the y axis (edgewise moment). The moment follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/moment"
                                blade_mz_pitching:
                                    type: object
                                    description: Distribution along blade span of the reaction moment along the z axis (torsional moment). The moment follows the pitching blade root coordinate system
                                    properties:
                                        grid:
                                            $ref: "#/definitions/distributed_data/grid_nd"
                                        values:
                                            $ref: "#/definitions/distributed_data/moment"
                        frequency_undamped:
                            type: array
                            description: Undamped natural frequencies of the system
                            items:
                                type: number
                                units: Hz
                                minimum: 0.
                                uniqueItems: false
                        damping_ratio:
                            type: array
                            description: Critical damping ratios of the modes characterizing the system
                            items:
                                type: number
                                minimum: 0.
                                uniqueItems: false

definitions:
    distributed_data:
        grid_nd:
            type: array
            default: [0.0, 1.0]
            items:
                type: number
                units: dimensionless
                minItems: 2
                minimum: 0.0
                maximum: 1.0
                uniqueItems: true
        grid_2d:
            type: array
            description: A 2D array specifying the grid points where the first row is the spanwise grid and following rows the grid along the arc of the airfoil.
            items:
                type: array
                units: dimensionless
                items:
                    type: number
                    minItems: 2
                    units: dimensionless
                minItems: 2
        grid_aoa:
            type: array
            description: Grid of angles of attack to describe polars
            default: [-180, 180]
            items:
                type: number
                units: deg
                minItems: 2
                minimum: -180
                maximum:  180
                uniqueItems: true
        polar_coeff:
            type: array
            description: Lift, drag and moment coefficients
            items:
                type: number
                units: dimensionless
                minItems: 2
                uniqueItems: false
        nd:
            type: array
            description: Non dimensional quantity described along a beam and expressed non-dimensional
            default: [0.0, 0.0]
            items:
                type: number
                units: dimensionless
                minItems: 2
                uniqueItems: false
        length:
            type: array
            default: [0.0, 0.0]
            items:
                type: number
                units: m
                minItems: 2
                uniqueItems: false
        length2d:
            type: array
            description: An array specifying the thickness values on the 2D grid defined by the grid_2d field. Note that the thickness array has to contain one less row than the grid_2d field.
            items:
                type: array
                units: m
                items:
                    type: number
                    units: m
                    minItems: 2
            minItems: 2
        force:
            type: array
            description: Loading described along a beam, expressed in N per meter
            default: [0.0, 0.0]
            items:
                type: number
                units: N/m
                minItems: 2
                uniqueItems: false
        moment:
            type: array
            description: Loading described along a beam, expressed in N m per meter
            default: [0.0, 0.0]
            items:
                type: number
                units: N/m
                minItems: 2
                uniqueItems: false
        angle:
            type: array
            default: [0.0, 0.0]
            items:
                type: number
                units: deg
                minItems: 2
                uniqueItems: false
        nd_arc_position:
            type: object
            description: Non-dimensional location of the point along the non-dimensional arc length
            properties:
                grid:
                    $ref: "#/definitions/distributed_data/grid_nd"
                values:
                    type: array
                    description: Grid along an arc length, expressed non dimensionally where 0 is the trailing edge on the suction side and 1 is the trailing edge on the pressure side. The arc starts and ends at the mid-point of the trailing edge in the case of open trailing edges.
                    items:
                        type: number
                        units: dimensionless
                        minItems: 2
                        minimum: -1.0
                        maximum: 1.0
                        uniqueItems: true
            required: [grid, values]
    anchor_ref:
        type: object
        properties:
            anchor:
                type: object
                properties:
                    name: 
                        type: string
                    handle: 
                        type: string
                required: [name, handle]
        required: [anchor]
    beam:
        type: object
        description: The equivalent elastic properties of a beam are defined in `elastic_properties`. Here, 6x6 stiffness and mass matrices are defined. Out of 36 entries of the matrices, given the symmetry, the yaml file requires the definition of only 21 values as inputs for the stiffness matrix, whereas the inertia matrix is defined in terms of unit mass, coordinates of the center of mass, and mass moments of inertia.
        required:
            - stiffness_matrix
            - inertia_matrix
            - structural_damping
        properties:
            stiffness_matrix:
                type: object
                required:
                    - grid
                    - K44
                    - K55
                properties:
                    grid:
                        $ref: "#/definitions/distributed_data/grid_nd"
                    K11:
                        type: array
                        description: Distribution of the K11 element of the stiffness matrix along blade span. K11 corresponds to the shear stiffness along the x axis (in a blade, x points to the trailing edge)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K22:
                        type: array
                        description: Distribution of the K22 element of the stiffness matrix along blade span. K22 corresponds to the shear stiffness along the y axis (in a blade, y points to the suction side)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K33:
                        type: array
                        description: Distribution of the K33 element of the stiffness matrix along blade span. K33 corresponds to the axial stiffness along the z axis (in a blade, z runs along the span and points to the tip)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K44:
                        type: array
                        description: Distribution of the K44 element of the stiffness matrix along blade span. K44 corresponds to the bending stiffness around the x axis (in a blade, x points to the trailing edge and K44 corresponds to the flapwise stiffness)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K55:
                        type: array
                        description: Distribution of the K55 element of the stiffness matrix along blade span. K55 corresponds to the bending stiffness around the y axis (in a blade, y points to the suction side and K55 corresponds to the edgewise stiffness)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K66:
                        type: array
                        description: Distribution of K66 element of the stiffness matrix along blade span. K66 corresponds to the torsional stiffness along the z axis (in a blade, z runs along the span and points to the tip)
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K12:
                        type: array
                        description: Distribution of the K12 element of the stiffness matrix along blade span. K12 is a cross term between shear terms
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K13:
                        type: array
                        description: Distribution of the K13 element of the stiffness matrix along blade span. K13 is a cross term shear - axial
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K14:
                        type: array
                        description: Distribution of the K14 element of the stiffness matrix along blade span. K14 is a cross term shear - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K15:
                        type: array
                        description: Distribution of the K15 element of the stiffness matrix along blade span. K15 is a cross term shear - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K16:
                        type: array
                        description: Distribution of the K16 element of the stiffness matrix along blade span. K16 is a cross term shear - torsion
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K23:
                        type: array
                        description: Distribution of the K23 element of the stiffness matrix along blade span. K23 is a cross term shear - axial
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K24:
                        type: array
                        description: Distribution of the K24 element of the stiffness matrix along blade span. K24 is a cross term shear - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K25:
                        type: array
                        description: Distribution of the K25 element of the stiffness matrix along blade span. K25 is a cross term shear - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K26:
                        type: array
                        description: Distribution of the K26 element of the stiffness matrix along blade span. K26 is a cross term shear - torsion
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K34:
                        type: array
                        description: Distribution of the K34 element of the stiffness matrix along blade span. K34 is a cross term axial - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K35:
                        type: array
                        description: Distribution of the K35 element of the stiffness matrix along blade span. K35 is a cross term axial - bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K36:
                        type: array
                        description: Distribution of the K36 element of the stiffness matrix along blade span. K36 is a cross term axial - torsion
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K45:
                        type: array
                        description: Distribution of the K45 element of the stiffness matrix along blade span. K45 is a cross term flapwise bending - edgewise bending
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K46:
                        type: array
                        description: Distribution of the K46 element of the stiffness matrix along blade span. K46 is a cross term flapwise bending - torsion
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
                    K56:
                        type: array
                        description: Distribution of the K56 element of the stiffness matrix along blade span. K56 is a cross term edgewise bending - torsion
                        default: [0.0, 0.0]
                        items:
                            type: number
                            minItems: 2
                            uniqueItems: false
            inertia_matrix:
                type: object
                required:
                    - grid
                    - mass
                properties:
                    grid:
                        $ref: "#/definitions/distributed_data/grid_nd"
                    mass:
                        type: array
                        description: Mass per unit length along the beam, expressed in kilogram per meter
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg/m
                            minItems: 2
                            uniqueItems: false
                    cm_x:
                        description: Distance between the reference axis and the center of mass along the x axis
                        $ref: "#/definitions/distributed_data/length"
                    cm_y:
                        description: Distance between the reference axis and the center of mass along the y axis
                        $ref: "#/definitions/distributed_data/length"
                    i_edge:
                        description: Edgewise mass moment of inertia per unit span (around y axis)
                        type: array
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg*m^2
                            minimum: 0
                    i_flap:
                        description: Flapwise mass moment of inertia per unit span (around x axis)
                        type: array
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg*m^2
                            minimum: 0
                    i_plr:
                        description: Polar moment of inertia per unit span (around z axis). Please note that for beam-like structures iplr must be equal to iedge plus iflap.
                        type: array
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg*m^2
                            minimum: 0
                    i_cp:
                        description: Sectional cross-product of inertia per unit span (cross term x y)
                        type: array
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg*m^2
                            # minimum: 0 # not 100% sure, but i_cp could be negative
            structural_damping:
                description: Structural damping of the beam. For now, viscous damping is included
                type: object
                properties:
                    mu:
                        type: array
                        default: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
                        description: Six damping coefficients to model viscous damping, where the damping forces are proportional to the strain rate
                        items:
                            type: number
                            minItems: 6
                            maxItems: 6
                            uniqueItems: false
            point_mass:
                type: object
                required:
                    - grid
                    - mass
                properties:
                    grid:
                        $ref: "#/definitions/distributed_data/grid_nd"
                    mass:
                        type: array
                        description: Point masses distributed along the beam, expressed in kilogram. These can be used to model features such as flanges.
                        default: [0.0, 0.0]
                        items:
                            type: number
                            units: kg
                            minItems: 2
                            uniqueItems: false
    rigid_body:
        type: object
        required:
            - location
            - mass
            - inertia
        properties:
            mass:
                type: number
                description: Mass of the component modeled as a rigid body.
                units: kg
                minimum: 0.
                default: 0.
            inertia:
                type: array
                description: Mass moment of inertia of the component modeled as a rigid body.
                default: [0., 0., 0., 0., 0., 0.]
                items:
                    type: number
                    units: kg*m^2
                    minItems: 6
                    maxItems: 6
                    uniqueItems: false
            location:
                type: array
                description: Location of the rigid body with respect to the coordinate system.
                default: [0., 0., 0.]
                items:
                    type: number
                    units: m
                    minItems: 3
                    maxItems: 3
                    uniqueItems: false
    filter:
        type: object
        description: Linear filter, could be a LPF, HPF, NF, INF, or user_defined
        required:
            - filt_type
            #- filt_def
        properties:
            filt_type:
                type: string
                description: Type of filter used, could be a LPF, HPF, NF, INF, or user_defined
                enum:
                    - LPF
                    - HPF
                    - NF
                    - INF
                    - user_defined
            # Seems unfinished - kenloen
            #filt_def:
            #LPF:
            #    type: object
            #    description: Low pass filter
            #    required:
            #        - omega
            #        - order
            #    optional:
            #        - damping
            #HPF:
            #NF:
            #INF:
            user_defined:
                type: object
                description: User defined filter
                required:
                    - num
                    - den
                optional:
                    - dt
                properties:
                    num:
                        type: array
                        description: Numerator coefficients of linear filter
                        items:
                            type: number
                            units: dimensionless
                            minItems: 0
                            uniqueItems: false
                    den:
                        type: array
                        description: Numerator coefficients of linear filter
                        items:
                            type: number
                            units: dimensionless
                            minItems: 1
                            uniqueItems: false
                    dt:
                        type: number
                        description: Sampling rate of filter, -1 for continuous   # DZ: will probably convert all to dt of simulation... not sure how to handle this
                        minimum: -1

    state_space:
        type: object
        description: Linear state space model
        required:
            - ss_A
            - ss_B
            - ss_C
            - ss_D
        properties:
            ss_A:
                type: array
                description: A matrix of linear state space model, flattened with n_states^2 elements
                items:
                    type: number
                    minItems: 1
                    uniqueItems: false
            ss_B:
                type: array
                description: B matrix of linear state space model, flattened with n_states x n_inputs elements
                items:
                    type: number
                    minItems: 1
                    uniqueItems: false
            ss_C:
                type: array
                description: C matrix of linear state space model, flattened with n_outputs x n_states elements
                items:
                    type: number
                    minItems: 1
                    uniqueItems: false
            ss_D:
                type: array
                description: D matrix of linear state space model, flattened with n_outputs x n_inputs elements
                items:
                    type: number
                    minItems: 1
                    uniqueItems: false
            # DZ: might be a good idea to check the number of states
            ss_dt:
                type: number
                description: Sampling rate of filter, -1 for continuous   # DZ: will probably convert all to dt of simulation... not sure how to handle this
                minimum: -1

    timeseries:
        type: object
        description: Array of time, value pairs  # DZ: can we check that the number of elements are equal?
        required:
            - time
            - value
        optional:
            - filename
        properties:
            time:
                type: array
                description: Time in timeseries
                items:
                    type: number
                    units: s
                    minItems: 1
                    uniqueItems: true   # probably?
            value:
                type: array
                description: Value in timeseries
                items:
                    type: number
                    units: dimensionless  #any
                    minItems: 1
                    uniqueItems: false
                    # can we check that number of elements are equal?
            filename:
                type: string
                description: Name of file with timeseries data

    activator:
        type: object
        description: Gain used to enable/disable control elements, can be used partially
        required:
            - wind_speeds
            - act_gain
        properties:
            wind_speeds:
                type: array
                description: Array of wind speed breakpoints for activators
                items:
                    type: number
                    units: m/s
                    minItems: 1
                    uniqueItems: true
            act_gain:
                type: array
                description: Array of gains from 0 to 1, enabling/disabling control element
                items:
                    type: number
                    units: dimensionless
                    minItems: 1
                    uniqueItems: false
                    minimum: 0
                    maximum: 1
