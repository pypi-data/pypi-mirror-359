# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from mempool import mempool_pb2 as mempool_dot_mempool__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in mempool/mempool_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MemoryPoolStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.session = channel.unary_stream(
                '/wool._protobuf.mempool.MemoryPool/session',
                request_serializer=mempool_dot_mempool__pb2.SessionRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.SessionResponse.FromString,
                _registered_method=True)
        self.acquire = channel.unary_unary(
                '/wool._protobuf.mempool.MemoryPool/acquire',
                request_serializer=mempool_dot_mempool__pb2.AcquireRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.AcquireResponse.FromString,
                _registered_method=True)
        self.put = channel.unary_unary(
                '/wool._protobuf.mempool.MemoryPool/put',
                request_serializer=mempool_dot_mempool__pb2.PutRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.PutResponse.FromString,
                _registered_method=True)
        self.post = channel.unary_unary(
                '/wool._protobuf.mempool.MemoryPool/post',
                request_serializer=mempool_dot_mempool__pb2.PostRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.PostResponse.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/wool._protobuf.mempool.MemoryPool/get',
                request_serializer=mempool_dot_mempool__pb2.GetRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.GetResponse.FromString,
                _registered_method=True)
        self.release = channel.unary_unary(
                '/wool._protobuf.mempool.MemoryPool/release',
                request_serializer=mempool_dot_mempool__pb2.ReleaseRequest.SerializeToString,
                response_deserializer=mempool_dot_mempool__pb2.ReleaseResponse.FromString,
                _registered_method=True)


class MemoryPoolServicer(object):
    """Missing associated documentation comment in .proto file."""

    def session(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def acquire(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def release(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MemoryPoolServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'session': grpc.unary_stream_rpc_method_handler(
                    servicer.session,
                    request_deserializer=mempool_dot_mempool__pb2.SessionRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.SessionResponse.SerializeToString,
            ),
            'acquire': grpc.unary_unary_rpc_method_handler(
                    servicer.acquire,
                    request_deserializer=mempool_dot_mempool__pb2.AcquireRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.AcquireResponse.SerializeToString,
            ),
            'put': grpc.unary_unary_rpc_method_handler(
                    servicer.put,
                    request_deserializer=mempool_dot_mempool__pb2.PutRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.PutResponse.SerializeToString,
            ),
            'post': grpc.unary_unary_rpc_method_handler(
                    servicer.post,
                    request_deserializer=mempool_dot_mempool__pb2.PostRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.PostResponse.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=mempool_dot_mempool__pb2.GetRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.GetResponse.SerializeToString,
            ),
            'release': grpc.unary_unary_rpc_method_handler(
                    servicer.release,
                    request_deserializer=mempool_dot_mempool__pb2.ReleaseRequest.FromString,
                    response_serializer=mempool_dot_mempool__pb2.ReleaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wool._protobuf.mempool.MemoryPool', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('wool._protobuf.mempool.MemoryPool', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MemoryPool(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def session(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/session',
            mempool_dot_mempool__pb2.SessionRequest.SerializeToString,
            mempool_dot_mempool__pb2.SessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def acquire(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/acquire',
            mempool_dot_mempool__pb2.AcquireRequest.SerializeToString,
            mempool_dot_mempool__pb2.AcquireResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/put',
            mempool_dot_mempool__pb2.PutRequest.SerializeToString,
            mempool_dot_mempool__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/post',
            mempool_dot_mempool__pb2.PostRequest.SerializeToString,
            mempool_dot_mempool__pb2.PostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/get',
            mempool_dot_mempool__pb2.GetRequest.SerializeToString,
            mempool_dot_mempool__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def release(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wool._protobuf.mempool.MemoryPool/release',
            mempool_dot_mempool__pb2.ReleaseRequest.SerializeToString,
            mempool_dot_mempool__pb2.ReleaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
