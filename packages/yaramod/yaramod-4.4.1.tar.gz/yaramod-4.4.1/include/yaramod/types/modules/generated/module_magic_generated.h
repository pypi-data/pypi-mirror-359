/**
 * @file modules/generated/module_magic_generated.h
 * @brief Definition of module_magic written in array. Generated by json_to_array.py
 * @copyright (c) 2021 Avast Software, licensed under the MIT license
 */
 #pragma once

 #include "yaramod/types/modules/module_content.h"

 namespace yaramod {

 namespace modules {

 class Gmodule_magic : public ModuleContent
 {
 public:
    static constexpr std::size_t module_content_size = 497;
    static constexpr const char* module_content_parts[] = {
"{\"kind\": \"struct\", \"name\": \"magic\", \"attributes\": [{\"kind\": \"function\", \"name\": \"mime_type\", \"return_type\": \"s\", \"overloads\": [{\"arguments\": [], \"documentation\": \"Function returning a string with the type of the file. Example: ```magic.type() contains \\\"PDF\\\"```\"}]}, {\"kind\": \"function\", \"name\": \"type\", \"return_type\": \"s\", \"overloads\": [{\"arguments\": [], \"documentation\": \"Function returning a string with the MIME type of the file. Example: ```magic.mime_type() == \\\"application/pdf\\\"```\"}]}]}"
    };

    Gmodule_magic() : ModuleContent("magic")
    {
        std::string content;
        content.reserve(module_content_size);
        for (std::size_t i = 0; i < 1; ++i)
            content += module_content_parts[i];
        setContent(std::move(content));
    }
 };

 } // namespace modules

 } // namespace yaramod
