[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yrwatertemperatures"
version = "0.9.8-beta"
description = "A Python client to fetch water temperatures in Norway from YR.no."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "JÃ¸rn Pettersen", email = "joern.pettersen@gmail.com"}
]
keywords = ["norway", "water", "temperature", "yr", "weather", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Typing :: Typed",
]
dependencies = [
    "requests>=2.20.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "aioresponses>=0.7.4",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "aioresponses>=0.7.4",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

[project.urls]
Homepage = "https://github.com/jornpe/yr-norwegian-water-temperatures"
Documentation = "https://github.com/jornpe/yr-norwegian-water-temperatures#readme"
Repository = "https://github.com/jornpe/yr-norwegian-water-temperatures.git"
"Bug Tracker" = "https://github.com/jornpe/yr-norwegian-water-temperatures/issues"
Changelog = "https://github.com/jornpe/yr-norwegian-water-temperatures/releases"

[tool.setuptools]
packages = ["yrwatertemperatures"]

[tool.setuptools.package-data]
yrwatertemperatures = ["py.typed"]

# Black formatting
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["yrwatertemperatures"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# mypy type checking
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Coverage.py configuration
[tool.coverage.run]
source = ["yrwatertemperatures"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
